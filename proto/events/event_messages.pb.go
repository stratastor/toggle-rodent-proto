// Copyright 2025 The StrataSTOR Authors and Contributors
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/events/event_messages.proto

package events

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Event severity levels
type EventLevel int32

const (
	EventLevel_EVENT_LEVEL_UNSPECIFIED EventLevel = 0
	EventLevel_EVENT_LEVEL_INFO        EventLevel = 1
	EventLevel_EVENT_LEVEL_WARN        EventLevel = 2
	EventLevel_EVENT_LEVEL_ERROR       EventLevel = 3
	EventLevel_EVENT_LEVEL_CRITICAL    EventLevel = 4
	EventLevel_EVENT_LEVEL_ESSENTIAL   EventLevel = 5
	EventLevel_EVENT_LEVEL_DEBUG       EventLevel = 6
	EventLevel_EVENT_LEVEL_TRACE       EventLevel = 7
)

// Enum value maps for EventLevel.
var (
	EventLevel_name = map[int32]string{
		0: "EVENT_LEVEL_UNSPECIFIED",
		1: "EVENT_LEVEL_INFO",
		2: "EVENT_LEVEL_WARN",
		3: "EVENT_LEVEL_ERROR",
		4: "EVENT_LEVEL_CRITICAL",
		5: "EVENT_LEVEL_ESSENTIAL",
		6: "EVENT_LEVEL_DEBUG",
		7: "EVENT_LEVEL_TRACE",
	}
	EventLevel_value = map[string]int32{
		"EVENT_LEVEL_UNSPECIFIED": 0,
		"EVENT_LEVEL_INFO":        1,
		"EVENT_LEVEL_WARN":        2,
		"EVENT_LEVEL_ERROR":       3,
		"EVENT_LEVEL_CRITICAL":    4,
		"EVENT_LEVEL_ESSENTIAL":   5,
		"EVENT_LEVEL_DEBUG":       6,
		"EVENT_LEVEL_TRACE":       7,
	}
)

func (x EventLevel) Enum() *EventLevel {
	p := new(EventLevel)
	*p = x
	return p
}

func (x EventLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_events_event_messages_proto_enumTypes[0].Descriptor()
}

func (EventLevel) Type() protoreflect.EnumType {
	return &file_proto_events_event_messages_proto_enumTypes[0]
}

func (x EventLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventLevel.Descriptor instead.
func (EventLevel) EnumDescriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{0}
}

// Event domain categories
type EventCategory int32

const (
	EventCategory_EVENT_CATEGORY_UNSPECIFIED   EventCategory = 0
	EventCategory_EVENT_CATEGORY_SYSTEM        EventCategory = 1
	EventCategory_EVENT_CATEGORY_STORAGE       EventCategory = 2
	EventCategory_EVENT_CATEGORY_NETWORK       EventCategory = 3
	EventCategory_EVENT_CATEGORY_SECURITY      EventCategory = 4
	EventCategory_EVENT_CATEGORY_SERVICE       EventCategory = 5
	EventCategory_EVENT_CATEGORY_IDENTITY      EventCategory = 6  // AD/LDAP user/group/computer management
	EventCategory_EVENT_CATEGORY_ACCESS        EventCategory = 7  // ACL, permissions, access control
	EventCategory_EVENT_CATEGORY_SHARING       EventCategory = 8  // SMB/NFS shares, connections
	EventCategory_EVENT_CATEGORY_USAGE         EventCategory = 9  // Resource usage, quotas, consumption tracking
	EventCategory_EVENT_CATEGORY_DATA_TRANSFER EventCategory = 10 // ZFS transfers, data movement operations
)

// Enum value maps for EventCategory.
var (
	EventCategory_name = map[int32]string{
		0:  "EVENT_CATEGORY_UNSPECIFIED",
		1:  "EVENT_CATEGORY_SYSTEM",
		2:  "EVENT_CATEGORY_STORAGE",
		3:  "EVENT_CATEGORY_NETWORK",
		4:  "EVENT_CATEGORY_SECURITY",
		5:  "EVENT_CATEGORY_SERVICE",
		6:  "EVENT_CATEGORY_IDENTITY",
		7:  "EVENT_CATEGORY_ACCESS",
		8:  "EVENT_CATEGORY_SHARING",
		9:  "EVENT_CATEGORY_USAGE",
		10: "EVENT_CATEGORY_DATA_TRANSFER",
	}
	EventCategory_value = map[string]int32{
		"EVENT_CATEGORY_UNSPECIFIED":   0,
		"EVENT_CATEGORY_SYSTEM":        1,
		"EVENT_CATEGORY_STORAGE":       2,
		"EVENT_CATEGORY_NETWORK":       3,
		"EVENT_CATEGORY_SECURITY":      4,
		"EVENT_CATEGORY_SERVICE":       5,
		"EVENT_CATEGORY_IDENTITY":      6,
		"EVENT_CATEGORY_ACCESS":        7,
		"EVENT_CATEGORY_SHARING":       8,
		"EVENT_CATEGORY_USAGE":         9,
		"EVENT_CATEGORY_DATA_TRANSFER": 10,
	}
)

func (x EventCategory) Enum() *EventCategory {
	p := new(EventCategory)
	*p = x
	return p
}

func (x EventCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_events_event_messages_proto_enumTypes[1].Descriptor()
}

func (EventCategory) Type() protoreflect.EnumType {
	return &file_proto_events_event_messages_proto_enumTypes[1]
}

func (x EventCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventCategory.Descriptor instead.
func (EventCategory) EnumDescriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{1}
}

type SystemShutdownPayload_SystemShutdownOperation int32

const (
	SystemShutdownPayload_SYSTEM_SHUTDOWN_OPERATION_UNSPECIFIED SystemShutdownPayload_SystemShutdownOperation = 0
	SystemShutdownPayload_SYSTEM_SHUTDOWN_OPERATION_SHUTDOWN    SystemShutdownPayload_SystemShutdownOperation = 1
	SystemShutdownPayload_SYSTEM_SHUTDOWN_OPERATION_RESTART     SystemShutdownPayload_SystemShutdownOperation = 2
	SystemShutdownPayload_SYSTEM_SHUTDOWN_OPERATION_EMERGENCY   SystemShutdownPayload_SystemShutdownOperation = 3
)

// Enum value maps for SystemShutdownPayload_SystemShutdownOperation.
var (
	SystemShutdownPayload_SystemShutdownOperation_name = map[int32]string{
		0: "SYSTEM_SHUTDOWN_OPERATION_UNSPECIFIED",
		1: "SYSTEM_SHUTDOWN_OPERATION_SHUTDOWN",
		2: "SYSTEM_SHUTDOWN_OPERATION_RESTART",
		3: "SYSTEM_SHUTDOWN_OPERATION_EMERGENCY",
	}
	SystemShutdownPayload_SystemShutdownOperation_value = map[string]int32{
		"SYSTEM_SHUTDOWN_OPERATION_UNSPECIFIED": 0,
		"SYSTEM_SHUTDOWN_OPERATION_SHUTDOWN":    1,
		"SYSTEM_SHUTDOWN_OPERATION_RESTART":     2,
		"SYSTEM_SHUTDOWN_OPERATION_EMERGENCY":   3,
	}
)

func (x SystemShutdownPayload_SystemShutdownOperation) Enum() *SystemShutdownPayload_SystemShutdownOperation {
	p := new(SystemShutdownPayload_SystemShutdownOperation)
	*p = x
	return p
}

func (x SystemShutdownPayload_SystemShutdownOperation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SystemShutdownPayload_SystemShutdownOperation) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_events_event_messages_proto_enumTypes[2].Descriptor()
}

func (SystemShutdownPayload_SystemShutdownOperation) Type() protoreflect.EnumType {
	return &file_proto_events_event_messages_proto_enumTypes[2]
}

func (x SystemShutdownPayload_SystemShutdownOperation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SystemShutdownPayload_SystemShutdownOperation.Descriptor instead.
func (SystemShutdownPayload_SystemShutdownOperation) EnumDescriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{13, 0}
}

type SystemConfigChangePayload_SystemConfigOperation int32

const (
	SystemConfigChangePayload_SYSTEM_CONFIG_OPERATION_UNSPECIFIED SystemConfigChangePayload_SystemConfigOperation = 0
	SystemConfigChangePayload_SYSTEM_CONFIG_OPERATION_UPDATED     SystemConfigChangePayload_SystemConfigOperation = 1
	SystemConfigChangePayload_SYSTEM_CONFIG_OPERATION_RELOADED    SystemConfigChangePayload_SystemConfigOperation = 2
	SystemConfigChangePayload_SYSTEM_CONFIG_OPERATION_VALIDATED   SystemConfigChangePayload_SystemConfigOperation = 3
)

// Enum value maps for SystemConfigChangePayload_SystemConfigOperation.
var (
	SystemConfigChangePayload_SystemConfigOperation_name = map[int32]string{
		0: "SYSTEM_CONFIG_OPERATION_UNSPECIFIED",
		1: "SYSTEM_CONFIG_OPERATION_UPDATED",
		2: "SYSTEM_CONFIG_OPERATION_RELOADED",
		3: "SYSTEM_CONFIG_OPERATION_VALIDATED",
	}
	SystemConfigChangePayload_SystemConfigOperation_value = map[string]int32{
		"SYSTEM_CONFIG_OPERATION_UNSPECIFIED": 0,
		"SYSTEM_CONFIG_OPERATION_UPDATED":     1,
		"SYSTEM_CONFIG_OPERATION_RELOADED":    2,
		"SYSTEM_CONFIG_OPERATION_VALIDATED":   3,
	}
)

func (x SystemConfigChangePayload_SystemConfigOperation) Enum() *SystemConfigChangePayload_SystemConfigOperation {
	p := new(SystemConfigChangePayload_SystemConfigOperation)
	*p = x
	return p
}

func (x SystemConfigChangePayload_SystemConfigOperation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SystemConfigChangePayload_SystemConfigOperation) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_events_event_messages_proto_enumTypes[3].Descriptor()
}

func (SystemConfigChangePayload_SystemConfigOperation) Type() protoreflect.EnumType {
	return &file_proto_events_event_messages_proto_enumTypes[3]
}

func (x SystemConfigChangePayload_SystemConfigOperation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SystemConfigChangePayload_SystemConfigOperation.Descriptor instead.
func (SystemConfigChangePayload_SystemConfigOperation) EnumDescriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{14, 0}
}

type SystemUserPayload_SystemUserOperation int32

const (
	SystemUserPayload_SYSTEM_USER_OPERATION_UNSPECIFIED SystemUserPayload_SystemUserOperation = 0
	SystemUserPayload_SYSTEM_USER_OPERATION_CREATED     SystemUserPayload_SystemUserOperation = 1
	SystemUserPayload_SYSTEM_USER_OPERATION_DELETED     SystemUserPayload_SystemUserOperation = 2
	SystemUserPayload_SYSTEM_USER_OPERATION_MODIFIED    SystemUserPayload_SystemUserOperation = 3
	SystemUserPayload_SYSTEM_USER_OPERATION_LOCKED      SystemUserPayload_SystemUserOperation = 4
	SystemUserPayload_SYSTEM_USER_OPERATION_UNLOCKED    SystemUserPayload_SystemUserOperation = 5
)

// Enum value maps for SystemUserPayload_SystemUserOperation.
var (
	SystemUserPayload_SystemUserOperation_name = map[int32]string{
		0: "SYSTEM_USER_OPERATION_UNSPECIFIED",
		1: "SYSTEM_USER_OPERATION_CREATED",
		2: "SYSTEM_USER_OPERATION_DELETED",
		3: "SYSTEM_USER_OPERATION_MODIFIED",
		4: "SYSTEM_USER_OPERATION_LOCKED",
		5: "SYSTEM_USER_OPERATION_UNLOCKED",
	}
	SystemUserPayload_SystemUserOperation_value = map[string]int32{
		"SYSTEM_USER_OPERATION_UNSPECIFIED": 0,
		"SYSTEM_USER_OPERATION_CREATED":     1,
		"SYSTEM_USER_OPERATION_DELETED":     2,
		"SYSTEM_USER_OPERATION_MODIFIED":    3,
		"SYSTEM_USER_OPERATION_LOCKED":      4,
		"SYSTEM_USER_OPERATION_UNLOCKED":    5,
	}
)

func (x SystemUserPayload_SystemUserOperation) Enum() *SystemUserPayload_SystemUserOperation {
	p := new(SystemUserPayload_SystemUserOperation)
	*p = x
	return p
}

func (x SystemUserPayload_SystemUserOperation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SystemUserPayload_SystemUserOperation) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_events_event_messages_proto_enumTypes[4].Descriptor()
}

func (SystemUserPayload_SystemUserOperation) Type() protoreflect.EnumType {
	return &file_proto_events_event_messages_proto_enumTypes[4]
}

func (x SystemUserPayload_SystemUserOperation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SystemUserPayload_SystemUserOperation.Descriptor instead.
func (SystemUserPayload_SystemUserOperation) EnumDescriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{15, 0}
}

type StoragePoolPayload_StoragePoolOperation int32

const (
	StoragePoolPayload_STORAGE_POOL_OPERATION_UNSPECIFIED     StoragePoolPayload_StoragePoolOperation = 0
	StoragePoolPayload_STORAGE_POOL_OPERATION_CREATED         StoragePoolPayload_StoragePoolOperation = 1
	StoragePoolPayload_STORAGE_POOL_OPERATION_DELETED         StoragePoolPayload_StoragePoolOperation = 2
	StoragePoolPayload_STORAGE_POOL_OPERATION_EXPANDED        StoragePoolPayload_StoragePoolOperation = 3
	StoragePoolPayload_STORAGE_POOL_OPERATION_SCRUB_STARTED   StoragePoolPayload_StoragePoolOperation = 4
	StoragePoolPayload_STORAGE_POOL_OPERATION_SCRUB_COMPLETED StoragePoolPayload_StoragePoolOperation = 5
	StoragePoolPayload_STORAGE_POOL_OPERATION_EXPORTED        StoragePoolPayload_StoragePoolOperation = 6
	StoragePoolPayload_STORAGE_POOL_OPERATION_IMPORTED        StoragePoolPayload_StoragePoolOperation = 7
)

// Enum value maps for StoragePoolPayload_StoragePoolOperation.
var (
	StoragePoolPayload_StoragePoolOperation_name = map[int32]string{
		0: "STORAGE_POOL_OPERATION_UNSPECIFIED",
		1: "STORAGE_POOL_OPERATION_CREATED",
		2: "STORAGE_POOL_OPERATION_DELETED",
		3: "STORAGE_POOL_OPERATION_EXPANDED",
		4: "STORAGE_POOL_OPERATION_SCRUB_STARTED",
		5: "STORAGE_POOL_OPERATION_SCRUB_COMPLETED",
		6: "STORAGE_POOL_OPERATION_EXPORTED",
		7: "STORAGE_POOL_OPERATION_IMPORTED",
	}
	StoragePoolPayload_StoragePoolOperation_value = map[string]int32{
		"STORAGE_POOL_OPERATION_UNSPECIFIED":     0,
		"STORAGE_POOL_OPERATION_CREATED":         1,
		"STORAGE_POOL_OPERATION_DELETED":         2,
		"STORAGE_POOL_OPERATION_EXPANDED":        3,
		"STORAGE_POOL_OPERATION_SCRUB_STARTED":   4,
		"STORAGE_POOL_OPERATION_SCRUB_COMPLETED": 5,
		"STORAGE_POOL_OPERATION_EXPORTED":        6,
		"STORAGE_POOL_OPERATION_IMPORTED":        7,
	}
)

func (x StoragePoolPayload_StoragePoolOperation) Enum() *StoragePoolPayload_StoragePoolOperation {
	p := new(StoragePoolPayload_StoragePoolOperation)
	*p = x
	return p
}

func (x StoragePoolPayload_StoragePoolOperation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StoragePoolPayload_StoragePoolOperation) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_events_event_messages_proto_enumTypes[5].Descriptor()
}

func (StoragePoolPayload_StoragePoolOperation) Type() protoreflect.EnumType {
	return &file_proto_events_event_messages_proto_enumTypes[5]
}

func (x StoragePoolPayload_StoragePoolOperation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StoragePoolPayload_StoragePoolOperation.Descriptor instead.
func (StoragePoolPayload_StoragePoolOperation) EnumDescriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{16, 0}
}

type StorageDatasetPayload_StorageDatasetOperation int32

const (
	StorageDatasetPayload_STORAGE_DATASET_OPERATION_UNSPECIFIED      StorageDatasetPayload_StorageDatasetOperation = 0
	StorageDatasetPayload_STORAGE_DATASET_OPERATION_CREATED          StorageDatasetPayload_StorageDatasetOperation = 1
	StorageDatasetPayload_STORAGE_DATASET_OPERATION_DELETED          StorageDatasetPayload_StorageDatasetOperation = 2
	StorageDatasetPayload_STORAGE_DATASET_OPERATION_MOUNTED          StorageDatasetPayload_StorageDatasetOperation = 3
	StorageDatasetPayload_STORAGE_DATASET_OPERATION_UNMOUNTED        StorageDatasetPayload_StorageDatasetOperation = 4
	StorageDatasetPayload_STORAGE_DATASET_OPERATION_PROPERTY_CHANGED StorageDatasetPayload_StorageDatasetOperation = 5
)

// Enum value maps for StorageDatasetPayload_StorageDatasetOperation.
var (
	StorageDatasetPayload_StorageDatasetOperation_name = map[int32]string{
		0: "STORAGE_DATASET_OPERATION_UNSPECIFIED",
		1: "STORAGE_DATASET_OPERATION_CREATED",
		2: "STORAGE_DATASET_OPERATION_DELETED",
		3: "STORAGE_DATASET_OPERATION_MOUNTED",
		4: "STORAGE_DATASET_OPERATION_UNMOUNTED",
		5: "STORAGE_DATASET_OPERATION_PROPERTY_CHANGED",
	}
	StorageDatasetPayload_StorageDatasetOperation_value = map[string]int32{
		"STORAGE_DATASET_OPERATION_UNSPECIFIED":      0,
		"STORAGE_DATASET_OPERATION_CREATED":          1,
		"STORAGE_DATASET_OPERATION_DELETED":          2,
		"STORAGE_DATASET_OPERATION_MOUNTED":          3,
		"STORAGE_DATASET_OPERATION_UNMOUNTED":        4,
		"STORAGE_DATASET_OPERATION_PROPERTY_CHANGED": 5,
	}
)

func (x StorageDatasetPayload_StorageDatasetOperation) Enum() *StorageDatasetPayload_StorageDatasetOperation {
	p := new(StorageDatasetPayload_StorageDatasetOperation)
	*p = x
	return p
}

func (x StorageDatasetPayload_StorageDatasetOperation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StorageDatasetPayload_StorageDatasetOperation) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_events_event_messages_proto_enumTypes[6].Descriptor()
}

func (StorageDatasetPayload_StorageDatasetOperation) Type() protoreflect.EnumType {
	return &file_proto_events_event_messages_proto_enumTypes[6]
}

func (x StorageDatasetPayload_StorageDatasetOperation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StorageDatasetPayload_StorageDatasetOperation.Descriptor instead.
func (StorageDatasetPayload_StorageDatasetOperation) EnumDescriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{17, 0}
}

type StorageSnapshotPayload_StorageSnapshotOperation int32

const (
	StorageSnapshotPayload_STORAGE_SNAPSHOT_OPERATION_UNSPECIFIED StorageSnapshotPayload_StorageSnapshotOperation = 0
	StorageSnapshotPayload_STORAGE_SNAPSHOT_OPERATION_CREATED     StorageSnapshotPayload_StorageSnapshotOperation = 1
	StorageSnapshotPayload_STORAGE_SNAPSHOT_OPERATION_DELETED     StorageSnapshotPayload_StorageSnapshotOperation = 2
	StorageSnapshotPayload_STORAGE_SNAPSHOT_OPERATION_ROLLED_BACK StorageSnapshotPayload_StorageSnapshotOperation = 3
	StorageSnapshotPayload_STORAGE_SNAPSHOT_OPERATION_CLONED      StorageSnapshotPayload_StorageSnapshotOperation = 4
)

// Enum value maps for StorageSnapshotPayload_StorageSnapshotOperation.
var (
	StorageSnapshotPayload_StorageSnapshotOperation_name = map[int32]string{
		0: "STORAGE_SNAPSHOT_OPERATION_UNSPECIFIED",
		1: "STORAGE_SNAPSHOT_OPERATION_CREATED",
		2: "STORAGE_SNAPSHOT_OPERATION_DELETED",
		3: "STORAGE_SNAPSHOT_OPERATION_ROLLED_BACK",
		4: "STORAGE_SNAPSHOT_OPERATION_CLONED",
	}
	StorageSnapshotPayload_StorageSnapshotOperation_value = map[string]int32{
		"STORAGE_SNAPSHOT_OPERATION_UNSPECIFIED": 0,
		"STORAGE_SNAPSHOT_OPERATION_CREATED":     1,
		"STORAGE_SNAPSHOT_OPERATION_DELETED":     2,
		"STORAGE_SNAPSHOT_OPERATION_ROLLED_BACK": 3,
		"STORAGE_SNAPSHOT_OPERATION_CLONED":      4,
	}
)

func (x StorageSnapshotPayload_StorageSnapshotOperation) Enum() *StorageSnapshotPayload_StorageSnapshotOperation {
	p := new(StorageSnapshotPayload_StorageSnapshotOperation)
	*p = x
	return p
}

func (x StorageSnapshotPayload_StorageSnapshotOperation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StorageSnapshotPayload_StorageSnapshotOperation) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_events_event_messages_proto_enumTypes[7].Descriptor()
}

func (StorageSnapshotPayload_StorageSnapshotOperation) Type() protoreflect.EnumType {
	return &file_proto_events_event_messages_proto_enumTypes[7]
}

func (x StorageSnapshotPayload_StorageSnapshotOperation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StorageSnapshotPayload_StorageSnapshotOperation.Descriptor instead.
func (StorageSnapshotPayload_StorageSnapshotOperation) EnumDescriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{18, 0}
}

type ServiceStatusPayload_ServiceStatusOperation int32

const (
	ServiceStatusPayload_SERVICE_STATUS_OPERATION_UNSPECIFIED  ServiceStatusPayload_ServiceStatusOperation = 0
	ServiceStatusPayload_SERVICE_STATUS_OPERATION_STARTED      ServiceStatusPayload_ServiceStatusOperation = 1
	ServiceStatusPayload_SERVICE_STATUS_OPERATION_STOPPED      ServiceStatusPayload_ServiceStatusOperation = 2
	ServiceStatusPayload_SERVICE_STATUS_OPERATION_RESTARTED    ServiceStatusPayload_ServiceStatusOperation = 3
	ServiceStatusPayload_SERVICE_STATUS_OPERATION_FAILED       ServiceStatusPayload_ServiceStatusOperation = 4
	ServiceStatusPayload_SERVICE_STATUS_OPERATION_HEALTH_CHECK ServiceStatusPayload_ServiceStatusOperation = 5
)

// Enum value maps for ServiceStatusPayload_ServiceStatusOperation.
var (
	ServiceStatusPayload_ServiceStatusOperation_name = map[int32]string{
		0: "SERVICE_STATUS_OPERATION_UNSPECIFIED",
		1: "SERVICE_STATUS_OPERATION_STARTED",
		2: "SERVICE_STATUS_OPERATION_STOPPED",
		3: "SERVICE_STATUS_OPERATION_RESTARTED",
		4: "SERVICE_STATUS_OPERATION_FAILED",
		5: "SERVICE_STATUS_OPERATION_HEALTH_CHECK",
	}
	ServiceStatusPayload_ServiceStatusOperation_value = map[string]int32{
		"SERVICE_STATUS_OPERATION_UNSPECIFIED":  0,
		"SERVICE_STATUS_OPERATION_STARTED":      1,
		"SERVICE_STATUS_OPERATION_STOPPED":      2,
		"SERVICE_STATUS_OPERATION_RESTARTED":    3,
		"SERVICE_STATUS_OPERATION_FAILED":       4,
		"SERVICE_STATUS_OPERATION_HEALTH_CHECK": 5,
	}
)

func (x ServiceStatusPayload_ServiceStatusOperation) Enum() *ServiceStatusPayload_ServiceStatusOperation {
	p := new(ServiceStatusPayload_ServiceStatusOperation)
	*p = x
	return p
}

func (x ServiceStatusPayload_ServiceStatusOperation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServiceStatusPayload_ServiceStatusOperation) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_events_event_messages_proto_enumTypes[8].Descriptor()
}

func (ServiceStatusPayload_ServiceStatusOperation) Type() protoreflect.EnumType {
	return &file_proto_events_event_messages_proto_enumTypes[8]
}

func (x ServiceStatusPayload_ServiceStatusOperation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServiceStatusPayload_ServiceStatusOperation.Descriptor instead.
func (ServiceStatusPayload_ServiceStatusOperation) EnumDescriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{19, 0}
}

type NetworkInterfacePayload_NetworkInterfaceOperation int32

const (
	NetworkInterfacePayload_NETWORK_INTERFACE_OPERATION_UNSPECIFIED  NetworkInterfacePayload_NetworkInterfaceOperation = 0
	NetworkInterfacePayload_NETWORK_INTERFACE_OPERATION_UP           NetworkInterfacePayload_NetworkInterfaceOperation = 1
	NetworkInterfacePayload_NETWORK_INTERFACE_OPERATION_DOWN         NetworkInterfacePayload_NetworkInterfaceOperation = 2
	NetworkInterfacePayload_NETWORK_INTERFACE_OPERATION_CONFIGURED   NetworkInterfacePayload_NetworkInterfaceOperation = 3
	NetworkInterfacePayload_NETWORK_INTERFACE_OPERATION_LINK_CHANGED NetworkInterfacePayload_NetworkInterfaceOperation = 4
)

// Enum value maps for NetworkInterfacePayload_NetworkInterfaceOperation.
var (
	NetworkInterfacePayload_NetworkInterfaceOperation_name = map[int32]string{
		0: "NETWORK_INTERFACE_OPERATION_UNSPECIFIED",
		1: "NETWORK_INTERFACE_OPERATION_UP",
		2: "NETWORK_INTERFACE_OPERATION_DOWN",
		3: "NETWORK_INTERFACE_OPERATION_CONFIGURED",
		4: "NETWORK_INTERFACE_OPERATION_LINK_CHANGED",
	}
	NetworkInterfacePayload_NetworkInterfaceOperation_value = map[string]int32{
		"NETWORK_INTERFACE_OPERATION_UNSPECIFIED":  0,
		"NETWORK_INTERFACE_OPERATION_UP":           1,
		"NETWORK_INTERFACE_OPERATION_DOWN":         2,
		"NETWORK_INTERFACE_OPERATION_CONFIGURED":   3,
		"NETWORK_INTERFACE_OPERATION_LINK_CHANGED": 4,
	}
)

func (x NetworkInterfacePayload_NetworkInterfaceOperation) Enum() *NetworkInterfacePayload_NetworkInterfaceOperation {
	p := new(NetworkInterfacePayload_NetworkInterfaceOperation)
	*p = x
	return p
}

func (x NetworkInterfacePayload_NetworkInterfaceOperation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NetworkInterfacePayload_NetworkInterfaceOperation) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_events_event_messages_proto_enumTypes[9].Descriptor()
}

func (NetworkInterfacePayload_NetworkInterfaceOperation) Type() protoreflect.EnumType {
	return &file_proto_events_event_messages_proto_enumTypes[9]
}

func (x NetworkInterfacePayload_NetworkInterfaceOperation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NetworkInterfacePayload_NetworkInterfaceOperation.Descriptor instead.
func (NetworkInterfacePayload_NetworkInterfaceOperation) EnumDescriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{20, 0}
}

type NetworkConnectionPayload_NetworkConnectionOperation int32

const (
	NetworkConnectionPayload_NETWORK_CONNECTION_OPERATION_UNSPECIFIED NetworkConnectionPayload_NetworkConnectionOperation = 0
	NetworkConnectionPayload_NETWORK_CONNECTION_OPERATION_ESTABLISHED NetworkConnectionPayload_NetworkConnectionOperation = 1
	NetworkConnectionPayload_NETWORK_CONNECTION_OPERATION_CLOSED      NetworkConnectionPayload_NetworkConnectionOperation = 2
	NetworkConnectionPayload_NETWORK_CONNECTION_OPERATION_FAILED      NetworkConnectionPayload_NetworkConnectionOperation = 3
	NetworkConnectionPayload_NETWORK_CONNECTION_OPERATION_TIMEOUT     NetworkConnectionPayload_NetworkConnectionOperation = 4
)

// Enum value maps for NetworkConnectionPayload_NetworkConnectionOperation.
var (
	NetworkConnectionPayload_NetworkConnectionOperation_name = map[int32]string{
		0: "NETWORK_CONNECTION_OPERATION_UNSPECIFIED",
		1: "NETWORK_CONNECTION_OPERATION_ESTABLISHED",
		2: "NETWORK_CONNECTION_OPERATION_CLOSED",
		3: "NETWORK_CONNECTION_OPERATION_FAILED",
		4: "NETWORK_CONNECTION_OPERATION_TIMEOUT",
	}
	NetworkConnectionPayload_NetworkConnectionOperation_value = map[string]int32{
		"NETWORK_CONNECTION_OPERATION_UNSPECIFIED": 0,
		"NETWORK_CONNECTION_OPERATION_ESTABLISHED": 1,
		"NETWORK_CONNECTION_OPERATION_CLOSED":      2,
		"NETWORK_CONNECTION_OPERATION_FAILED":      3,
		"NETWORK_CONNECTION_OPERATION_TIMEOUT":     4,
	}
)

func (x NetworkConnectionPayload_NetworkConnectionOperation) Enum() *NetworkConnectionPayload_NetworkConnectionOperation {
	p := new(NetworkConnectionPayload_NetworkConnectionOperation)
	*p = x
	return p
}

func (x NetworkConnectionPayload_NetworkConnectionOperation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NetworkConnectionPayload_NetworkConnectionOperation) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_events_event_messages_proto_enumTypes[10].Descriptor()
}

func (NetworkConnectionPayload_NetworkConnectionOperation) Type() protoreflect.EnumType {
	return &file_proto_events_event_messages_proto_enumTypes[10]
}

func (x NetworkConnectionPayload_NetworkConnectionOperation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NetworkConnectionPayload_NetworkConnectionOperation.Descriptor instead.
func (NetworkConnectionPayload_NetworkConnectionOperation) EnumDescriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{21, 0}
}

type SecurityAuthPayload_SecurityAuthOperation int32

const (
	SecurityAuthPayload_SECURITY_AUTH_OPERATION_UNSPECIFIED     SecurityAuthPayload_SecurityAuthOperation = 0
	SecurityAuthPayload_SECURITY_AUTH_OPERATION_LOGIN_SUCCESS   SecurityAuthPayload_SecurityAuthOperation = 1
	SecurityAuthPayload_SECURITY_AUTH_OPERATION_LOGIN_FAILED    SecurityAuthPayload_SecurityAuthOperation = 2
	SecurityAuthPayload_SECURITY_AUTH_OPERATION_LOGOUT          SecurityAuthPayload_SecurityAuthOperation = 3
	SecurityAuthPayload_SECURITY_AUTH_OPERATION_SESSION_EXPIRED SecurityAuthPayload_SecurityAuthOperation = 4
)

// Enum value maps for SecurityAuthPayload_SecurityAuthOperation.
var (
	SecurityAuthPayload_SecurityAuthOperation_name = map[int32]string{
		0: "SECURITY_AUTH_OPERATION_UNSPECIFIED",
		1: "SECURITY_AUTH_OPERATION_LOGIN_SUCCESS",
		2: "SECURITY_AUTH_OPERATION_LOGIN_FAILED",
		3: "SECURITY_AUTH_OPERATION_LOGOUT",
		4: "SECURITY_AUTH_OPERATION_SESSION_EXPIRED",
	}
	SecurityAuthPayload_SecurityAuthOperation_value = map[string]int32{
		"SECURITY_AUTH_OPERATION_UNSPECIFIED":     0,
		"SECURITY_AUTH_OPERATION_LOGIN_SUCCESS":   1,
		"SECURITY_AUTH_OPERATION_LOGIN_FAILED":    2,
		"SECURITY_AUTH_OPERATION_LOGOUT":          3,
		"SECURITY_AUTH_OPERATION_SESSION_EXPIRED": 4,
	}
)

func (x SecurityAuthPayload_SecurityAuthOperation) Enum() *SecurityAuthPayload_SecurityAuthOperation {
	p := new(SecurityAuthPayload_SecurityAuthOperation)
	*p = x
	return p
}

func (x SecurityAuthPayload_SecurityAuthOperation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SecurityAuthPayload_SecurityAuthOperation) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_events_event_messages_proto_enumTypes[11].Descriptor()
}

func (SecurityAuthPayload_SecurityAuthOperation) Type() protoreflect.EnumType {
	return &file_proto_events_event_messages_proto_enumTypes[11]
}

func (x SecurityAuthPayload_SecurityAuthOperation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SecurityAuthPayload_SecurityAuthOperation.Descriptor instead.
func (SecurityAuthPayload_SecurityAuthOperation) EnumDescriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{22, 0}
}

type SecurityKeyPayload_SecurityKeyOperation int32

const (
	SecurityKeyPayload_SECURITY_KEY_OPERATION_UNSPECIFIED SecurityKeyPayload_SecurityKeyOperation = 0
	SecurityKeyPayload_SECURITY_KEY_OPERATION_GENERATED   SecurityKeyPayload_SecurityKeyOperation = 1
	SecurityKeyPayload_SECURITY_KEY_OPERATION_INSTALLED   SecurityKeyPayload_SecurityKeyOperation = 2
	SecurityKeyPayload_SECURITY_KEY_OPERATION_REMOVED     SecurityKeyPayload_SecurityKeyOperation = 3
	SecurityKeyPayload_SECURITY_KEY_OPERATION_EXPIRED     SecurityKeyPayload_SecurityKeyOperation = 4
)

// Enum value maps for SecurityKeyPayload_SecurityKeyOperation.
var (
	SecurityKeyPayload_SecurityKeyOperation_name = map[int32]string{
		0: "SECURITY_KEY_OPERATION_UNSPECIFIED",
		1: "SECURITY_KEY_OPERATION_GENERATED",
		2: "SECURITY_KEY_OPERATION_INSTALLED",
		3: "SECURITY_KEY_OPERATION_REMOVED",
		4: "SECURITY_KEY_OPERATION_EXPIRED",
	}
	SecurityKeyPayload_SecurityKeyOperation_value = map[string]int32{
		"SECURITY_KEY_OPERATION_UNSPECIFIED": 0,
		"SECURITY_KEY_OPERATION_GENERATED":   1,
		"SECURITY_KEY_OPERATION_INSTALLED":   2,
		"SECURITY_KEY_OPERATION_REMOVED":     3,
		"SECURITY_KEY_OPERATION_EXPIRED":     4,
	}
)

func (x SecurityKeyPayload_SecurityKeyOperation) Enum() *SecurityKeyPayload_SecurityKeyOperation {
	p := new(SecurityKeyPayload_SecurityKeyOperation)
	*p = x
	return p
}

func (x SecurityKeyPayload_SecurityKeyOperation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SecurityKeyPayload_SecurityKeyOperation) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_events_event_messages_proto_enumTypes[12].Descriptor()
}

func (SecurityKeyPayload_SecurityKeyOperation) Type() protoreflect.EnumType {
	return &file_proto_events_event_messages_proto_enumTypes[12]
}

func (x SecurityKeyPayload_SecurityKeyOperation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SecurityKeyPayload_SecurityKeyOperation.Descriptor instead.
func (SecurityKeyPayload_SecurityKeyOperation) EnumDescriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{23, 0}
}

type SecurityCertificatePayload_SecurityCertificateOperation int32

const (
	SecurityCertificatePayload_SECURITY_CERTIFICATE_OPERATION_UNSPECIFIED SecurityCertificatePayload_SecurityCertificateOperation = 0
	SecurityCertificatePayload_SECURITY_CERTIFICATE_OPERATION_ISSUED      SecurityCertificatePayload_SecurityCertificateOperation = 1
	SecurityCertificatePayload_SECURITY_CERTIFICATE_OPERATION_INSTALLED   SecurityCertificatePayload_SecurityCertificateOperation = 2
	SecurityCertificatePayload_SECURITY_CERTIFICATE_OPERATION_RENEWED     SecurityCertificatePayload_SecurityCertificateOperation = 3
	SecurityCertificatePayload_SECURITY_CERTIFICATE_OPERATION_EXPIRED     SecurityCertificatePayload_SecurityCertificateOperation = 4
	SecurityCertificatePayload_SECURITY_CERTIFICATE_OPERATION_REVOKED     SecurityCertificatePayload_SecurityCertificateOperation = 5
)

// Enum value maps for SecurityCertificatePayload_SecurityCertificateOperation.
var (
	SecurityCertificatePayload_SecurityCertificateOperation_name = map[int32]string{
		0: "SECURITY_CERTIFICATE_OPERATION_UNSPECIFIED",
		1: "SECURITY_CERTIFICATE_OPERATION_ISSUED",
		2: "SECURITY_CERTIFICATE_OPERATION_INSTALLED",
		3: "SECURITY_CERTIFICATE_OPERATION_RENEWED",
		4: "SECURITY_CERTIFICATE_OPERATION_EXPIRED",
		5: "SECURITY_CERTIFICATE_OPERATION_REVOKED",
	}
	SecurityCertificatePayload_SecurityCertificateOperation_value = map[string]int32{
		"SECURITY_CERTIFICATE_OPERATION_UNSPECIFIED": 0,
		"SECURITY_CERTIFICATE_OPERATION_ISSUED":      1,
		"SECURITY_CERTIFICATE_OPERATION_INSTALLED":   2,
		"SECURITY_CERTIFICATE_OPERATION_RENEWED":     3,
		"SECURITY_CERTIFICATE_OPERATION_EXPIRED":     4,
		"SECURITY_CERTIFICATE_OPERATION_REVOKED":     5,
	}
)

func (x SecurityCertificatePayload_SecurityCertificateOperation) Enum() *SecurityCertificatePayload_SecurityCertificateOperation {
	p := new(SecurityCertificatePayload_SecurityCertificateOperation)
	*p = x
	return p
}

func (x SecurityCertificatePayload_SecurityCertificateOperation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SecurityCertificatePayload_SecurityCertificateOperation) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_events_event_messages_proto_enumTypes[13].Descriptor()
}

func (SecurityCertificatePayload_SecurityCertificateOperation) Type() protoreflect.EnumType {
	return &file_proto_events_event_messages_proto_enumTypes[13]
}

func (x SecurityCertificatePayload_SecurityCertificateOperation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SecurityCertificatePayload_SecurityCertificateOperation.Descriptor instead.
func (SecurityCertificatePayload_SecurityCertificateOperation) EnumDescriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{24, 0}
}

type IdentityUserPayload_IdentityUserOperation int32

const (
	IdentityUserPayload_IDENTITY_USER_OPERATION_UNSPECIFIED      IdentityUserPayload_IdentityUserOperation = 0
	IdentityUserPayload_IDENTITY_USER_OPERATION_CREATED          IdentityUserPayload_IdentityUserOperation = 1
	IdentityUserPayload_IDENTITY_USER_OPERATION_DELETED          IdentityUserPayload_IdentityUserOperation = 2
	IdentityUserPayload_IDENTITY_USER_OPERATION_MODIFIED         IdentityUserPayload_IdentityUserOperation = 3
	IdentityUserPayload_IDENTITY_USER_OPERATION_ENABLED          IdentityUserPayload_IdentityUserOperation = 4
	IdentityUserPayload_IDENTITY_USER_OPERATION_DISABLED         IdentityUserPayload_IdentityUserOperation = 5
	IdentityUserPayload_IDENTITY_USER_OPERATION_PASSWORD_CHANGED IdentityUserPayload_IdentityUserOperation = 6
)

// Enum value maps for IdentityUserPayload_IdentityUserOperation.
var (
	IdentityUserPayload_IdentityUserOperation_name = map[int32]string{
		0: "IDENTITY_USER_OPERATION_UNSPECIFIED",
		1: "IDENTITY_USER_OPERATION_CREATED",
		2: "IDENTITY_USER_OPERATION_DELETED",
		3: "IDENTITY_USER_OPERATION_MODIFIED",
		4: "IDENTITY_USER_OPERATION_ENABLED",
		5: "IDENTITY_USER_OPERATION_DISABLED",
		6: "IDENTITY_USER_OPERATION_PASSWORD_CHANGED",
	}
	IdentityUserPayload_IdentityUserOperation_value = map[string]int32{
		"IDENTITY_USER_OPERATION_UNSPECIFIED":      0,
		"IDENTITY_USER_OPERATION_CREATED":          1,
		"IDENTITY_USER_OPERATION_DELETED":          2,
		"IDENTITY_USER_OPERATION_MODIFIED":         3,
		"IDENTITY_USER_OPERATION_ENABLED":          4,
		"IDENTITY_USER_OPERATION_DISABLED":         5,
		"IDENTITY_USER_OPERATION_PASSWORD_CHANGED": 6,
	}
)

func (x IdentityUserPayload_IdentityUserOperation) Enum() *IdentityUserPayload_IdentityUserOperation {
	p := new(IdentityUserPayload_IdentityUserOperation)
	*p = x
	return p
}

func (x IdentityUserPayload_IdentityUserOperation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IdentityUserPayload_IdentityUserOperation) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_events_event_messages_proto_enumTypes[14].Descriptor()
}

func (IdentityUserPayload_IdentityUserOperation) Type() protoreflect.EnumType {
	return &file_proto_events_event_messages_proto_enumTypes[14]
}

func (x IdentityUserPayload_IdentityUserOperation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IdentityUserPayload_IdentityUserOperation.Descriptor instead.
func (IdentityUserPayload_IdentityUserOperation) EnumDescriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{25, 0}
}

type IdentityGroupPayload_IdentityGroupOperation int32

const (
	IdentityGroupPayload_IDENTITY_GROUP_OPERATION_UNSPECIFIED    IdentityGroupPayload_IdentityGroupOperation = 0
	IdentityGroupPayload_IDENTITY_GROUP_OPERATION_CREATED        IdentityGroupPayload_IdentityGroupOperation = 1
	IdentityGroupPayload_IDENTITY_GROUP_OPERATION_DELETED        IdentityGroupPayload_IdentityGroupOperation = 2
	IdentityGroupPayload_IDENTITY_GROUP_OPERATION_MODIFIED       IdentityGroupPayload_IdentityGroupOperation = 3
	IdentityGroupPayload_IDENTITY_GROUP_OPERATION_MEMBER_ADDED   IdentityGroupPayload_IdentityGroupOperation = 4
	IdentityGroupPayload_IDENTITY_GROUP_OPERATION_MEMBER_REMOVED IdentityGroupPayload_IdentityGroupOperation = 5
)

// Enum value maps for IdentityGroupPayload_IdentityGroupOperation.
var (
	IdentityGroupPayload_IdentityGroupOperation_name = map[int32]string{
		0: "IDENTITY_GROUP_OPERATION_UNSPECIFIED",
		1: "IDENTITY_GROUP_OPERATION_CREATED",
		2: "IDENTITY_GROUP_OPERATION_DELETED",
		3: "IDENTITY_GROUP_OPERATION_MODIFIED",
		4: "IDENTITY_GROUP_OPERATION_MEMBER_ADDED",
		5: "IDENTITY_GROUP_OPERATION_MEMBER_REMOVED",
	}
	IdentityGroupPayload_IdentityGroupOperation_value = map[string]int32{
		"IDENTITY_GROUP_OPERATION_UNSPECIFIED":    0,
		"IDENTITY_GROUP_OPERATION_CREATED":        1,
		"IDENTITY_GROUP_OPERATION_DELETED":        2,
		"IDENTITY_GROUP_OPERATION_MODIFIED":       3,
		"IDENTITY_GROUP_OPERATION_MEMBER_ADDED":   4,
		"IDENTITY_GROUP_OPERATION_MEMBER_REMOVED": 5,
	}
)

func (x IdentityGroupPayload_IdentityGroupOperation) Enum() *IdentityGroupPayload_IdentityGroupOperation {
	p := new(IdentityGroupPayload_IdentityGroupOperation)
	*p = x
	return p
}

func (x IdentityGroupPayload_IdentityGroupOperation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IdentityGroupPayload_IdentityGroupOperation) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_events_event_messages_proto_enumTypes[15].Descriptor()
}

func (IdentityGroupPayload_IdentityGroupOperation) Type() protoreflect.EnumType {
	return &file_proto_events_event_messages_proto_enumTypes[15]
}

func (x IdentityGroupPayload_IdentityGroupOperation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IdentityGroupPayload_IdentityGroupOperation.Descriptor instead.
func (IdentityGroupPayload_IdentityGroupOperation) EnumDescriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{26, 0}
}

type IdentityComputerPayload_IdentityComputerOperation int32

const (
	IdentityComputerPayload_IDENTITY_COMPUTER_OPERATION_UNSPECIFIED IdentityComputerPayload_IdentityComputerOperation = 0
	IdentityComputerPayload_IDENTITY_COMPUTER_OPERATION_JOINED      IdentityComputerPayload_IdentityComputerOperation = 1
	IdentityComputerPayload_IDENTITY_COMPUTER_OPERATION_LEFT        IdentityComputerPayload_IdentityComputerOperation = 2
	IdentityComputerPayload_IDENTITY_COMPUTER_OPERATION_UPDATED     IdentityComputerPayload_IdentityComputerOperation = 3
	IdentityComputerPayload_IDENTITY_COMPUTER_OPERATION_ENABLED     IdentityComputerPayload_IdentityComputerOperation = 4
	IdentityComputerPayload_IDENTITY_COMPUTER_OPERATION_DISABLED    IdentityComputerPayload_IdentityComputerOperation = 5
)

// Enum value maps for IdentityComputerPayload_IdentityComputerOperation.
var (
	IdentityComputerPayload_IdentityComputerOperation_name = map[int32]string{
		0: "IDENTITY_COMPUTER_OPERATION_UNSPECIFIED",
		1: "IDENTITY_COMPUTER_OPERATION_JOINED",
		2: "IDENTITY_COMPUTER_OPERATION_LEFT",
		3: "IDENTITY_COMPUTER_OPERATION_UPDATED",
		4: "IDENTITY_COMPUTER_OPERATION_ENABLED",
		5: "IDENTITY_COMPUTER_OPERATION_DISABLED",
	}
	IdentityComputerPayload_IdentityComputerOperation_value = map[string]int32{
		"IDENTITY_COMPUTER_OPERATION_UNSPECIFIED": 0,
		"IDENTITY_COMPUTER_OPERATION_JOINED":      1,
		"IDENTITY_COMPUTER_OPERATION_LEFT":        2,
		"IDENTITY_COMPUTER_OPERATION_UPDATED":     3,
		"IDENTITY_COMPUTER_OPERATION_ENABLED":     4,
		"IDENTITY_COMPUTER_OPERATION_DISABLED":    5,
	}
)

func (x IdentityComputerPayload_IdentityComputerOperation) Enum() *IdentityComputerPayload_IdentityComputerOperation {
	p := new(IdentityComputerPayload_IdentityComputerOperation)
	*p = x
	return p
}

func (x IdentityComputerPayload_IdentityComputerOperation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IdentityComputerPayload_IdentityComputerOperation) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_events_event_messages_proto_enumTypes[16].Descriptor()
}

func (IdentityComputerPayload_IdentityComputerOperation) Type() protoreflect.EnumType {
	return &file_proto_events_event_messages_proto_enumTypes[16]
}

func (x IdentityComputerPayload_IdentityComputerOperation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IdentityComputerPayload_IdentityComputerOperation.Descriptor instead.
func (IdentityComputerPayload_IdentityComputerOperation) EnumDescriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{27, 0}
}

type AccessACLPayload_AccessACLOperation int32

const (
	AccessACLPayload_ACCESS_ACL_OPERATION_UNSPECIFIED AccessACLPayload_AccessACLOperation = 0
	AccessACLPayload_ACCESS_ACL_OPERATION_GRANTED     AccessACLPayload_AccessACLOperation = 1
	AccessACLPayload_ACCESS_ACL_OPERATION_DENIED      AccessACLPayload_AccessACLOperation = 2
	AccessACLPayload_ACCESS_ACL_OPERATION_MODIFIED    AccessACLPayload_AccessACLOperation = 3
	AccessACLPayload_ACCESS_ACL_OPERATION_REMOVED     AccessACLPayload_AccessACLOperation = 4
)

// Enum value maps for AccessACLPayload_AccessACLOperation.
var (
	AccessACLPayload_AccessACLOperation_name = map[int32]string{
		0: "ACCESS_ACL_OPERATION_UNSPECIFIED",
		1: "ACCESS_ACL_OPERATION_GRANTED",
		2: "ACCESS_ACL_OPERATION_DENIED",
		3: "ACCESS_ACL_OPERATION_MODIFIED",
		4: "ACCESS_ACL_OPERATION_REMOVED",
	}
	AccessACLPayload_AccessACLOperation_value = map[string]int32{
		"ACCESS_ACL_OPERATION_UNSPECIFIED": 0,
		"ACCESS_ACL_OPERATION_GRANTED":     1,
		"ACCESS_ACL_OPERATION_DENIED":      2,
		"ACCESS_ACL_OPERATION_MODIFIED":    3,
		"ACCESS_ACL_OPERATION_REMOVED":     4,
	}
)

func (x AccessACLPayload_AccessACLOperation) Enum() *AccessACLPayload_AccessACLOperation {
	p := new(AccessACLPayload_AccessACLOperation)
	*p = x
	return p
}

func (x AccessACLPayload_AccessACLOperation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccessACLPayload_AccessACLOperation) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_events_event_messages_proto_enumTypes[17].Descriptor()
}

func (AccessACLPayload_AccessACLOperation) Type() protoreflect.EnumType {
	return &file_proto_events_event_messages_proto_enumTypes[17]
}

func (x AccessACLPayload_AccessACLOperation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccessACLPayload_AccessACLOperation.Descriptor instead.
func (AccessACLPayload_AccessACLOperation) EnumDescriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{28, 0}
}

type AccessPermissionPayload_AccessPermissionOperation int32

const (
	AccessPermissionPayload_ACCESS_PERMISSION_OPERATION_UNSPECIFIED AccessPermissionPayload_AccessPermissionOperation = 0
	AccessPermissionPayload_ACCESS_PERMISSION_OPERATION_CHECKED     AccessPermissionPayload_AccessPermissionOperation = 1
	AccessPermissionPayload_ACCESS_PERMISSION_OPERATION_GRANTED     AccessPermissionPayload_AccessPermissionOperation = 2
	AccessPermissionPayload_ACCESS_PERMISSION_OPERATION_DENIED      AccessPermissionPayload_AccessPermissionOperation = 3
	AccessPermissionPayload_ACCESS_PERMISSION_OPERATION_CHANGED     AccessPermissionPayload_AccessPermissionOperation = 4
)

// Enum value maps for AccessPermissionPayload_AccessPermissionOperation.
var (
	AccessPermissionPayload_AccessPermissionOperation_name = map[int32]string{
		0: "ACCESS_PERMISSION_OPERATION_UNSPECIFIED",
		1: "ACCESS_PERMISSION_OPERATION_CHECKED",
		2: "ACCESS_PERMISSION_OPERATION_GRANTED",
		3: "ACCESS_PERMISSION_OPERATION_DENIED",
		4: "ACCESS_PERMISSION_OPERATION_CHANGED",
	}
	AccessPermissionPayload_AccessPermissionOperation_value = map[string]int32{
		"ACCESS_PERMISSION_OPERATION_UNSPECIFIED": 0,
		"ACCESS_PERMISSION_OPERATION_CHECKED":     1,
		"ACCESS_PERMISSION_OPERATION_GRANTED":     2,
		"ACCESS_PERMISSION_OPERATION_DENIED":      3,
		"ACCESS_PERMISSION_OPERATION_CHANGED":     4,
	}
)

func (x AccessPermissionPayload_AccessPermissionOperation) Enum() *AccessPermissionPayload_AccessPermissionOperation {
	p := new(AccessPermissionPayload_AccessPermissionOperation)
	*p = x
	return p
}

func (x AccessPermissionPayload_AccessPermissionOperation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccessPermissionPayload_AccessPermissionOperation) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_events_event_messages_proto_enumTypes[18].Descriptor()
}

func (AccessPermissionPayload_AccessPermissionOperation) Type() protoreflect.EnumType {
	return &file_proto_events_event_messages_proto_enumTypes[18]
}

func (x AccessPermissionPayload_AccessPermissionOperation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccessPermissionPayload_AccessPermissionOperation.Descriptor instead.
func (AccessPermissionPayload_AccessPermissionOperation) EnumDescriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{29, 0}
}

type SharingSharePayload_SharingShareOperation int32

const (
	SharingSharePayload_SHARING_SHARE_OPERATION_UNSPECIFIED SharingSharePayload_SharingShareOperation = 0
	SharingSharePayload_SHARING_SHARE_OPERATION_CREATED     SharingSharePayload_SharingShareOperation = 1
	SharingSharePayload_SHARING_SHARE_OPERATION_DELETED     SharingSharePayload_SharingShareOperation = 2
	SharingSharePayload_SHARING_SHARE_OPERATION_MODIFIED    SharingSharePayload_SharingShareOperation = 3
	SharingSharePayload_SHARING_SHARE_OPERATION_ENABLED     SharingSharePayload_SharingShareOperation = 4
	SharingSharePayload_SHARING_SHARE_OPERATION_DISABLED    SharingSharePayload_SharingShareOperation = 5
)

// Enum value maps for SharingSharePayload_SharingShareOperation.
var (
	SharingSharePayload_SharingShareOperation_name = map[int32]string{
		0: "SHARING_SHARE_OPERATION_UNSPECIFIED",
		1: "SHARING_SHARE_OPERATION_CREATED",
		2: "SHARING_SHARE_OPERATION_DELETED",
		3: "SHARING_SHARE_OPERATION_MODIFIED",
		4: "SHARING_SHARE_OPERATION_ENABLED",
		5: "SHARING_SHARE_OPERATION_DISABLED",
	}
	SharingSharePayload_SharingShareOperation_value = map[string]int32{
		"SHARING_SHARE_OPERATION_UNSPECIFIED": 0,
		"SHARING_SHARE_OPERATION_CREATED":     1,
		"SHARING_SHARE_OPERATION_DELETED":     2,
		"SHARING_SHARE_OPERATION_MODIFIED":    3,
		"SHARING_SHARE_OPERATION_ENABLED":     4,
		"SHARING_SHARE_OPERATION_DISABLED":    5,
	}
)

func (x SharingSharePayload_SharingShareOperation) Enum() *SharingSharePayload_SharingShareOperation {
	p := new(SharingSharePayload_SharingShareOperation)
	*p = x
	return p
}

func (x SharingSharePayload_SharingShareOperation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SharingSharePayload_SharingShareOperation) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_events_event_messages_proto_enumTypes[19].Descriptor()
}

func (SharingSharePayload_SharingShareOperation) Type() protoreflect.EnumType {
	return &file_proto_events_event_messages_proto_enumTypes[19]
}

func (x SharingSharePayload_SharingShareOperation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SharingSharePayload_SharingShareOperation.Descriptor instead.
func (SharingSharePayload_SharingShareOperation) EnumDescriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{30, 0}
}

type SharingConnectionPayload_SharingConnectionOperation int32

const (
	SharingConnectionPayload_SHARING_CONNECTION_OPERATION_UNSPECIFIED  SharingConnectionPayload_SharingConnectionOperation = 0
	SharingConnectionPayload_SHARING_CONNECTION_OPERATION_CONNECTED    SharingConnectionPayload_SharingConnectionOperation = 1
	SharingConnectionPayload_SHARING_CONNECTION_OPERATION_DISCONNECTED SharingConnectionPayload_SharingConnectionOperation = 2
	SharingConnectionPayload_SHARING_CONNECTION_OPERATION_FAILED       SharingConnectionPayload_SharingConnectionOperation = 3
	SharingConnectionPayload_SHARING_CONNECTION_OPERATION_TIMEOUT      SharingConnectionPayload_SharingConnectionOperation = 4
)

// Enum value maps for SharingConnectionPayload_SharingConnectionOperation.
var (
	SharingConnectionPayload_SharingConnectionOperation_name = map[int32]string{
		0: "SHARING_CONNECTION_OPERATION_UNSPECIFIED",
		1: "SHARING_CONNECTION_OPERATION_CONNECTED",
		2: "SHARING_CONNECTION_OPERATION_DISCONNECTED",
		3: "SHARING_CONNECTION_OPERATION_FAILED",
		4: "SHARING_CONNECTION_OPERATION_TIMEOUT",
	}
	SharingConnectionPayload_SharingConnectionOperation_value = map[string]int32{
		"SHARING_CONNECTION_OPERATION_UNSPECIFIED":  0,
		"SHARING_CONNECTION_OPERATION_CONNECTED":    1,
		"SHARING_CONNECTION_OPERATION_DISCONNECTED": 2,
		"SHARING_CONNECTION_OPERATION_FAILED":       3,
		"SHARING_CONNECTION_OPERATION_TIMEOUT":      4,
	}
)

func (x SharingConnectionPayload_SharingConnectionOperation) Enum() *SharingConnectionPayload_SharingConnectionOperation {
	p := new(SharingConnectionPayload_SharingConnectionOperation)
	*p = x
	return p
}

func (x SharingConnectionPayload_SharingConnectionOperation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SharingConnectionPayload_SharingConnectionOperation) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_events_event_messages_proto_enumTypes[20].Descriptor()
}

func (SharingConnectionPayload_SharingConnectionOperation) Type() protoreflect.EnumType {
	return &file_proto_events_event_messages_proto_enumTypes[20]
}

func (x SharingConnectionPayload_SharingConnectionOperation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SharingConnectionPayload_SharingConnectionOperation.Descriptor instead.
func (SharingConnectionPayload_SharingConnectionOperation) EnumDescriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{31, 0}
}

type SharingFileAccessPayload_SharingFileAccessOperation int32

const (
	SharingFileAccessPayload_SHARING_FILE_ACCESS_OPERATION_UNSPECIFIED SharingFileAccessPayload_SharingFileAccessOperation = 0
	SharingFileAccessPayload_SHARING_FILE_ACCESS_OPERATION_READ        SharingFileAccessPayload_SharingFileAccessOperation = 1
	SharingFileAccessPayload_SHARING_FILE_ACCESS_OPERATION_WRITE       SharingFileAccessPayload_SharingFileAccessOperation = 2
	SharingFileAccessPayload_SHARING_FILE_ACCESS_OPERATION_DELETE      SharingFileAccessPayload_SharingFileAccessOperation = 3
	SharingFileAccessPayload_SHARING_FILE_ACCESS_OPERATION_RENAME      SharingFileAccessPayload_SharingFileAccessOperation = 4
	SharingFileAccessPayload_SHARING_FILE_ACCESS_OPERATION_DENIED      SharingFileAccessPayload_SharingFileAccessOperation = 5
)

// Enum value maps for SharingFileAccessPayload_SharingFileAccessOperation.
var (
	SharingFileAccessPayload_SharingFileAccessOperation_name = map[int32]string{
		0: "SHARING_FILE_ACCESS_OPERATION_UNSPECIFIED",
		1: "SHARING_FILE_ACCESS_OPERATION_READ",
		2: "SHARING_FILE_ACCESS_OPERATION_WRITE",
		3: "SHARING_FILE_ACCESS_OPERATION_DELETE",
		4: "SHARING_FILE_ACCESS_OPERATION_RENAME",
		5: "SHARING_FILE_ACCESS_OPERATION_DENIED",
	}
	SharingFileAccessPayload_SharingFileAccessOperation_value = map[string]int32{
		"SHARING_FILE_ACCESS_OPERATION_UNSPECIFIED": 0,
		"SHARING_FILE_ACCESS_OPERATION_READ":        1,
		"SHARING_FILE_ACCESS_OPERATION_WRITE":       2,
		"SHARING_FILE_ACCESS_OPERATION_DELETE":      3,
		"SHARING_FILE_ACCESS_OPERATION_RENAME":      4,
		"SHARING_FILE_ACCESS_OPERATION_DENIED":      5,
	}
)

func (x SharingFileAccessPayload_SharingFileAccessOperation) Enum() *SharingFileAccessPayload_SharingFileAccessOperation {
	p := new(SharingFileAccessPayload_SharingFileAccessOperation)
	*p = x
	return p
}

func (x SharingFileAccessPayload_SharingFileAccessOperation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SharingFileAccessPayload_SharingFileAccessOperation) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_events_event_messages_proto_enumTypes[21].Descriptor()
}

func (SharingFileAccessPayload_SharingFileAccessOperation) Type() protoreflect.EnumType {
	return &file_proto_events_event_messages_proto_enumTypes[21]
}

func (x SharingFileAccessPayload_SharingFileAccessOperation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SharingFileAccessPayload_SharingFileAccessOperation.Descriptor instead.
func (SharingFileAccessPayload_SharingFileAccessOperation) EnumDescriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{32, 0}
}

type UsageQuotaPayload_UsageQuotaOperation int32

const (
	UsageQuotaPayload_USAGE_QUOTA_OPERATION_UNSPECIFIED UsageQuotaPayload_UsageQuotaOperation = 0
	UsageQuotaPayload_USAGE_QUOTA_OPERATION_WARNING     UsageQuotaPayload_UsageQuotaOperation = 1
	UsageQuotaPayload_USAGE_QUOTA_OPERATION_EXCEEDED    UsageQuotaPayload_UsageQuotaOperation = 2
	UsageQuotaPayload_USAGE_QUOTA_OPERATION_RESET       UsageQuotaPayload_UsageQuotaOperation = 3
	UsageQuotaPayload_USAGE_QUOTA_OPERATION_UPDATED     UsageQuotaPayload_UsageQuotaOperation = 4
)

// Enum value maps for UsageQuotaPayload_UsageQuotaOperation.
var (
	UsageQuotaPayload_UsageQuotaOperation_name = map[int32]string{
		0: "USAGE_QUOTA_OPERATION_UNSPECIFIED",
		1: "USAGE_QUOTA_OPERATION_WARNING",
		2: "USAGE_QUOTA_OPERATION_EXCEEDED",
		3: "USAGE_QUOTA_OPERATION_RESET",
		4: "USAGE_QUOTA_OPERATION_UPDATED",
	}
	UsageQuotaPayload_UsageQuotaOperation_value = map[string]int32{
		"USAGE_QUOTA_OPERATION_UNSPECIFIED": 0,
		"USAGE_QUOTA_OPERATION_WARNING":     1,
		"USAGE_QUOTA_OPERATION_EXCEEDED":    2,
		"USAGE_QUOTA_OPERATION_RESET":       3,
		"USAGE_QUOTA_OPERATION_UPDATED":     4,
	}
)

func (x UsageQuotaPayload_UsageQuotaOperation) Enum() *UsageQuotaPayload_UsageQuotaOperation {
	p := new(UsageQuotaPayload_UsageQuotaOperation)
	*p = x
	return p
}

func (x UsageQuotaPayload_UsageQuotaOperation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UsageQuotaPayload_UsageQuotaOperation) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_events_event_messages_proto_enumTypes[22].Descriptor()
}

func (UsageQuotaPayload_UsageQuotaOperation) Type() protoreflect.EnumType {
	return &file_proto_events_event_messages_proto_enumTypes[22]
}

func (x UsageQuotaPayload_UsageQuotaOperation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UsageQuotaPayload_UsageQuotaOperation.Descriptor instead.
func (UsageQuotaPayload_UsageQuotaOperation) EnumDescriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{33, 0}
}

type UsageResourcePayload_UsageResourceOperation int32

const (
	UsageResourcePayload_USAGE_RESOURCE_OPERATION_UNSPECIFIED UsageResourcePayload_UsageResourceOperation = 0
	UsageResourcePayload_USAGE_RESOURCE_OPERATION_MEASURED    UsageResourcePayload_UsageResourceOperation = 1
	UsageResourcePayload_USAGE_RESOURCE_OPERATION_INCREASED   UsageResourcePayload_UsageResourceOperation = 2
	UsageResourcePayload_USAGE_RESOURCE_OPERATION_DECREASED   UsageResourcePayload_UsageResourceOperation = 3
)

// Enum value maps for UsageResourcePayload_UsageResourceOperation.
var (
	UsageResourcePayload_UsageResourceOperation_name = map[int32]string{
		0: "USAGE_RESOURCE_OPERATION_UNSPECIFIED",
		1: "USAGE_RESOURCE_OPERATION_MEASURED",
		2: "USAGE_RESOURCE_OPERATION_INCREASED",
		3: "USAGE_RESOURCE_OPERATION_DECREASED",
	}
	UsageResourcePayload_UsageResourceOperation_value = map[string]int32{
		"USAGE_RESOURCE_OPERATION_UNSPECIFIED": 0,
		"USAGE_RESOURCE_OPERATION_MEASURED":    1,
		"USAGE_RESOURCE_OPERATION_INCREASED":   2,
		"USAGE_RESOURCE_OPERATION_DECREASED":   3,
	}
)

func (x UsageResourcePayload_UsageResourceOperation) Enum() *UsageResourcePayload_UsageResourceOperation {
	p := new(UsageResourcePayload_UsageResourceOperation)
	*p = x
	return p
}

func (x UsageResourcePayload_UsageResourceOperation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UsageResourcePayload_UsageResourceOperation) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_events_event_messages_proto_enumTypes[23].Descriptor()
}

func (UsageResourcePayload_UsageResourceOperation) Type() protoreflect.EnumType {
	return &file_proto_events_event_messages_proto_enumTypes[23]
}

func (x UsageResourcePayload_UsageResourceOperation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UsageResourcePayload_UsageResourceOperation.Descriptor instead.
func (UsageResourcePayload_UsageResourceOperation) EnumDescriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{34, 0}
}

type UsageThresholdPayload_UsageThresholdOperation int32

const (
	UsageThresholdPayload_USAGE_THRESHOLD_OPERATION_UNSPECIFIED UsageThresholdPayload_UsageThresholdOperation = 0
	UsageThresholdPayload_USAGE_THRESHOLD_OPERATION_APPROACHED  UsageThresholdPayload_UsageThresholdOperation = 1
	UsageThresholdPayload_USAGE_THRESHOLD_OPERATION_EXCEEDED    UsageThresholdPayload_UsageThresholdOperation = 2
	UsageThresholdPayload_USAGE_THRESHOLD_OPERATION_CLEARED     UsageThresholdPayload_UsageThresholdOperation = 3
)

// Enum value maps for UsageThresholdPayload_UsageThresholdOperation.
var (
	UsageThresholdPayload_UsageThresholdOperation_name = map[int32]string{
		0: "USAGE_THRESHOLD_OPERATION_UNSPECIFIED",
		1: "USAGE_THRESHOLD_OPERATION_APPROACHED",
		2: "USAGE_THRESHOLD_OPERATION_EXCEEDED",
		3: "USAGE_THRESHOLD_OPERATION_CLEARED",
	}
	UsageThresholdPayload_UsageThresholdOperation_value = map[string]int32{
		"USAGE_THRESHOLD_OPERATION_UNSPECIFIED": 0,
		"USAGE_THRESHOLD_OPERATION_APPROACHED":  1,
		"USAGE_THRESHOLD_OPERATION_EXCEEDED":    2,
		"USAGE_THRESHOLD_OPERATION_CLEARED":     3,
	}
)

func (x UsageThresholdPayload_UsageThresholdOperation) Enum() *UsageThresholdPayload_UsageThresholdOperation {
	p := new(UsageThresholdPayload_UsageThresholdOperation)
	*p = x
	return p
}

func (x UsageThresholdPayload_UsageThresholdOperation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UsageThresholdPayload_UsageThresholdOperation) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_events_event_messages_proto_enumTypes[24].Descriptor()
}

func (UsageThresholdPayload_UsageThresholdOperation) Type() protoreflect.EnumType {
	return &file_proto_events_event_messages_proto_enumTypes[24]
}

func (x UsageThresholdPayload_UsageThresholdOperation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UsageThresholdPayload_UsageThresholdOperation.Descriptor instead.
func (UsageThresholdPayload_UsageThresholdOperation) EnumDescriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{35, 0}
}

type DataTransferTransferPayload_DataTransferOperation int32

const (
	DataTransferTransferPayload_DATA_TRANSFER_OPERATION_UNSPECIFIED DataTransferTransferPayload_DataTransferOperation = 0
	DataTransferTransferPayload_DATA_TRANSFER_OPERATION_STARTED     DataTransferTransferPayload_DataTransferOperation = 1
	DataTransferTransferPayload_DATA_TRANSFER_OPERATION_PROGRESS    DataTransferTransferPayload_DataTransferOperation = 2 // Not used per requirements
	DataTransferTransferPayload_DATA_TRANSFER_OPERATION_COMPLETED   DataTransferTransferPayload_DataTransferOperation = 3
	DataTransferTransferPayload_DATA_TRANSFER_OPERATION_FAILED      DataTransferTransferPayload_DataTransferOperation = 4
	DataTransferTransferPayload_DATA_TRANSFER_OPERATION_CANCELLED   DataTransferTransferPayload_DataTransferOperation = 5
	DataTransferTransferPayload_DATA_TRANSFER_OPERATION_PAUSED      DataTransferTransferPayload_DataTransferOperation = 6 // Transfer paused
	DataTransferTransferPayload_DATA_TRANSFER_OPERATION_RESUMED     DataTransferTransferPayload_DataTransferOperation = 7 // Transfer resumed
)

// Enum value maps for DataTransferTransferPayload_DataTransferOperation.
var (
	DataTransferTransferPayload_DataTransferOperation_name = map[int32]string{
		0: "DATA_TRANSFER_OPERATION_UNSPECIFIED",
		1: "DATA_TRANSFER_OPERATION_STARTED",
		2: "DATA_TRANSFER_OPERATION_PROGRESS",
		3: "DATA_TRANSFER_OPERATION_COMPLETED",
		4: "DATA_TRANSFER_OPERATION_FAILED",
		5: "DATA_TRANSFER_OPERATION_CANCELLED",
		6: "DATA_TRANSFER_OPERATION_PAUSED",
		7: "DATA_TRANSFER_OPERATION_RESUMED",
	}
	DataTransferTransferPayload_DataTransferOperation_value = map[string]int32{
		"DATA_TRANSFER_OPERATION_UNSPECIFIED": 0,
		"DATA_TRANSFER_OPERATION_STARTED":     1,
		"DATA_TRANSFER_OPERATION_PROGRESS":    2,
		"DATA_TRANSFER_OPERATION_COMPLETED":   3,
		"DATA_TRANSFER_OPERATION_FAILED":      4,
		"DATA_TRANSFER_OPERATION_CANCELLED":   5,
		"DATA_TRANSFER_OPERATION_PAUSED":      6,
		"DATA_TRANSFER_OPERATION_RESUMED":     7,
	}
)

func (x DataTransferTransferPayload_DataTransferOperation) Enum() *DataTransferTransferPayload_DataTransferOperation {
	p := new(DataTransferTransferPayload_DataTransferOperation)
	*p = x
	return p
}

func (x DataTransferTransferPayload_DataTransferOperation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataTransferTransferPayload_DataTransferOperation) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_events_event_messages_proto_enumTypes[25].Descriptor()
}

func (DataTransferTransferPayload_DataTransferOperation) Type() protoreflect.EnumType {
	return &file_proto_events_event_messages_proto_enumTypes[25]
}

func (x DataTransferTransferPayload_DataTransferOperation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataTransferTransferPayload_DataTransferOperation.Descriptor instead.
func (DataTransferTransferPayload_DataTransferOperation) EnumDescriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{36, 0}
}

type StorageDiskPayload_StorageDiskOperation int32

const (
	StorageDiskPayload_STORAGE_DISK_OPERATION_UNSPECIFIED       StorageDiskPayload_StorageDiskOperation = 0
	StorageDiskPayload_STORAGE_DISK_OPERATION_DISCOVERED        StorageDiskPayload_StorageDiskOperation = 1 // Disk discovered
	StorageDiskPayload_STORAGE_DISK_OPERATION_REMOVED           StorageDiskPayload_StorageDiskOperation = 2 // Disk removed/offline
	StorageDiskPayload_STORAGE_DISK_OPERATION_STATE_CHANGED     StorageDiskPayload_StorageDiskOperation = 3 // State changed
	StorageDiskPayload_STORAGE_DISK_OPERATION_HEALTH_CHANGED    StorageDiskPayload_StorageDiskOperation = 4 // Health status changed
	StorageDiskPayload_STORAGE_DISK_OPERATION_ADDED_TO_POOL     StorageDiskPayload_StorageDiskOperation = 5 // Added to ZFS pool
	StorageDiskPayload_STORAGE_DISK_OPERATION_REMOVED_FROM_POOL StorageDiskPayload_StorageDiskOperation = 6 // Removed from ZFS pool
	StorageDiskPayload_STORAGE_DISK_OPERATION_VALIDATED         StorageDiskPayload_StorageDiskOperation = 7 // Disk validated
	StorageDiskPayload_STORAGE_DISK_OPERATION_QUARANTINED       StorageDiskPayload_StorageDiskOperation = 8 // Disk quarantined
)

// Enum value maps for StorageDiskPayload_StorageDiskOperation.
var (
	StorageDiskPayload_StorageDiskOperation_name = map[int32]string{
		0: "STORAGE_DISK_OPERATION_UNSPECIFIED",
		1: "STORAGE_DISK_OPERATION_DISCOVERED",
		2: "STORAGE_DISK_OPERATION_REMOVED",
		3: "STORAGE_DISK_OPERATION_STATE_CHANGED",
		4: "STORAGE_DISK_OPERATION_HEALTH_CHANGED",
		5: "STORAGE_DISK_OPERATION_ADDED_TO_POOL",
		6: "STORAGE_DISK_OPERATION_REMOVED_FROM_POOL",
		7: "STORAGE_DISK_OPERATION_VALIDATED",
		8: "STORAGE_DISK_OPERATION_QUARANTINED",
	}
	StorageDiskPayload_StorageDiskOperation_value = map[string]int32{
		"STORAGE_DISK_OPERATION_UNSPECIFIED":       0,
		"STORAGE_DISK_OPERATION_DISCOVERED":        1,
		"STORAGE_DISK_OPERATION_REMOVED":           2,
		"STORAGE_DISK_OPERATION_STATE_CHANGED":     3,
		"STORAGE_DISK_OPERATION_HEALTH_CHANGED":    4,
		"STORAGE_DISK_OPERATION_ADDED_TO_POOL":     5,
		"STORAGE_DISK_OPERATION_REMOVED_FROM_POOL": 6,
		"STORAGE_DISK_OPERATION_VALIDATED":         7,
		"STORAGE_DISK_OPERATION_QUARANTINED":       8,
	}
)

func (x StorageDiskPayload_StorageDiskOperation) Enum() *StorageDiskPayload_StorageDiskOperation {
	p := new(StorageDiskPayload_StorageDiskOperation)
	*p = x
	return p
}

func (x StorageDiskPayload_StorageDiskOperation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StorageDiskPayload_StorageDiskOperation) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_events_event_messages_proto_enumTypes[26].Descriptor()
}

func (StorageDiskPayload_StorageDiskOperation) Type() protoreflect.EnumType {
	return &file_proto_events_event_messages_proto_enumTypes[26]
}

func (x StorageDiskPayload_StorageDiskOperation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StorageDiskPayload_StorageDiskOperation.Descriptor instead.
func (StorageDiskPayload_StorageDiskOperation) EnumDescriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{37, 0}
}

type StorageDiskProbePayload_StorageDiskProbeOperation int32

const (
	StorageDiskProbePayload_STORAGE_DISK_PROBE_OPERATION_UNSPECIFIED StorageDiskProbePayload_StorageDiskProbeOperation = 0
	StorageDiskProbePayload_STORAGE_DISK_PROBE_OPERATION_SCHEDULED   StorageDiskProbePayload_StorageDiskProbeOperation = 1 // Probe scheduled
	StorageDiskProbePayload_STORAGE_DISK_PROBE_OPERATION_STARTED     StorageDiskProbePayload_StorageDiskProbeOperation = 2 // Probe started
	StorageDiskProbePayload_STORAGE_DISK_PROBE_OPERATION_PROGRESS    StorageDiskProbePayload_StorageDiskProbeOperation = 3 // Probe progress update
	StorageDiskProbePayload_STORAGE_DISK_PROBE_OPERATION_COMPLETED   StorageDiskProbePayload_StorageDiskProbeOperation = 4 // Probe completed successfully
	StorageDiskProbePayload_STORAGE_DISK_PROBE_OPERATION_FAILED      StorageDiskProbePayload_StorageDiskProbeOperation = 5 // Probe failed
	StorageDiskProbePayload_STORAGE_DISK_PROBE_OPERATION_CANCELLED   StorageDiskProbePayload_StorageDiskProbeOperation = 6 // Probe cancelled
	StorageDiskProbePayload_STORAGE_DISK_PROBE_OPERATION_CONFLICTED  StorageDiskProbePayload_StorageDiskProbeOperation = 7 // Probe conflicted (e.g., ZFS scrub running)
	StorageDiskProbePayload_STORAGE_DISK_PROBE_OPERATION_TIMEOUT     StorageDiskProbePayload_StorageDiskProbeOperation = 8 // Probe timed out
)

// Enum value maps for StorageDiskProbePayload_StorageDiskProbeOperation.
var (
	StorageDiskProbePayload_StorageDiskProbeOperation_name = map[int32]string{
		0: "STORAGE_DISK_PROBE_OPERATION_UNSPECIFIED",
		1: "STORAGE_DISK_PROBE_OPERATION_SCHEDULED",
		2: "STORAGE_DISK_PROBE_OPERATION_STARTED",
		3: "STORAGE_DISK_PROBE_OPERATION_PROGRESS",
		4: "STORAGE_DISK_PROBE_OPERATION_COMPLETED",
		5: "STORAGE_DISK_PROBE_OPERATION_FAILED",
		6: "STORAGE_DISK_PROBE_OPERATION_CANCELLED",
		7: "STORAGE_DISK_PROBE_OPERATION_CONFLICTED",
		8: "STORAGE_DISK_PROBE_OPERATION_TIMEOUT",
	}
	StorageDiskProbePayload_StorageDiskProbeOperation_value = map[string]int32{
		"STORAGE_DISK_PROBE_OPERATION_UNSPECIFIED": 0,
		"STORAGE_DISK_PROBE_OPERATION_SCHEDULED":   1,
		"STORAGE_DISK_PROBE_OPERATION_STARTED":     2,
		"STORAGE_DISK_PROBE_OPERATION_PROGRESS":    3,
		"STORAGE_DISK_PROBE_OPERATION_COMPLETED":   4,
		"STORAGE_DISK_PROBE_OPERATION_FAILED":      5,
		"STORAGE_DISK_PROBE_OPERATION_CANCELLED":   6,
		"STORAGE_DISK_PROBE_OPERATION_CONFLICTED":  7,
		"STORAGE_DISK_PROBE_OPERATION_TIMEOUT":     8,
	}
)

func (x StorageDiskProbePayload_StorageDiskProbeOperation) Enum() *StorageDiskProbePayload_StorageDiskProbeOperation {
	p := new(StorageDiskProbePayload_StorageDiskProbeOperation)
	*p = x
	return p
}

func (x StorageDiskProbePayload_StorageDiskProbeOperation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StorageDiskProbePayload_StorageDiskProbeOperation) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_events_event_messages_proto_enumTypes[27].Descriptor()
}

func (StorageDiskProbePayload_StorageDiskProbeOperation) Type() protoreflect.EnumType {
	return &file_proto_events_event_messages_proto_enumTypes[27]
}

func (x StorageDiskProbePayload_StorageDiskProbeOperation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StorageDiskProbePayload_StorageDiskProbeOperation.Descriptor instead.
func (StorageDiskProbePayload_StorageDiskProbeOperation) EnumDescriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{38, 0}
}

// Main Event message with structured type-safe payloads
type Event struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	EventId   string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`                                                              // Unique event identifier (UUID7)
	Level     EventLevel             `protobuf:"varint,2,opt,name=level,proto3,enum=rodent.events.EventLevel" json:"level,omitempty"`                                                  // Severity level
	Category  EventCategory          `protobuf:"varint,3,opt,name=category,proto3,enum=rodent.events.EventCategory" json:"category,omitempty"`                                         // Domain category
	Source    string                 `protobuf:"bytes,4,opt,name=source,proto3" json:"source,omitempty"`                                                                               // Source module/component
	Timestamp int64                  `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                                                        // Unix timestamp in milliseconds
	Metadata  map[string]string      `protobuf:"bytes,6,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Additional context
	// Type-safe event payload using oneof for compile-time validation
	//
	// Types that are valid to be assigned to EventPayload:
	//
	//	*Event_SystemEvent
	//	*Event_StorageEvent
	//	*Event_NetworkEvent
	//	*Event_SecurityEvent
	//	*Event_ServiceEvent
	//	*Event_IdentityEvent
	//	*Event_AccessEvent
	//	*Event_SharingEvent
	//	*Event_UsageEvent
	//	*Event_DataTransferEvent
	EventPayload  isEvent_EventPayload `protobuf_oneof:"event_payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_proto_events_event_messages_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_event_messages_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{0}
}

func (x *Event) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *Event) GetLevel() EventLevel {
	if x != nil {
		return x.Level
	}
	return EventLevel_EVENT_LEVEL_UNSPECIFIED
}

func (x *Event) GetCategory() EventCategory {
	if x != nil {
		return x.Category
	}
	return EventCategory_EVENT_CATEGORY_UNSPECIFIED
}

func (x *Event) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Event) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Event) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Event) GetEventPayload() isEvent_EventPayload {
	if x != nil {
		return x.EventPayload
	}
	return nil
}

func (x *Event) GetSystemEvent() *SystemEvent {
	if x != nil {
		if x, ok := x.EventPayload.(*Event_SystemEvent); ok {
			return x.SystemEvent
		}
	}
	return nil
}

func (x *Event) GetStorageEvent() *StorageEvent {
	if x != nil {
		if x, ok := x.EventPayload.(*Event_StorageEvent); ok {
			return x.StorageEvent
		}
	}
	return nil
}

func (x *Event) GetNetworkEvent() *NetworkEvent {
	if x != nil {
		if x, ok := x.EventPayload.(*Event_NetworkEvent); ok {
			return x.NetworkEvent
		}
	}
	return nil
}

func (x *Event) GetSecurityEvent() *SecurityEvent {
	if x != nil {
		if x, ok := x.EventPayload.(*Event_SecurityEvent); ok {
			return x.SecurityEvent
		}
	}
	return nil
}

func (x *Event) GetServiceEvent() *ServiceEvent {
	if x != nil {
		if x, ok := x.EventPayload.(*Event_ServiceEvent); ok {
			return x.ServiceEvent
		}
	}
	return nil
}

func (x *Event) GetIdentityEvent() *IdentityEvent {
	if x != nil {
		if x, ok := x.EventPayload.(*Event_IdentityEvent); ok {
			return x.IdentityEvent
		}
	}
	return nil
}

func (x *Event) GetAccessEvent() *AccessEvent {
	if x != nil {
		if x, ok := x.EventPayload.(*Event_AccessEvent); ok {
			return x.AccessEvent
		}
	}
	return nil
}

func (x *Event) GetSharingEvent() *SharingEvent {
	if x != nil {
		if x, ok := x.EventPayload.(*Event_SharingEvent); ok {
			return x.SharingEvent
		}
	}
	return nil
}

func (x *Event) GetUsageEvent() *UsageEvent {
	if x != nil {
		if x, ok := x.EventPayload.(*Event_UsageEvent); ok {
			return x.UsageEvent
		}
	}
	return nil
}

func (x *Event) GetDataTransferEvent() *DataTransferEvent {
	if x != nil {
		if x, ok := x.EventPayload.(*Event_DataTransferEvent); ok {
			return x.DataTransferEvent
		}
	}
	return nil
}

type isEvent_EventPayload interface {
	isEvent_EventPayload()
}

type Event_SystemEvent struct {
	SystemEvent *SystemEvent `protobuf:"bytes,10,opt,name=system_event,json=systemEvent,proto3,oneof"`
}

type Event_StorageEvent struct {
	StorageEvent *StorageEvent `protobuf:"bytes,11,opt,name=storage_event,json=storageEvent,proto3,oneof"`
}

type Event_NetworkEvent struct {
	NetworkEvent *NetworkEvent `protobuf:"bytes,12,opt,name=network_event,json=networkEvent,proto3,oneof"`
}

type Event_SecurityEvent struct {
	SecurityEvent *SecurityEvent `protobuf:"bytes,13,opt,name=security_event,json=securityEvent,proto3,oneof"`
}

type Event_ServiceEvent struct {
	ServiceEvent *ServiceEvent `protobuf:"bytes,14,opt,name=service_event,json=serviceEvent,proto3,oneof"`
}

type Event_IdentityEvent struct {
	IdentityEvent *IdentityEvent `protobuf:"bytes,15,opt,name=identity_event,json=identityEvent,proto3,oneof"`
}

type Event_AccessEvent struct {
	AccessEvent *AccessEvent `protobuf:"bytes,16,opt,name=access_event,json=accessEvent,proto3,oneof"`
}

type Event_SharingEvent struct {
	SharingEvent *SharingEvent `protobuf:"bytes,17,opt,name=sharing_event,json=sharingEvent,proto3,oneof"`
}

type Event_UsageEvent struct {
	UsageEvent *UsageEvent `protobuf:"bytes,18,opt,name=usage_event,json=usageEvent,proto3,oneof"`
}

type Event_DataTransferEvent struct {
	DataTransferEvent *DataTransferEvent `protobuf:"bytes,19,opt,name=data_transfer_event,json=dataTransferEvent,proto3,oneof"`
}

func (*Event_SystemEvent) isEvent_EventPayload() {}

func (*Event_StorageEvent) isEvent_EventPayload() {}

func (*Event_NetworkEvent) isEvent_EventPayload() {}

func (*Event_SecurityEvent) isEvent_EventPayload() {}

func (*Event_ServiceEvent) isEvent_EventPayload() {}

func (*Event_IdentityEvent) isEvent_EventPayload() {}

func (*Event_AccessEvent) isEvent_EventPayload() {}

func (*Event_SharingEvent) isEvent_EventPayload() {}

func (*Event_UsageEvent) isEvent_EventPayload() {}

func (*Event_DataTransferEvent) isEvent_EventPayload() {}

// System events wrapper
type SystemEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to EventType:
	//
	//	*SystemEvent_Startup
	//	*SystemEvent_Shutdown
	//	*SystemEvent_ConfigChanged
	//	*SystemEvent_UserEvent
	//	*SystemEvent_Registration
	EventType     isSystemEvent_EventType `protobuf_oneof:"event_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemEvent) Reset() {
	*x = SystemEvent{}
	mi := &file_proto_events_event_messages_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemEvent) ProtoMessage() {}

func (x *SystemEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_event_messages_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemEvent.ProtoReflect.Descriptor instead.
func (*SystemEvent) Descriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{1}
}

func (x *SystemEvent) GetEventType() isSystemEvent_EventType {
	if x != nil {
		return x.EventType
	}
	return nil
}

func (x *SystemEvent) GetStartup() *SystemStartupPayload {
	if x != nil {
		if x, ok := x.EventType.(*SystemEvent_Startup); ok {
			return x.Startup
		}
	}
	return nil
}

func (x *SystemEvent) GetShutdown() *SystemShutdownPayload {
	if x != nil {
		if x, ok := x.EventType.(*SystemEvent_Shutdown); ok {
			return x.Shutdown
		}
	}
	return nil
}

func (x *SystemEvent) GetConfigChanged() *SystemConfigChangePayload {
	if x != nil {
		if x, ok := x.EventType.(*SystemEvent_ConfigChanged); ok {
			return x.ConfigChanged
		}
	}
	return nil
}

func (x *SystemEvent) GetUserEvent() *SystemUserPayload {
	if x != nil {
		if x, ok := x.EventType.(*SystemEvent_UserEvent); ok {
			return x.UserEvent
		}
	}
	return nil
}

func (x *SystemEvent) GetRegistration() *SystemRegistrationPayload {
	if x != nil {
		if x, ok := x.EventType.(*SystemEvent_Registration); ok {
			return x.Registration
		}
	}
	return nil
}

type isSystemEvent_EventType interface {
	isSystemEvent_EventType()
}

type SystemEvent_Startup struct {
	Startup *SystemStartupPayload `protobuf:"bytes,1,opt,name=startup,proto3,oneof"`
}

type SystemEvent_Shutdown struct {
	Shutdown *SystemShutdownPayload `protobuf:"bytes,2,opt,name=shutdown,proto3,oneof"`
}

type SystemEvent_ConfigChanged struct {
	ConfigChanged *SystemConfigChangePayload `protobuf:"bytes,3,opt,name=config_changed,json=configChanged,proto3,oneof"`
}

type SystemEvent_UserEvent struct {
	UserEvent *SystemUserPayload `protobuf:"bytes,4,opt,name=user_event,json=userEvent,proto3,oneof"`
}

type SystemEvent_Registration struct {
	Registration *SystemRegistrationPayload `protobuf:"bytes,5,opt,name=registration,proto3,oneof"`
}

func (*SystemEvent_Startup) isSystemEvent_EventType() {}

func (*SystemEvent_Shutdown) isSystemEvent_EventType() {}

func (*SystemEvent_ConfigChanged) isSystemEvent_EventType() {}

func (*SystemEvent_UserEvent) isSystemEvent_EventType() {}

func (*SystemEvent_Registration) isSystemEvent_EventType() {}

// Storage events wrapper
type StorageEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to EventType:
	//
	//	*StorageEvent_PoolEvent
	//	*StorageEvent_DatasetEvent
	//	*StorageEvent_SnapshotEvent
	//	*StorageEvent_DiskEvent
	//	*StorageEvent_DiskProbeEvent
	EventType     isStorageEvent_EventType `protobuf_oneof:"event_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StorageEvent) Reset() {
	*x = StorageEvent{}
	mi := &file_proto_events_event_messages_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageEvent) ProtoMessage() {}

func (x *StorageEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_event_messages_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageEvent.ProtoReflect.Descriptor instead.
func (*StorageEvent) Descriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{2}
}

func (x *StorageEvent) GetEventType() isStorageEvent_EventType {
	if x != nil {
		return x.EventType
	}
	return nil
}

func (x *StorageEvent) GetPoolEvent() *StoragePoolPayload {
	if x != nil {
		if x, ok := x.EventType.(*StorageEvent_PoolEvent); ok {
			return x.PoolEvent
		}
	}
	return nil
}

func (x *StorageEvent) GetDatasetEvent() *StorageDatasetPayload {
	if x != nil {
		if x, ok := x.EventType.(*StorageEvent_DatasetEvent); ok {
			return x.DatasetEvent
		}
	}
	return nil
}

func (x *StorageEvent) GetSnapshotEvent() *StorageSnapshotPayload {
	if x != nil {
		if x, ok := x.EventType.(*StorageEvent_SnapshotEvent); ok {
			return x.SnapshotEvent
		}
	}
	return nil
}

func (x *StorageEvent) GetDiskEvent() *StorageDiskPayload {
	if x != nil {
		if x, ok := x.EventType.(*StorageEvent_DiskEvent); ok {
			return x.DiskEvent
		}
	}
	return nil
}

func (x *StorageEvent) GetDiskProbeEvent() *StorageDiskProbePayload {
	if x != nil {
		if x, ok := x.EventType.(*StorageEvent_DiskProbeEvent); ok {
			return x.DiskProbeEvent
		}
	}
	return nil
}

type isStorageEvent_EventType interface {
	isStorageEvent_EventType()
}

type StorageEvent_PoolEvent struct {
	PoolEvent *StoragePoolPayload `protobuf:"bytes,1,opt,name=pool_event,json=poolEvent,proto3,oneof"`
}

type StorageEvent_DatasetEvent struct {
	DatasetEvent *StorageDatasetPayload `protobuf:"bytes,2,opt,name=dataset_event,json=datasetEvent,proto3,oneof"`
}

type StorageEvent_SnapshotEvent struct {
	// transfer_event (field 3) deprecated - use DataTransferEvent instead
	SnapshotEvent *StorageSnapshotPayload `protobuf:"bytes,4,opt,name=snapshot_event,json=snapshotEvent,proto3,oneof"`
}

type StorageEvent_DiskEvent struct {
	DiskEvent *StorageDiskPayload `protobuf:"bytes,5,opt,name=disk_event,json=diskEvent,proto3,oneof"`
}

type StorageEvent_DiskProbeEvent struct {
	DiskProbeEvent *StorageDiskProbePayload `protobuf:"bytes,6,opt,name=disk_probe_event,json=diskProbeEvent,proto3,oneof"`
}

func (*StorageEvent_PoolEvent) isStorageEvent_EventType() {}

func (*StorageEvent_DatasetEvent) isStorageEvent_EventType() {}

func (*StorageEvent_SnapshotEvent) isStorageEvent_EventType() {}

func (*StorageEvent_DiskEvent) isStorageEvent_EventType() {}

func (*StorageEvent_DiskProbeEvent) isStorageEvent_EventType() {}

// Network events wrapper
type NetworkEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to EventType:
	//
	//	*NetworkEvent_InterfaceEvent
	//	*NetworkEvent_ConnectionEvent
	EventType     isNetworkEvent_EventType `protobuf_oneof:"event_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkEvent) Reset() {
	*x = NetworkEvent{}
	mi := &file_proto_events_event_messages_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkEvent) ProtoMessage() {}

func (x *NetworkEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_event_messages_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkEvent.ProtoReflect.Descriptor instead.
func (*NetworkEvent) Descriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{3}
}

func (x *NetworkEvent) GetEventType() isNetworkEvent_EventType {
	if x != nil {
		return x.EventType
	}
	return nil
}

func (x *NetworkEvent) GetInterfaceEvent() *NetworkInterfacePayload {
	if x != nil {
		if x, ok := x.EventType.(*NetworkEvent_InterfaceEvent); ok {
			return x.InterfaceEvent
		}
	}
	return nil
}

func (x *NetworkEvent) GetConnectionEvent() *NetworkConnectionPayload {
	if x != nil {
		if x, ok := x.EventType.(*NetworkEvent_ConnectionEvent); ok {
			return x.ConnectionEvent
		}
	}
	return nil
}

type isNetworkEvent_EventType interface {
	isNetworkEvent_EventType()
}

type NetworkEvent_InterfaceEvent struct {
	InterfaceEvent *NetworkInterfacePayload `protobuf:"bytes,1,opt,name=interface_event,json=interfaceEvent,proto3,oneof"`
}

type NetworkEvent_ConnectionEvent struct {
	ConnectionEvent *NetworkConnectionPayload `protobuf:"bytes,2,opt,name=connection_event,json=connectionEvent,proto3,oneof"`
}

func (*NetworkEvent_InterfaceEvent) isNetworkEvent_EventType() {}

func (*NetworkEvent_ConnectionEvent) isNetworkEvent_EventType() {}

// Security events wrapper
type SecurityEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to EventType:
	//
	//	*SecurityEvent_AuthEvent
	//	*SecurityEvent_KeyEvent
	//	*SecurityEvent_CertificateEvent
	EventType     isSecurityEvent_EventType `protobuf_oneof:"event_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SecurityEvent) Reset() {
	*x = SecurityEvent{}
	mi := &file_proto_events_event_messages_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SecurityEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecurityEvent) ProtoMessage() {}

func (x *SecurityEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_event_messages_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecurityEvent.ProtoReflect.Descriptor instead.
func (*SecurityEvent) Descriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{4}
}

func (x *SecurityEvent) GetEventType() isSecurityEvent_EventType {
	if x != nil {
		return x.EventType
	}
	return nil
}

func (x *SecurityEvent) GetAuthEvent() *SecurityAuthPayload {
	if x != nil {
		if x, ok := x.EventType.(*SecurityEvent_AuthEvent); ok {
			return x.AuthEvent
		}
	}
	return nil
}

func (x *SecurityEvent) GetKeyEvent() *SecurityKeyPayload {
	if x != nil {
		if x, ok := x.EventType.(*SecurityEvent_KeyEvent); ok {
			return x.KeyEvent
		}
	}
	return nil
}

func (x *SecurityEvent) GetCertificateEvent() *SecurityCertificatePayload {
	if x != nil {
		if x, ok := x.EventType.(*SecurityEvent_CertificateEvent); ok {
			return x.CertificateEvent
		}
	}
	return nil
}

type isSecurityEvent_EventType interface {
	isSecurityEvent_EventType()
}

type SecurityEvent_AuthEvent struct {
	AuthEvent *SecurityAuthPayload `protobuf:"bytes,1,opt,name=auth_event,json=authEvent,proto3,oneof"`
}

type SecurityEvent_KeyEvent struct {
	KeyEvent *SecurityKeyPayload `protobuf:"bytes,2,opt,name=key_event,json=keyEvent,proto3,oneof"`
}

type SecurityEvent_CertificateEvent struct {
	CertificateEvent *SecurityCertificatePayload `protobuf:"bytes,3,opt,name=certificate_event,json=certificateEvent,proto3,oneof"`
}

func (*SecurityEvent_AuthEvent) isSecurityEvent_EventType() {}

func (*SecurityEvent_KeyEvent) isSecurityEvent_EventType() {}

func (*SecurityEvent_CertificateEvent) isSecurityEvent_EventType() {}

// Service events wrapper
type ServiceEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to EventType:
	//
	//	*ServiceEvent_StatusEvent
	EventType     isServiceEvent_EventType `protobuf_oneof:"event_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceEvent) Reset() {
	*x = ServiceEvent{}
	mi := &file_proto_events_event_messages_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceEvent) ProtoMessage() {}

func (x *ServiceEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_event_messages_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceEvent.ProtoReflect.Descriptor instead.
func (*ServiceEvent) Descriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{5}
}

func (x *ServiceEvent) GetEventType() isServiceEvent_EventType {
	if x != nil {
		return x.EventType
	}
	return nil
}

func (x *ServiceEvent) GetStatusEvent() *ServiceStatusPayload {
	if x != nil {
		if x, ok := x.EventType.(*ServiceEvent_StatusEvent); ok {
			return x.StatusEvent
		}
	}
	return nil
}

type isServiceEvent_EventType interface {
	isServiceEvent_EventType()
}

type ServiceEvent_StatusEvent struct {
	StatusEvent *ServiceStatusPayload `protobuf:"bytes,1,opt,name=status_event,json=statusEvent,proto3,oneof"`
}

func (*ServiceEvent_StatusEvent) isServiceEvent_EventType() {}

// Identity events wrapper (AD/LDAP)
type IdentityEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to EventType:
	//
	//	*IdentityEvent_UserEvent
	//	*IdentityEvent_GroupEvent
	//	*IdentityEvent_ComputerEvent
	EventType     isIdentityEvent_EventType `protobuf_oneof:"event_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IdentityEvent) Reset() {
	*x = IdentityEvent{}
	mi := &file_proto_events_event_messages_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IdentityEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentityEvent) ProtoMessage() {}

func (x *IdentityEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_event_messages_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentityEvent.ProtoReflect.Descriptor instead.
func (*IdentityEvent) Descriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{6}
}

func (x *IdentityEvent) GetEventType() isIdentityEvent_EventType {
	if x != nil {
		return x.EventType
	}
	return nil
}

func (x *IdentityEvent) GetUserEvent() *IdentityUserPayload {
	if x != nil {
		if x, ok := x.EventType.(*IdentityEvent_UserEvent); ok {
			return x.UserEvent
		}
	}
	return nil
}

func (x *IdentityEvent) GetGroupEvent() *IdentityGroupPayload {
	if x != nil {
		if x, ok := x.EventType.(*IdentityEvent_GroupEvent); ok {
			return x.GroupEvent
		}
	}
	return nil
}

func (x *IdentityEvent) GetComputerEvent() *IdentityComputerPayload {
	if x != nil {
		if x, ok := x.EventType.(*IdentityEvent_ComputerEvent); ok {
			return x.ComputerEvent
		}
	}
	return nil
}

type isIdentityEvent_EventType interface {
	isIdentityEvent_EventType()
}

type IdentityEvent_UserEvent struct {
	UserEvent *IdentityUserPayload `protobuf:"bytes,1,opt,name=user_event,json=userEvent,proto3,oneof"`
}

type IdentityEvent_GroupEvent struct {
	GroupEvent *IdentityGroupPayload `protobuf:"bytes,2,opt,name=group_event,json=groupEvent,proto3,oneof"`
}

type IdentityEvent_ComputerEvent struct {
	ComputerEvent *IdentityComputerPayload `protobuf:"bytes,3,opt,name=computer_event,json=computerEvent,proto3,oneof"`
}

func (*IdentityEvent_UserEvent) isIdentityEvent_EventType() {}

func (*IdentityEvent_GroupEvent) isIdentityEvent_EventType() {}

func (*IdentityEvent_ComputerEvent) isIdentityEvent_EventType() {}

// Access control events wrapper
type AccessEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to EventType:
	//
	//	*AccessEvent_AclEvent
	//	*AccessEvent_PermissionEvent
	EventType     isAccessEvent_EventType `protobuf_oneof:"event_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccessEvent) Reset() {
	*x = AccessEvent{}
	mi := &file_proto_events_event_messages_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccessEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessEvent) ProtoMessage() {}

func (x *AccessEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_event_messages_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessEvent.ProtoReflect.Descriptor instead.
func (*AccessEvent) Descriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{7}
}

func (x *AccessEvent) GetEventType() isAccessEvent_EventType {
	if x != nil {
		return x.EventType
	}
	return nil
}

func (x *AccessEvent) GetAclEvent() *AccessACLPayload {
	if x != nil {
		if x, ok := x.EventType.(*AccessEvent_AclEvent); ok {
			return x.AclEvent
		}
	}
	return nil
}

func (x *AccessEvent) GetPermissionEvent() *AccessPermissionPayload {
	if x != nil {
		if x, ok := x.EventType.(*AccessEvent_PermissionEvent); ok {
			return x.PermissionEvent
		}
	}
	return nil
}

type isAccessEvent_EventType interface {
	isAccessEvent_EventType()
}

type AccessEvent_AclEvent struct {
	AclEvent *AccessACLPayload `protobuf:"bytes,1,opt,name=acl_event,json=aclEvent,proto3,oneof"`
}

type AccessEvent_PermissionEvent struct {
	PermissionEvent *AccessPermissionPayload `protobuf:"bytes,2,opt,name=permission_event,json=permissionEvent,proto3,oneof"`
}

func (*AccessEvent_AclEvent) isAccessEvent_EventType() {}

func (*AccessEvent_PermissionEvent) isAccessEvent_EventType() {}

// File sharing events wrapper
type SharingEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to EventType:
	//
	//	*SharingEvent_ShareEvent
	//	*SharingEvent_ConnectionEvent
	//	*SharingEvent_FileAccessEvent
	EventType     isSharingEvent_EventType `protobuf_oneof:"event_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SharingEvent) Reset() {
	*x = SharingEvent{}
	mi := &file_proto_events_event_messages_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SharingEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SharingEvent) ProtoMessage() {}

func (x *SharingEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_event_messages_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SharingEvent.ProtoReflect.Descriptor instead.
func (*SharingEvent) Descriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{8}
}

func (x *SharingEvent) GetEventType() isSharingEvent_EventType {
	if x != nil {
		return x.EventType
	}
	return nil
}

func (x *SharingEvent) GetShareEvent() *SharingSharePayload {
	if x != nil {
		if x, ok := x.EventType.(*SharingEvent_ShareEvent); ok {
			return x.ShareEvent
		}
	}
	return nil
}

func (x *SharingEvent) GetConnectionEvent() *SharingConnectionPayload {
	if x != nil {
		if x, ok := x.EventType.(*SharingEvent_ConnectionEvent); ok {
			return x.ConnectionEvent
		}
	}
	return nil
}

func (x *SharingEvent) GetFileAccessEvent() *SharingFileAccessPayload {
	if x != nil {
		if x, ok := x.EventType.(*SharingEvent_FileAccessEvent); ok {
			return x.FileAccessEvent
		}
	}
	return nil
}

type isSharingEvent_EventType interface {
	isSharingEvent_EventType()
}

type SharingEvent_ShareEvent struct {
	ShareEvent *SharingSharePayload `protobuf:"bytes,1,opt,name=share_event,json=shareEvent,proto3,oneof"`
}

type SharingEvent_ConnectionEvent struct {
	ConnectionEvent *SharingConnectionPayload `protobuf:"bytes,2,opt,name=connection_event,json=connectionEvent,proto3,oneof"`
}

type SharingEvent_FileAccessEvent struct {
	FileAccessEvent *SharingFileAccessPayload `protobuf:"bytes,3,opt,name=file_access_event,json=fileAccessEvent,proto3,oneof"`
}

func (*SharingEvent_ShareEvent) isSharingEvent_EventType() {}

func (*SharingEvent_ConnectionEvent) isSharingEvent_EventType() {}

func (*SharingEvent_FileAccessEvent) isSharingEvent_EventType() {}

// Usage events wrapper
type UsageEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to EventType:
	//
	//	*UsageEvent_QuotaEvent
	//	*UsageEvent_ResourceEvent
	//	*UsageEvent_ThresholdEvent
	EventType     isUsageEvent_EventType `protobuf_oneof:"event_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UsageEvent) Reset() {
	*x = UsageEvent{}
	mi := &file_proto_events_event_messages_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UsageEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsageEvent) ProtoMessage() {}

func (x *UsageEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_event_messages_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsageEvent.ProtoReflect.Descriptor instead.
func (*UsageEvent) Descriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{9}
}

func (x *UsageEvent) GetEventType() isUsageEvent_EventType {
	if x != nil {
		return x.EventType
	}
	return nil
}

func (x *UsageEvent) GetQuotaEvent() *UsageQuotaPayload {
	if x != nil {
		if x, ok := x.EventType.(*UsageEvent_QuotaEvent); ok {
			return x.QuotaEvent
		}
	}
	return nil
}

func (x *UsageEvent) GetResourceEvent() *UsageResourcePayload {
	if x != nil {
		if x, ok := x.EventType.(*UsageEvent_ResourceEvent); ok {
			return x.ResourceEvent
		}
	}
	return nil
}

func (x *UsageEvent) GetThresholdEvent() *UsageThresholdPayload {
	if x != nil {
		if x, ok := x.EventType.(*UsageEvent_ThresholdEvent); ok {
			return x.ThresholdEvent
		}
	}
	return nil
}

type isUsageEvent_EventType interface {
	isUsageEvent_EventType()
}

type UsageEvent_QuotaEvent struct {
	QuotaEvent *UsageQuotaPayload `protobuf:"bytes,1,opt,name=quota_event,json=quotaEvent,proto3,oneof"`
}

type UsageEvent_ResourceEvent struct {
	ResourceEvent *UsageResourcePayload `protobuf:"bytes,2,opt,name=resource_event,json=resourceEvent,proto3,oneof"`
}

type UsageEvent_ThresholdEvent struct {
	ThresholdEvent *UsageThresholdPayload `protobuf:"bytes,3,opt,name=threshold_event,json=thresholdEvent,proto3,oneof"`
}

func (*UsageEvent_QuotaEvent) isUsageEvent_EventType() {}

func (*UsageEvent_ResourceEvent) isUsageEvent_EventType() {}

func (*UsageEvent_ThresholdEvent) isUsageEvent_EventType() {}

// Data transfer events wrapper
type DataTransferEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to EventType:
	//
	//	*DataTransferEvent_TransferEvent
	EventType     isDataTransferEvent_EventType `protobuf_oneof:"event_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataTransferEvent) Reset() {
	*x = DataTransferEvent{}
	mi := &file_proto_events_event_messages_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataTransferEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataTransferEvent) ProtoMessage() {}

func (x *DataTransferEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_event_messages_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataTransferEvent.ProtoReflect.Descriptor instead.
func (*DataTransferEvent) Descriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{10}
}

func (x *DataTransferEvent) GetEventType() isDataTransferEvent_EventType {
	if x != nil {
		return x.EventType
	}
	return nil
}

func (x *DataTransferEvent) GetTransferEvent() *DataTransferTransferPayload {
	if x != nil {
		if x, ok := x.EventType.(*DataTransferEvent_TransferEvent); ok {
			return x.TransferEvent
		}
	}
	return nil
}

type isDataTransferEvent_EventType interface {
	isDataTransferEvent_EventType()
}

type DataTransferEvent_TransferEvent struct {
	TransferEvent *DataTransferTransferPayload `protobuf:"bytes,1,opt,name=transfer_event,json=transferEvent,proto3,oneof"`
}

func (*DataTransferEvent_TransferEvent) isDataTransferEvent_EventType() {}

type SystemStartupPayload struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	RodentId       string                 `protobuf:"bytes,1,opt,name=rodent_id,json=rodentId,proto3" json:"rodent_id,omitempty"`                                                                                 // Rodent node identifier
	OrganizationId string                 `protobuf:"bytes,2,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`                                                               // Organization identifier
	StartupTime    string                 `protobuf:"bytes,3,opt,name=startup_time,json=startupTime,proto3" json:"startup_time,omitempty"`                                                                        // RFC3339 timestamp
	StartupType    string                 `protobuf:"bytes,4,opt,name=startup_type,json=startupType,proto3" json:"startup_type,omitempty"`                                                                        // "initial_startup", "restart", "reconnect"
	Services       []string               `protobuf:"bytes,5,rep,name=services,proto3" json:"services,omitempty"`                                                                                                 // Services started
	Version        string                 `protobuf:"bytes,6,opt,name=version,proto3" json:"version,omitempty"`                                                                                                   // Rodent version
	SystemInfo     map[string]string      `protobuf:"bytes,7,rep,name=system_info,json=systemInfo,proto3" json:"system_info,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // OS, arch, hostname, etc.
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SystemStartupPayload) Reset() {
	*x = SystemStartupPayload{}
	mi := &file_proto_events_event_messages_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemStartupPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemStartupPayload) ProtoMessage() {}

func (x *SystemStartupPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_event_messages_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemStartupPayload.ProtoReflect.Descriptor instead.
func (*SystemStartupPayload) Descriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{11}
}

func (x *SystemStartupPayload) GetRodentId() string {
	if x != nil {
		return x.RodentId
	}
	return ""
}

func (x *SystemStartupPayload) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *SystemStartupPayload) GetStartupTime() string {
	if x != nil {
		return x.StartupTime
	}
	return ""
}

func (x *SystemStartupPayload) GetStartupType() string {
	if x != nil {
		return x.StartupType
	}
	return ""
}

func (x *SystemStartupPayload) GetServices() []string {
	if x != nil {
		return x.Services
	}
	return nil
}

func (x *SystemStartupPayload) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *SystemStartupPayload) GetSystemInfo() map[string]string {
	if x != nil {
		return x.SystemInfo
	}
	return nil
}

type SystemRegistrationPayload struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	RodentId           string                 `protobuf:"bytes,1,opt,name=rodent_id,json=rodentId,proto3" json:"rodent_id,omitempty"`                               // Rodent node identifier
	OrganizationId     string                 `protobuf:"bytes,2,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`             // Organization identifier
	RegisteredAt       string                 `protobuf:"bytes,3,opt,name=registered_at,json=registeredAt,proto3" json:"registered_at,omitempty"`                   // RFC3339 timestamp
	ToggleDomain       string                 `protobuf:"bytes,4,opt,name=toggle_domain,json=toggleDomain,proto3" json:"toggle_domain,omitempty"`                   // Toggle domain registered to
	CertificateExpires string                 `protobuf:"bytes,5,opt,name=certificate_expires,json=certificateExpires,proto3" json:"certificate_expires,omitempty"` // RFC3339 timestamp (empty for private network)
	IsPrivateNetwork   bool                   `protobuf:"varint,6,opt,name=is_private_network,json=isPrivateNetwork,proto3" json:"is_private_network,omitempty"`    // Whether Rodent is in private network
	RegistrationType   string                 `protobuf:"bytes,7,opt,name=registration_type,json=registrationType,proto3" json:"registration_type,omitempty"`       // "new_registration", "renewal", "reconnect"
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *SystemRegistrationPayload) Reset() {
	*x = SystemRegistrationPayload{}
	mi := &file_proto_events_event_messages_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemRegistrationPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemRegistrationPayload) ProtoMessage() {}

func (x *SystemRegistrationPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_event_messages_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemRegistrationPayload.ProtoReflect.Descriptor instead.
func (*SystemRegistrationPayload) Descriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{12}
}

func (x *SystemRegistrationPayload) GetRodentId() string {
	if x != nil {
		return x.RodentId
	}
	return ""
}

func (x *SystemRegistrationPayload) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *SystemRegistrationPayload) GetRegisteredAt() string {
	if x != nil {
		return x.RegisteredAt
	}
	return ""
}

func (x *SystemRegistrationPayload) GetToggleDomain() string {
	if x != nil {
		return x.ToggleDomain
	}
	return ""
}

func (x *SystemRegistrationPayload) GetCertificateExpires() string {
	if x != nil {
		return x.CertificateExpires
	}
	return ""
}

func (x *SystemRegistrationPayload) GetIsPrivateNetwork() bool {
	if x != nil {
		return x.IsPrivateNetwork
	}
	return false
}

func (x *SystemRegistrationPayload) GetRegistrationType() string {
	if x != nil {
		return x.RegistrationType
	}
	return ""
}

type SystemShutdownPayload struct {
	state         protoimpl.MessageState                        `protogen:"open.v1"`
	Operation     SystemShutdownPayload_SystemShutdownOperation `protobuf:"varint,1,opt,name=operation,proto3,enum=rodent.events.SystemShutdownPayload_SystemShutdownOperation" json:"operation,omitempty"`
	Reason        string                                        `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	Graceful      bool                                          `protobuf:"varint,3,opt,name=graceful,proto3" json:"graceful,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemShutdownPayload) Reset() {
	*x = SystemShutdownPayload{}
	mi := &file_proto_events_event_messages_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemShutdownPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemShutdownPayload) ProtoMessage() {}

func (x *SystemShutdownPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_event_messages_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemShutdownPayload.ProtoReflect.Descriptor instead.
func (*SystemShutdownPayload) Descriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{13}
}

func (x *SystemShutdownPayload) GetOperation() SystemShutdownPayload_SystemShutdownOperation {
	if x != nil {
		return x.Operation
	}
	return SystemShutdownPayload_SYSTEM_SHUTDOWN_OPERATION_UNSPECIFIED
}

func (x *SystemShutdownPayload) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *SystemShutdownPayload) GetGraceful() bool {
	if x != nil {
		return x.Graceful
	}
	return false
}

type SystemConfigChangePayload struct {
	state         protoimpl.MessageState                          `protogen:"open.v1"`
	ConfigSection string                                          `protobuf:"bytes,1,opt,name=config_section,json=configSection,proto3" json:"config_section,omitempty"`
	ChangedKeys   []string                                        `protobuf:"bytes,2,rep,name=changed_keys,json=changedKeys,proto3" json:"changed_keys,omitempty"`
	Operation     SystemConfigChangePayload_SystemConfigOperation `protobuf:"varint,3,opt,name=operation,proto3,enum=rodent.events.SystemConfigChangePayload_SystemConfigOperation" json:"operation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemConfigChangePayload) Reset() {
	*x = SystemConfigChangePayload{}
	mi := &file_proto_events_event_messages_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemConfigChangePayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemConfigChangePayload) ProtoMessage() {}

func (x *SystemConfigChangePayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_event_messages_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemConfigChangePayload.ProtoReflect.Descriptor instead.
func (*SystemConfigChangePayload) Descriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{14}
}

func (x *SystemConfigChangePayload) GetConfigSection() string {
	if x != nil {
		return x.ConfigSection
	}
	return ""
}

func (x *SystemConfigChangePayload) GetChangedKeys() []string {
	if x != nil {
		return x.ChangedKeys
	}
	return nil
}

func (x *SystemConfigChangePayload) GetOperation() SystemConfigChangePayload_SystemConfigOperation {
	if x != nil {
		return x.Operation
	}
	return SystemConfigChangePayload_SYSTEM_CONFIG_OPERATION_UNSPECIFIED
}

type SystemUserPayload struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Username      string                                `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	DisplayName   string                                `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Uid           int32                                 `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
	Groups        []string                              `protobuf:"bytes,4,rep,name=groups,proto3" json:"groups,omitempty"`
	Operation     SystemUserPayload_SystemUserOperation `protobuf:"varint,5,opt,name=operation,proto3,enum=rodent.events.SystemUserPayload_SystemUserOperation" json:"operation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemUserPayload) Reset() {
	*x = SystemUserPayload{}
	mi := &file_proto_events_event_messages_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemUserPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemUserPayload) ProtoMessage() {}

func (x *SystemUserPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_event_messages_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemUserPayload.ProtoReflect.Descriptor instead.
func (*SystemUserPayload) Descriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{15}
}

func (x *SystemUserPayload) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SystemUserPayload) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *SystemUserPayload) GetUid() int32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *SystemUserPayload) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *SystemUserPayload) GetOperation() SystemUserPayload_SystemUserOperation {
	if x != nil {
		return x.Operation
	}
	return SystemUserPayload_SYSTEM_USER_OPERATION_UNSPECIFIED
}

type StoragePoolPayload struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	PoolName      string                                  `protobuf:"bytes,1,opt,name=pool_name,json=poolName,proto3" json:"pool_name,omitempty"`
	Devices       []string                                `protobuf:"bytes,2,rep,name=devices,proto3" json:"devices,omitempty"`
	RaidType      string                                  `protobuf:"bytes,3,opt,name=raid_type,json=raidType,proto3" json:"raid_type,omitempty"`
	SizeBytes     int64                                   `protobuf:"varint,4,opt,name=size_bytes,json=sizeBytes,proto3" json:"size_bytes,omitempty"`
	UsedBytes     int64                                   `protobuf:"varint,5,opt,name=used_bytes,json=usedBytes,proto3" json:"used_bytes,omitempty"`
	Operation     StoragePoolPayload_StoragePoolOperation `protobuf:"varint,6,opt,name=operation,proto3,enum=rodent.events.StoragePoolPayload_StoragePoolOperation" json:"operation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoragePoolPayload) Reset() {
	*x = StoragePoolPayload{}
	mi := &file_proto_events_event_messages_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoragePoolPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoragePoolPayload) ProtoMessage() {}

func (x *StoragePoolPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_event_messages_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoragePoolPayload.ProtoReflect.Descriptor instead.
func (*StoragePoolPayload) Descriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{16}
}

func (x *StoragePoolPayload) GetPoolName() string {
	if x != nil {
		return x.PoolName
	}
	return ""
}

func (x *StoragePoolPayload) GetDevices() []string {
	if x != nil {
		return x.Devices
	}
	return nil
}

func (x *StoragePoolPayload) GetRaidType() string {
	if x != nil {
		return x.RaidType
	}
	return ""
}

func (x *StoragePoolPayload) GetSizeBytes() int64 {
	if x != nil {
		return x.SizeBytes
	}
	return 0
}

func (x *StoragePoolPayload) GetUsedBytes() int64 {
	if x != nil {
		return x.UsedBytes
	}
	return 0
}

func (x *StoragePoolPayload) GetOperation() StoragePoolPayload_StoragePoolOperation {
	if x != nil {
		return x.Operation
	}
	return StoragePoolPayload_STORAGE_POOL_OPERATION_UNSPECIFIED
}

type StorageDatasetPayload struct {
	state         protoimpl.MessageState                        `protogen:"open.v1"`
	DatasetName   string                                        `protobuf:"bytes,1,opt,name=dataset_name,json=datasetName,proto3" json:"dataset_name,omitempty"`
	PoolName      string                                        `protobuf:"bytes,2,opt,name=pool_name,json=poolName,proto3" json:"pool_name,omitempty"`
	Type          string                                        `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Mountpoint    string                                        `protobuf:"bytes,4,opt,name=mountpoint,proto3" json:"mountpoint,omitempty"`
	SizeBytes     int64                                         `protobuf:"varint,5,opt,name=size_bytes,json=sizeBytes,proto3" json:"size_bytes,omitempty"`
	Operation     StorageDatasetPayload_StorageDatasetOperation `protobuf:"varint,6,opt,name=operation,proto3,enum=rodent.events.StorageDatasetPayload_StorageDatasetOperation" json:"operation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StorageDatasetPayload) Reset() {
	*x = StorageDatasetPayload{}
	mi := &file_proto_events_event_messages_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageDatasetPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageDatasetPayload) ProtoMessage() {}

func (x *StorageDatasetPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_event_messages_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageDatasetPayload.ProtoReflect.Descriptor instead.
func (*StorageDatasetPayload) Descriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{17}
}

func (x *StorageDatasetPayload) GetDatasetName() string {
	if x != nil {
		return x.DatasetName
	}
	return ""
}

func (x *StorageDatasetPayload) GetPoolName() string {
	if x != nil {
		return x.PoolName
	}
	return ""
}

func (x *StorageDatasetPayload) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *StorageDatasetPayload) GetMountpoint() string {
	if x != nil {
		return x.Mountpoint
	}
	return ""
}

func (x *StorageDatasetPayload) GetSizeBytes() int64 {
	if x != nil {
		return x.SizeBytes
	}
	return 0
}

func (x *StorageDatasetPayload) GetOperation() StorageDatasetPayload_StorageDatasetOperation {
	if x != nil {
		return x.Operation
	}
	return StorageDatasetPayload_STORAGE_DATASET_OPERATION_UNSPECIFIED
}

type StorageSnapshotPayload struct {
	state         protoimpl.MessageState                          `protogen:"open.v1"`
	SnapshotName  string                                          `protobuf:"bytes,1,opt,name=snapshot_name,json=snapshotName,proto3" json:"snapshot_name,omitempty"`
	DatasetName   string                                          `protobuf:"bytes,2,opt,name=dataset_name,json=datasetName,proto3" json:"dataset_name,omitempty"`
	CreationTime  int64                                           `protobuf:"varint,3,opt,name=creation_time,json=creationTime,proto3" json:"creation_time,omitempty"`
	SizeBytes     int64                                           `protobuf:"varint,4,opt,name=size_bytes,json=sizeBytes,proto3" json:"size_bytes,omitempty"`
	Operation     StorageSnapshotPayload_StorageSnapshotOperation `protobuf:"varint,5,opt,name=operation,proto3,enum=rodent.events.StorageSnapshotPayload_StorageSnapshotOperation" json:"operation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StorageSnapshotPayload) Reset() {
	*x = StorageSnapshotPayload{}
	mi := &file_proto_events_event_messages_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageSnapshotPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageSnapshotPayload) ProtoMessage() {}

func (x *StorageSnapshotPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_event_messages_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageSnapshotPayload.ProtoReflect.Descriptor instead.
func (*StorageSnapshotPayload) Descriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{18}
}

func (x *StorageSnapshotPayload) GetSnapshotName() string {
	if x != nil {
		return x.SnapshotName
	}
	return ""
}

func (x *StorageSnapshotPayload) GetDatasetName() string {
	if x != nil {
		return x.DatasetName
	}
	return ""
}

func (x *StorageSnapshotPayload) GetCreationTime() int64 {
	if x != nil {
		return x.CreationTime
	}
	return 0
}

func (x *StorageSnapshotPayload) GetSizeBytes() int64 {
	if x != nil {
		return x.SizeBytes
	}
	return 0
}

func (x *StorageSnapshotPayload) GetOperation() StorageSnapshotPayload_StorageSnapshotOperation {
	if x != nil {
		return x.Operation
	}
	return StorageSnapshotPayload_STORAGE_SNAPSHOT_OPERATION_UNSPECIFIED
}

type ServiceStatusPayload struct {
	state         protoimpl.MessageState                      `protogen:"open.v1"`
	ServiceName   string                                      `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	Status        string                                      `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Pid           int32                                       `protobuf:"varint,3,opt,name=pid,proto3" json:"pid,omitempty"`
	UptimeSeconds int64                                       `protobuf:"varint,4,opt,name=uptime_seconds,json=uptimeSeconds,proto3" json:"uptime_seconds,omitempty"`
	Operation     ServiceStatusPayload_ServiceStatusOperation `protobuf:"varint,5,opt,name=operation,proto3,enum=rodent.events.ServiceStatusPayload_ServiceStatusOperation" json:"operation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceStatusPayload) Reset() {
	*x = ServiceStatusPayload{}
	mi := &file_proto_events_event_messages_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceStatusPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceStatusPayload) ProtoMessage() {}

func (x *ServiceStatusPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_event_messages_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceStatusPayload.ProtoReflect.Descriptor instead.
func (*ServiceStatusPayload) Descriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{19}
}

func (x *ServiceStatusPayload) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *ServiceStatusPayload) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ServiceStatusPayload) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *ServiceStatusPayload) GetUptimeSeconds() int64 {
	if x != nil {
		return x.UptimeSeconds
	}
	return 0
}

func (x *ServiceStatusPayload) GetOperation() ServiceStatusPayload_ServiceStatusOperation {
	if x != nil {
		return x.Operation
	}
	return ServiceStatusPayload_SERVICE_STATUS_OPERATION_UNSPECIFIED
}

// Network event payloads
type NetworkInterfacePayload struct {
	state         protoimpl.MessageState                            `protogen:"open.v1"`
	InterfaceName string                                            `protobuf:"bytes,1,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	IpAddress     string                                            `protobuf:"bytes,2,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	MacAddress    string                                            `protobuf:"bytes,3,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	IsUp          bool                                              `protobuf:"varint,4,opt,name=is_up,json=isUp,proto3" json:"is_up,omitempty"`
	Operation     NetworkInterfacePayload_NetworkInterfaceOperation `protobuf:"varint,5,opt,name=operation,proto3,enum=rodent.events.NetworkInterfacePayload_NetworkInterfaceOperation" json:"operation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkInterfacePayload) Reset() {
	*x = NetworkInterfacePayload{}
	mi := &file_proto_events_event_messages_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkInterfacePayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkInterfacePayload) ProtoMessage() {}

func (x *NetworkInterfacePayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_event_messages_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkInterfacePayload.ProtoReflect.Descriptor instead.
func (*NetworkInterfacePayload) Descriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{20}
}

func (x *NetworkInterfacePayload) GetInterfaceName() string {
	if x != nil {
		return x.InterfaceName
	}
	return ""
}

func (x *NetworkInterfacePayload) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *NetworkInterfacePayload) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *NetworkInterfacePayload) GetIsUp() bool {
	if x != nil {
		return x.IsUp
	}
	return false
}

func (x *NetworkInterfacePayload) GetOperation() NetworkInterfacePayload_NetworkInterfaceOperation {
	if x != nil {
		return x.Operation
	}
	return NetworkInterfacePayload_NETWORK_INTERFACE_OPERATION_UNSPECIFIED
}

type NetworkConnectionPayload struct {
	state           protoimpl.MessageState                              `protogen:"open.v1"`
	SourceIp        string                                              `protobuf:"bytes,1,opt,name=source_ip,json=sourceIp,proto3" json:"source_ip,omitempty"`
	DestinationIp   string                                              `protobuf:"bytes,2,opt,name=destination_ip,json=destinationIp,proto3" json:"destination_ip,omitempty"`
	SourcePort      int32                                               `protobuf:"varint,3,opt,name=source_port,json=sourcePort,proto3" json:"source_port,omitempty"`
	DestinationPort int32                                               `protobuf:"varint,4,opt,name=destination_port,json=destinationPort,proto3" json:"destination_port,omitempty"`
	Protocol        string                                              `protobuf:"bytes,5,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Operation       NetworkConnectionPayload_NetworkConnectionOperation `protobuf:"varint,6,opt,name=operation,proto3,enum=rodent.events.NetworkConnectionPayload_NetworkConnectionOperation" json:"operation,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *NetworkConnectionPayload) Reset() {
	*x = NetworkConnectionPayload{}
	mi := &file_proto_events_event_messages_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkConnectionPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkConnectionPayload) ProtoMessage() {}

func (x *NetworkConnectionPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_event_messages_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkConnectionPayload.ProtoReflect.Descriptor instead.
func (*NetworkConnectionPayload) Descriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{21}
}

func (x *NetworkConnectionPayload) GetSourceIp() string {
	if x != nil {
		return x.SourceIp
	}
	return ""
}

func (x *NetworkConnectionPayload) GetDestinationIp() string {
	if x != nil {
		return x.DestinationIp
	}
	return ""
}

func (x *NetworkConnectionPayload) GetSourcePort() int32 {
	if x != nil {
		return x.SourcePort
	}
	return 0
}

func (x *NetworkConnectionPayload) GetDestinationPort() int32 {
	if x != nil {
		return x.DestinationPort
	}
	return 0
}

func (x *NetworkConnectionPayload) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *NetworkConnectionPayload) GetOperation() NetworkConnectionPayload_NetworkConnectionOperation {
	if x != nil {
		return x.Operation
	}
	return NetworkConnectionPayload_NETWORK_CONNECTION_OPERATION_UNSPECIFIED
}

// Security event payloads
type SecurityAuthPayload struct {
	state         protoimpl.MessageState                    `protogen:"open.v1"`
	Username      string                                    `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Method        string                                    `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
	SourceIp      string                                    `protobuf:"bytes,3,opt,name=source_ip,json=sourceIp,proto3" json:"source_ip,omitempty"`
	Operation     SecurityAuthPayload_SecurityAuthOperation `protobuf:"varint,4,opt,name=operation,proto3,enum=rodent.events.SecurityAuthPayload_SecurityAuthOperation" json:"operation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SecurityAuthPayload) Reset() {
	*x = SecurityAuthPayload{}
	mi := &file_proto_events_event_messages_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SecurityAuthPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecurityAuthPayload) ProtoMessage() {}

func (x *SecurityAuthPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_event_messages_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecurityAuthPayload.ProtoReflect.Descriptor instead.
func (*SecurityAuthPayload) Descriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{22}
}

func (x *SecurityAuthPayload) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SecurityAuthPayload) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *SecurityAuthPayload) GetSourceIp() string {
	if x != nil {
		return x.SourceIp
	}
	return ""
}

func (x *SecurityAuthPayload) GetOperation() SecurityAuthPayload_SecurityAuthOperation {
	if x != nil {
		return x.Operation
	}
	return SecurityAuthPayload_SECURITY_AUTH_OPERATION_UNSPECIFIED
}

type SecurityKeyPayload struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	KeyId         string                                  `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	KeyType       string                                  `protobuf:"bytes,2,opt,name=key_type,json=keyType,proto3" json:"key_type,omitempty"`
	Username      string                                  `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	ExpiryTime    int64                                   `protobuf:"varint,4,opt,name=expiry_time,json=expiryTime,proto3" json:"expiry_time,omitempty"`
	Operation     SecurityKeyPayload_SecurityKeyOperation `protobuf:"varint,5,opt,name=operation,proto3,enum=rodent.events.SecurityKeyPayload_SecurityKeyOperation" json:"operation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SecurityKeyPayload) Reset() {
	*x = SecurityKeyPayload{}
	mi := &file_proto_events_event_messages_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SecurityKeyPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecurityKeyPayload) ProtoMessage() {}

func (x *SecurityKeyPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_event_messages_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecurityKeyPayload.ProtoReflect.Descriptor instead.
func (*SecurityKeyPayload) Descriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{23}
}

func (x *SecurityKeyPayload) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *SecurityKeyPayload) GetKeyType() string {
	if x != nil {
		return x.KeyType
	}
	return ""
}

func (x *SecurityKeyPayload) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SecurityKeyPayload) GetExpiryTime() int64 {
	if x != nil {
		return x.ExpiryTime
	}
	return 0
}

func (x *SecurityKeyPayload) GetOperation() SecurityKeyPayload_SecurityKeyOperation {
	if x != nil {
		return x.Operation
	}
	return SecurityKeyPayload_SECURITY_KEY_OPERATION_UNSPECIFIED
}

type SecurityCertificatePayload struct {
	state         protoimpl.MessageState                                  `protogen:"open.v1"`
	CertId        string                                                  `protobuf:"bytes,1,opt,name=cert_id,json=certId,proto3" json:"cert_id,omitempty"`
	Domain        string                                                  `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	IssuedTime    int64                                                   `protobuf:"varint,3,opt,name=issued_time,json=issuedTime,proto3" json:"issued_time,omitempty"`
	ExpiryTime    int64                                                   `protobuf:"varint,4,opt,name=expiry_time,json=expiryTime,proto3" json:"expiry_time,omitempty"`
	Operation     SecurityCertificatePayload_SecurityCertificateOperation `protobuf:"varint,5,opt,name=operation,proto3,enum=rodent.events.SecurityCertificatePayload_SecurityCertificateOperation" json:"operation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SecurityCertificatePayload) Reset() {
	*x = SecurityCertificatePayload{}
	mi := &file_proto_events_event_messages_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SecurityCertificatePayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecurityCertificatePayload) ProtoMessage() {}

func (x *SecurityCertificatePayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_event_messages_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecurityCertificatePayload.ProtoReflect.Descriptor instead.
func (*SecurityCertificatePayload) Descriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{24}
}

func (x *SecurityCertificatePayload) GetCertId() string {
	if x != nil {
		return x.CertId
	}
	return ""
}

func (x *SecurityCertificatePayload) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *SecurityCertificatePayload) GetIssuedTime() int64 {
	if x != nil {
		return x.IssuedTime
	}
	return 0
}

func (x *SecurityCertificatePayload) GetExpiryTime() int64 {
	if x != nil {
		return x.ExpiryTime
	}
	return 0
}

func (x *SecurityCertificatePayload) GetOperation() SecurityCertificatePayload_SecurityCertificateOperation {
	if x != nil {
		return x.Operation
	}
	return SecurityCertificatePayload_SECURITY_CERTIFICATE_OPERATION_UNSPECIFIED
}

// Identity event payloads (AD/LDAP)
type IdentityUserPayload struct {
	state         protoimpl.MessageState                    `protogen:"open.v1"`
	Username      string                                    `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	DisplayName   string                                    `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Email         string                                    `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Groups        []string                                  `protobuf:"bytes,4,rep,name=groups,proto3" json:"groups,omitempty"`
	Domain        string                                    `protobuf:"bytes,5,opt,name=domain,proto3" json:"domain,omitempty"`
	Enabled       bool                                      `protobuf:"varint,6,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Operation     IdentityUserPayload_IdentityUserOperation `protobuf:"varint,7,opt,name=operation,proto3,enum=rodent.events.IdentityUserPayload_IdentityUserOperation" json:"operation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IdentityUserPayload) Reset() {
	*x = IdentityUserPayload{}
	mi := &file_proto_events_event_messages_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IdentityUserPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentityUserPayload) ProtoMessage() {}

func (x *IdentityUserPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_event_messages_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentityUserPayload.ProtoReflect.Descriptor instead.
func (*IdentityUserPayload) Descriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{25}
}

func (x *IdentityUserPayload) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *IdentityUserPayload) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *IdentityUserPayload) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *IdentityUserPayload) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *IdentityUserPayload) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *IdentityUserPayload) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *IdentityUserPayload) GetOperation() IdentityUserPayload_IdentityUserOperation {
	if x != nil {
		return x.Operation
	}
	return IdentityUserPayload_IDENTITY_USER_OPERATION_UNSPECIFIED
}

type IdentityGroupPayload struct {
	state         protoimpl.MessageState                      `protogen:"open.v1"`
	GroupName     string                                      `protobuf:"bytes,1,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	Description   string                                      `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Members       []string                                    `protobuf:"bytes,3,rep,name=members,proto3" json:"members,omitempty"`
	Domain        string                                      `protobuf:"bytes,4,opt,name=domain,proto3" json:"domain,omitempty"`
	Operation     IdentityGroupPayload_IdentityGroupOperation `protobuf:"varint,5,opt,name=operation,proto3,enum=rodent.events.IdentityGroupPayload_IdentityGroupOperation" json:"operation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IdentityGroupPayload) Reset() {
	*x = IdentityGroupPayload{}
	mi := &file_proto_events_event_messages_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IdentityGroupPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentityGroupPayload) ProtoMessage() {}

func (x *IdentityGroupPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_event_messages_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentityGroupPayload.ProtoReflect.Descriptor instead.
func (*IdentityGroupPayload) Descriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{26}
}

func (x *IdentityGroupPayload) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *IdentityGroupPayload) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *IdentityGroupPayload) GetMembers() []string {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *IdentityGroupPayload) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *IdentityGroupPayload) GetOperation() IdentityGroupPayload_IdentityGroupOperation {
	if x != nil {
		return x.Operation
	}
	return IdentityGroupPayload_IDENTITY_GROUP_OPERATION_UNSPECIFIED
}

type IdentityComputerPayload struct {
	state         protoimpl.MessageState                            `protogen:"open.v1"`
	ComputerName  string                                            `protobuf:"bytes,1,opt,name=computer_name,json=computerName,proto3" json:"computer_name,omitempty"`
	IpAddress     string                                            `protobuf:"bytes,2,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	OsVersion     string                                            `protobuf:"bytes,3,opt,name=os_version,json=osVersion,proto3" json:"os_version,omitempty"`
	Domain        string                                            `protobuf:"bytes,4,opt,name=domain,proto3" json:"domain,omitempty"`
	Enabled       bool                                              `protobuf:"varint,5,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Operation     IdentityComputerPayload_IdentityComputerOperation `protobuf:"varint,6,opt,name=operation,proto3,enum=rodent.events.IdentityComputerPayload_IdentityComputerOperation" json:"operation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IdentityComputerPayload) Reset() {
	*x = IdentityComputerPayload{}
	mi := &file_proto_events_event_messages_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IdentityComputerPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentityComputerPayload) ProtoMessage() {}

func (x *IdentityComputerPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_event_messages_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentityComputerPayload.ProtoReflect.Descriptor instead.
func (*IdentityComputerPayload) Descriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{27}
}

func (x *IdentityComputerPayload) GetComputerName() string {
	if x != nil {
		return x.ComputerName
	}
	return ""
}

func (x *IdentityComputerPayload) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *IdentityComputerPayload) GetOsVersion() string {
	if x != nil {
		return x.OsVersion
	}
	return ""
}

func (x *IdentityComputerPayload) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *IdentityComputerPayload) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *IdentityComputerPayload) GetOperation() IdentityComputerPayload_IdentityComputerOperation {
	if x != nil {
		return x.Operation
	}
	return IdentityComputerPayload_IDENTITY_COMPUTER_OPERATION_UNSPECIFIED
}

// Access control event payloads
type AccessACLPayload struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	ResourcePath  string                              `protobuf:"bytes,1,opt,name=resource_path,json=resourcePath,proto3" json:"resource_path,omitempty"`
	Principal     string                              `protobuf:"bytes,2,opt,name=principal,proto3" json:"principal,omitempty"`
	Permissions   []string                            `protobuf:"bytes,3,rep,name=permissions,proto3" json:"permissions,omitempty"`
	Operation     AccessACLPayload_AccessACLOperation `protobuf:"varint,4,opt,name=operation,proto3,enum=rodent.events.AccessACLPayload_AccessACLOperation" json:"operation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccessACLPayload) Reset() {
	*x = AccessACLPayload{}
	mi := &file_proto_events_event_messages_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccessACLPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessACLPayload) ProtoMessage() {}

func (x *AccessACLPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_event_messages_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessACLPayload.ProtoReflect.Descriptor instead.
func (*AccessACLPayload) Descriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{28}
}

func (x *AccessACLPayload) GetResourcePath() string {
	if x != nil {
		return x.ResourcePath
	}
	return ""
}

func (x *AccessACLPayload) GetPrincipal() string {
	if x != nil {
		return x.Principal
	}
	return ""
}

func (x *AccessACLPayload) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *AccessACLPayload) GetOperation() AccessACLPayload_AccessACLOperation {
	if x != nil {
		return x.Operation
	}
	return AccessACLPayload_ACCESS_ACL_OPERATION_UNSPECIFIED
}

type AccessPermissionPayload struct {
	state         protoimpl.MessageState                            `protogen:"open.v1"`
	ResourcePath  string                                            `protobuf:"bytes,1,opt,name=resource_path,json=resourcePath,proto3" json:"resource_path,omitempty"`
	Username      string                                            `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Permission    string                                            `protobuf:"bytes,3,opt,name=permission,proto3" json:"permission,omitempty"`
	Granted       bool                                              `protobuf:"varint,4,opt,name=granted,proto3" json:"granted,omitempty"`
	Operation     AccessPermissionPayload_AccessPermissionOperation `protobuf:"varint,5,opt,name=operation,proto3,enum=rodent.events.AccessPermissionPayload_AccessPermissionOperation" json:"operation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccessPermissionPayload) Reset() {
	*x = AccessPermissionPayload{}
	mi := &file_proto_events_event_messages_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccessPermissionPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessPermissionPayload) ProtoMessage() {}

func (x *AccessPermissionPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_event_messages_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessPermissionPayload.ProtoReflect.Descriptor instead.
func (*AccessPermissionPayload) Descriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{29}
}

func (x *AccessPermissionPayload) GetResourcePath() string {
	if x != nil {
		return x.ResourcePath
	}
	return ""
}

func (x *AccessPermissionPayload) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AccessPermissionPayload) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

func (x *AccessPermissionPayload) GetGranted() bool {
	if x != nil {
		return x.Granted
	}
	return false
}

func (x *AccessPermissionPayload) GetOperation() AccessPermissionPayload_AccessPermissionOperation {
	if x != nil {
		return x.Operation
	}
	return AccessPermissionPayload_ACCESS_PERMISSION_OPERATION_UNSPECIFIED
}

// File sharing event payloads
type SharingSharePayload struct {
	state         protoimpl.MessageState                    `protogen:"open.v1"`
	ShareName     string                                    `protobuf:"bytes,1,opt,name=share_name,json=shareName,proto3" json:"share_name,omitempty"`
	Path          string                                    `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Protocol      string                                    `protobuf:"bytes,3,opt,name=protocol,proto3" json:"protocol,omitempty"`
	AllowedUsers  []string                                  `protobuf:"bytes,4,rep,name=allowed_users,json=allowedUsers,proto3" json:"allowed_users,omitempty"`
	ReadOnly      bool                                      `protobuf:"varint,5,opt,name=read_only,json=readOnly,proto3" json:"read_only,omitempty"`
	Operation     SharingSharePayload_SharingShareOperation `protobuf:"varint,6,opt,name=operation,proto3,enum=rodent.events.SharingSharePayload_SharingShareOperation" json:"operation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SharingSharePayload) Reset() {
	*x = SharingSharePayload{}
	mi := &file_proto_events_event_messages_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SharingSharePayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SharingSharePayload) ProtoMessage() {}

func (x *SharingSharePayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_event_messages_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SharingSharePayload.ProtoReflect.Descriptor instead.
func (*SharingSharePayload) Descriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{30}
}

func (x *SharingSharePayload) GetShareName() string {
	if x != nil {
		return x.ShareName
	}
	return ""
}

func (x *SharingSharePayload) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SharingSharePayload) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *SharingSharePayload) GetAllowedUsers() []string {
	if x != nil {
		return x.AllowedUsers
	}
	return nil
}

func (x *SharingSharePayload) GetReadOnly() bool {
	if x != nil {
		return x.ReadOnly
	}
	return false
}

func (x *SharingSharePayload) GetOperation() SharingSharePayload_SharingShareOperation {
	if x != nil {
		return x.Operation
	}
	return SharingSharePayload_SHARING_SHARE_OPERATION_UNSPECIFIED
}

type SharingConnectionPayload struct {
	state         protoimpl.MessageState                              `protogen:"open.v1"`
	ShareName     string                                              `protobuf:"bytes,1,opt,name=share_name,json=shareName,proto3" json:"share_name,omitempty"`
	Username      string                                              `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	ClientIp      string                                              `protobuf:"bytes,3,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`
	Protocol      string                                              `protobuf:"bytes,4,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Operation     SharingConnectionPayload_SharingConnectionOperation `protobuf:"varint,5,opt,name=operation,proto3,enum=rodent.events.SharingConnectionPayload_SharingConnectionOperation" json:"operation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SharingConnectionPayload) Reset() {
	*x = SharingConnectionPayload{}
	mi := &file_proto_events_event_messages_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SharingConnectionPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SharingConnectionPayload) ProtoMessage() {}

func (x *SharingConnectionPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_event_messages_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SharingConnectionPayload.ProtoReflect.Descriptor instead.
func (*SharingConnectionPayload) Descriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{31}
}

func (x *SharingConnectionPayload) GetShareName() string {
	if x != nil {
		return x.ShareName
	}
	return ""
}

func (x *SharingConnectionPayload) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SharingConnectionPayload) GetClientIp() string {
	if x != nil {
		return x.ClientIp
	}
	return ""
}

func (x *SharingConnectionPayload) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *SharingConnectionPayload) GetOperation() SharingConnectionPayload_SharingConnectionOperation {
	if x != nil {
		return x.Operation
	}
	return SharingConnectionPayload_SHARING_CONNECTION_OPERATION_UNSPECIFIED
}

type SharingFileAccessPayload struct {
	state         protoimpl.MessageState                              `protogen:"open.v1"`
	FilePath      string                                              `protobuf:"bytes,1,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	Username      string                                              `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	OperationType string                                              `protobuf:"bytes,3,opt,name=operation_type,json=operationType,proto3" json:"operation_type,omitempty"`
	FileSize      int64                                               `protobuf:"varint,4,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`
	Operation     SharingFileAccessPayload_SharingFileAccessOperation `protobuf:"varint,5,opt,name=operation,proto3,enum=rodent.events.SharingFileAccessPayload_SharingFileAccessOperation" json:"operation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SharingFileAccessPayload) Reset() {
	*x = SharingFileAccessPayload{}
	mi := &file_proto_events_event_messages_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SharingFileAccessPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SharingFileAccessPayload) ProtoMessage() {}

func (x *SharingFileAccessPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_event_messages_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SharingFileAccessPayload.ProtoReflect.Descriptor instead.
func (*SharingFileAccessPayload) Descriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{32}
}

func (x *SharingFileAccessPayload) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *SharingFileAccessPayload) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SharingFileAccessPayload) GetOperationType() string {
	if x != nil {
		return x.OperationType
	}
	return ""
}

func (x *SharingFileAccessPayload) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *SharingFileAccessPayload) GetOperation() SharingFileAccessPayload_SharingFileAccessOperation {
	if x != nil {
		return x.Operation
	}
	return SharingFileAccessPayload_SHARING_FILE_ACCESS_OPERATION_UNSPECIFIED
}

// Usage event payloads
type UsageQuotaPayload struct {
	state           protoimpl.MessageState                `protogen:"open.v1"`
	OrganizationId  string                                `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	ResourceType    string                                `protobuf:"bytes,2,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
	CurrentUsage    int64                                 `protobuf:"varint,3,opt,name=current_usage,json=currentUsage,proto3" json:"current_usage,omitempty"`
	QuotaLimit      int64                                 `protobuf:"varint,4,opt,name=quota_limit,json=quotaLimit,proto3" json:"quota_limit,omitempty"`
	UsagePercentage float32                               `protobuf:"fixed32,5,opt,name=usage_percentage,json=usagePercentage,proto3" json:"usage_percentage,omitempty"`
	Operation       UsageQuotaPayload_UsageQuotaOperation `protobuf:"varint,6,opt,name=operation,proto3,enum=rodent.events.UsageQuotaPayload_UsageQuotaOperation" json:"operation,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *UsageQuotaPayload) Reset() {
	*x = UsageQuotaPayload{}
	mi := &file_proto_events_event_messages_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UsageQuotaPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsageQuotaPayload) ProtoMessage() {}

func (x *UsageQuotaPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_event_messages_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsageQuotaPayload.ProtoReflect.Descriptor instead.
func (*UsageQuotaPayload) Descriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{33}
}

func (x *UsageQuotaPayload) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *UsageQuotaPayload) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

func (x *UsageQuotaPayload) GetCurrentUsage() int64 {
	if x != nil {
		return x.CurrentUsage
	}
	return 0
}

func (x *UsageQuotaPayload) GetQuotaLimit() int64 {
	if x != nil {
		return x.QuotaLimit
	}
	return 0
}

func (x *UsageQuotaPayload) GetUsagePercentage() float32 {
	if x != nil {
		return x.UsagePercentage
	}
	return 0
}

func (x *UsageQuotaPayload) GetOperation() UsageQuotaPayload_UsageQuotaOperation {
	if x != nil {
		return x.Operation
	}
	return UsageQuotaPayload_USAGE_QUOTA_OPERATION_UNSPECIFIED
}

type UsageResourcePayload struct {
	state         protoimpl.MessageState                      `protogen:"open.v1"`
	ResourceId    string                                      `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	ResourceType  string                                      `protobuf:"bytes,2,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
	BytesUsed     int64                                       `protobuf:"varint,3,opt,name=bytes_used,json=bytesUsed,proto3" json:"bytes_used,omitempty"`
	ObjectsCount  int64                                       `protobuf:"varint,4,opt,name=objects_count,json=objectsCount,proto3" json:"objects_count,omitempty"`
	Operation     UsageResourcePayload_UsageResourceOperation `protobuf:"varint,5,opt,name=operation,proto3,enum=rodent.events.UsageResourcePayload_UsageResourceOperation" json:"operation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UsageResourcePayload) Reset() {
	*x = UsageResourcePayload{}
	mi := &file_proto_events_event_messages_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UsageResourcePayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsageResourcePayload) ProtoMessage() {}

func (x *UsageResourcePayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_event_messages_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsageResourcePayload.ProtoReflect.Descriptor instead.
func (*UsageResourcePayload) Descriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{34}
}

func (x *UsageResourcePayload) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *UsageResourcePayload) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

func (x *UsageResourcePayload) GetBytesUsed() int64 {
	if x != nil {
		return x.BytesUsed
	}
	return 0
}

func (x *UsageResourcePayload) GetObjectsCount() int64 {
	if x != nil {
		return x.ObjectsCount
	}
	return 0
}

func (x *UsageResourcePayload) GetOperation() UsageResourcePayload_UsageResourceOperation {
	if x != nil {
		return x.Operation
	}
	return UsageResourcePayload_USAGE_RESOURCE_OPERATION_UNSPECIFIED
}

type UsageThresholdPayload struct {
	state          protoimpl.MessageState                        `protogen:"open.v1"`
	ThresholdName  string                                        `protobuf:"bytes,1,opt,name=threshold_name,json=thresholdName,proto3" json:"threshold_name,omitempty"`
	MetricName     string                                        `protobuf:"bytes,2,opt,name=metric_name,json=metricName,proto3" json:"metric_name,omitempty"`
	CurrentValue   float32                                       `protobuf:"fixed32,3,opt,name=current_value,json=currentValue,proto3" json:"current_value,omitempty"`
	ThresholdValue float32                                       `protobuf:"fixed32,4,opt,name=threshold_value,json=thresholdValue,proto3" json:"threshold_value,omitempty"`
	Operation      UsageThresholdPayload_UsageThresholdOperation `protobuf:"varint,5,opt,name=operation,proto3,enum=rodent.events.UsageThresholdPayload_UsageThresholdOperation" json:"operation,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UsageThresholdPayload) Reset() {
	*x = UsageThresholdPayload{}
	mi := &file_proto_events_event_messages_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UsageThresholdPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsageThresholdPayload) ProtoMessage() {}

func (x *UsageThresholdPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_event_messages_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsageThresholdPayload.ProtoReflect.Descriptor instead.
func (*UsageThresholdPayload) Descriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{35}
}

func (x *UsageThresholdPayload) GetThresholdName() string {
	if x != nil {
		return x.ThresholdName
	}
	return ""
}

func (x *UsageThresholdPayload) GetMetricName() string {
	if x != nil {
		return x.MetricName
	}
	return ""
}

func (x *UsageThresholdPayload) GetCurrentValue() float32 {
	if x != nil {
		return x.CurrentValue
	}
	return 0
}

func (x *UsageThresholdPayload) GetThresholdValue() float32 {
	if x != nil {
		return x.ThresholdValue
	}
	return 0
}

func (x *UsageThresholdPayload) GetOperation() UsageThresholdPayload_UsageThresholdOperation {
	if x != nil {
		return x.Operation
	}
	return UsageThresholdPayload_USAGE_THRESHOLD_OPERATION_UNSPECIFIED
}

// Data transfer event payloads - Complete transfer information for ZFS dataset transfers
// Maps to Rodent's TransferInfo struct with all essential details for Toggle sync
type DataTransferTransferPayload struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Transfer identification
	TransferId    string `protobuf:"bytes,1,opt,name=transfer_id,json=transferId,proto3" json:"transfer_id,omitempty"`          // Unique transfer ID (Rodent-side)
	OperationType string `protobuf:"bytes,2,opt,name=operation_type,json=operationType,proto3" json:"operation_type,omitempty"` // "send", "receive", "send_receive"
	// Transfer endpoints
	Source      string `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`           // Source snapshot/dataset
	Destination string `protobuf:"bytes,4,opt,name=destination,proto3" json:"destination,omitempty"` // Destination dataset
	// Transfer status
	Status       string                                            `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`                                                                             // "starting", "running", "paused", "completed", "failed", "cancelled"
	Operation    DataTransferTransferPayload_DataTransferOperation `protobuf:"varint,6,opt,name=operation,proto3,enum=rodent.events.DataTransferTransferPayload_DataTransferOperation" json:"operation,omitempty"` // Event operation type
	ErrorMessage string                                            `protobuf:"bytes,7,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`                                             // Error details if failed
	// Progress information
	BytesTransferred int64  `protobuf:"varint,8,opt,name=bytes_transferred,json=bytesTransferred,proto3" json:"bytes_transferred,omitempty"` // Bytes transferred so far
	TotalBytes       int64  `protobuf:"varint,9,opt,name=total_bytes,json=totalBytes,proto3" json:"total_bytes,omitempty"`                   // Total bytes to transfer (if known)
	TransferRate     int64  `protobuf:"varint,10,opt,name=transfer_rate,json=transferRate,proto3" json:"transfer_rate,omitempty"`            // Current transfer rate in bytes/sec
	ElapsedTime      int64  `protobuf:"varint,11,opt,name=elapsed_time,json=elapsedTime,proto3" json:"elapsed_time,omitempty"`               // Elapsed time in seconds
	EstimatedEta     int64  `protobuf:"varint,12,opt,name=estimated_eta,json=estimatedEta,proto3" json:"estimated_eta,omitempty"`            // Estimated time to completion in seconds
	Phase            string `protobuf:"bytes,13,opt,name=phase,proto3" json:"phase,omitempty"`                                               // Current phase: "pending", "initial_send", "incremental_send", "full_send"
	PhaseDescription string `protobuf:"bytes,14,opt,name=phase_description,json=phaseDescription,proto3" json:"phase_description,omitempty"` // Human-readable phase description
	// Timestamps (Unix milliseconds)
	CreatedAt   int64 `protobuf:"varint,15,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`       // When transfer was created
	StartedAt   int64 `protobuf:"varint,16,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`       // When transfer started (0 if not started)
	CompletedAt int64 `protobuf:"varint,17,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"` // When transfer completed (0 if not completed)
	// Process information
	Pid     int32  `protobuf:"varint,18,opt,name=pid,proto3" json:"pid,omitempty"`                       // Process ID on Rodent (0 if not running)
	LogFile string `protobuf:"bytes,19,opt,name=log_file,json=logFile,proto3" json:"log_file,omitempty"` // Path to log file on Rodent
	// Configuration summary (key flags for Toggle UI)
	IsIncremental bool   `protobuf:"varint,20,opt,name=is_incremental,json=isIncremental,proto3" json:"is_incremental,omitempty"` // Whether this is incremental transfer
	IsResumable   bool   `protobuf:"varint,21,opt,name=is_resumable,json=isResumable,proto3" json:"is_resumable,omitempty"`       // Whether transfer supports resume
	FromSnapshot  string `protobuf:"bytes,22,opt,name=from_snapshot,json=fromSnapshot,proto3" json:"from_snapshot,omitempty"`     // From snapshot for incremental transfers
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataTransferTransferPayload) Reset() {
	*x = DataTransferTransferPayload{}
	mi := &file_proto_events_event_messages_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataTransferTransferPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataTransferTransferPayload) ProtoMessage() {}

func (x *DataTransferTransferPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_event_messages_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataTransferTransferPayload.ProtoReflect.Descriptor instead.
func (*DataTransferTransferPayload) Descriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{36}
}

func (x *DataTransferTransferPayload) GetTransferId() string {
	if x != nil {
		return x.TransferId
	}
	return ""
}

func (x *DataTransferTransferPayload) GetOperationType() string {
	if x != nil {
		return x.OperationType
	}
	return ""
}

func (x *DataTransferTransferPayload) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *DataTransferTransferPayload) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *DataTransferTransferPayload) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *DataTransferTransferPayload) GetOperation() DataTransferTransferPayload_DataTransferOperation {
	if x != nil {
		return x.Operation
	}
	return DataTransferTransferPayload_DATA_TRANSFER_OPERATION_UNSPECIFIED
}

func (x *DataTransferTransferPayload) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *DataTransferTransferPayload) GetBytesTransferred() int64 {
	if x != nil {
		return x.BytesTransferred
	}
	return 0
}

func (x *DataTransferTransferPayload) GetTotalBytes() int64 {
	if x != nil {
		return x.TotalBytes
	}
	return 0
}

func (x *DataTransferTransferPayload) GetTransferRate() int64 {
	if x != nil {
		return x.TransferRate
	}
	return 0
}

func (x *DataTransferTransferPayload) GetElapsedTime() int64 {
	if x != nil {
		return x.ElapsedTime
	}
	return 0
}

func (x *DataTransferTransferPayload) GetEstimatedEta() int64 {
	if x != nil {
		return x.EstimatedEta
	}
	return 0
}

func (x *DataTransferTransferPayload) GetPhase() string {
	if x != nil {
		return x.Phase
	}
	return ""
}

func (x *DataTransferTransferPayload) GetPhaseDescription() string {
	if x != nil {
		return x.PhaseDescription
	}
	return ""
}

func (x *DataTransferTransferPayload) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *DataTransferTransferPayload) GetStartedAt() int64 {
	if x != nil {
		return x.StartedAt
	}
	return 0
}

func (x *DataTransferTransferPayload) GetCompletedAt() int64 {
	if x != nil {
		return x.CompletedAt
	}
	return 0
}

func (x *DataTransferTransferPayload) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *DataTransferTransferPayload) GetLogFile() string {
	if x != nil {
		return x.LogFile
	}
	return ""
}

func (x *DataTransferTransferPayload) GetIsIncremental() bool {
	if x != nil {
		return x.IsIncremental
	}
	return false
}

func (x *DataTransferTransferPayload) GetIsResumable() bool {
	if x != nil {
		return x.IsResumable
	}
	return false
}

func (x *DataTransferTransferPayload) GetFromSnapshot() string {
	if x != nil {
		return x.FromSnapshot
	}
	return ""
}

// Disk event payloads - Physical disk management
type StorageDiskPayload struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	DeviceId      string                                  `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`                                                // Unique device identifier
	DevicePath    string                                  `protobuf:"bytes,2,opt,name=device_path,json=devicePath,proto3" json:"device_path,omitempty"`                                          // Device path (e.g., /dev/sda)
	Serial        string                                  `protobuf:"bytes,3,opt,name=serial,proto3" json:"serial,omitempty"`                                                                    // Device serial number
	Model         string                                  `protobuf:"bytes,4,opt,name=model,proto3" json:"model,omitempty"`                                                                      // Device model
	Vendor        string                                  `protobuf:"bytes,5,opt,name=vendor,proto3" json:"vendor,omitempty"`                                                                    // Device vendor
	SizeBytes     int64                                   `protobuf:"varint,6,opt,name=size_bytes,json=sizeBytes,proto3" json:"size_bytes,omitempty"`                                            // Device size in bytes
	DeviceType    string                                  `protobuf:"bytes,7,opt,name=device_type,json=deviceType,proto3" json:"device_type,omitempty"`                                          // "HDD", "SSD", "NVME"
	InterfaceType string                                  `protobuf:"bytes,8,opt,name=interface_type,json=interfaceType,proto3" json:"interface_type,omitempty"`                                 // "SATA", "SAS", "NVME"
	State         string                                  `protobuf:"bytes,9,opt,name=state,proto3" json:"state,omitempty"`                                                                      // Disk state (DISCOVERED, AVAILABLE, IN_USE, etc.)
	Health        string                                  `protobuf:"bytes,10,opt,name=health,proto3" json:"health,omitempty"`                                                                   // Health status (HEALTHY, WARNING, CRITICAL, FAILED)
	HealthReason  string                                  `protobuf:"bytes,11,opt,name=health_reason,json=healthReason,proto3" json:"health_reason,omitempty"`                                   // Reason for health status
	Temperature   int32                                   `protobuf:"varint,12,opt,name=temperature,proto3" json:"temperature,omitempty"`                                                        // Current temperature (Celsius)
	PowerOnHours  uint64                                  `protobuf:"varint,13,opt,name=power_on_hours,json=powerOnHours,proto3" json:"power_on_hours,omitempty"`                                // Power-on hours
	PoolName      string                                  `protobuf:"bytes,14,opt,name=pool_name,json=poolName,proto3" json:"pool_name,omitempty"`                                               // Pool name if in use
	Operation     StorageDiskPayload_StorageDiskOperation `protobuf:"varint,15,opt,name=operation,proto3,enum=rodent.events.StorageDiskPayload_StorageDiskOperation" json:"operation,omitempty"` // Event operation type
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StorageDiskPayload) Reset() {
	*x = StorageDiskPayload{}
	mi := &file_proto_events_event_messages_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageDiskPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageDiskPayload) ProtoMessage() {}

func (x *StorageDiskPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_event_messages_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageDiskPayload.ProtoReflect.Descriptor instead.
func (*StorageDiskPayload) Descriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{37}
}

func (x *StorageDiskPayload) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *StorageDiskPayload) GetDevicePath() string {
	if x != nil {
		return x.DevicePath
	}
	return ""
}

func (x *StorageDiskPayload) GetSerial() string {
	if x != nil {
		return x.Serial
	}
	return ""
}

func (x *StorageDiskPayload) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *StorageDiskPayload) GetVendor() string {
	if x != nil {
		return x.Vendor
	}
	return ""
}

func (x *StorageDiskPayload) GetSizeBytes() int64 {
	if x != nil {
		return x.SizeBytes
	}
	return 0
}

func (x *StorageDiskPayload) GetDeviceType() string {
	if x != nil {
		return x.DeviceType
	}
	return ""
}

func (x *StorageDiskPayload) GetInterfaceType() string {
	if x != nil {
		return x.InterfaceType
	}
	return ""
}

func (x *StorageDiskPayload) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *StorageDiskPayload) GetHealth() string {
	if x != nil {
		return x.Health
	}
	return ""
}

func (x *StorageDiskPayload) GetHealthReason() string {
	if x != nil {
		return x.HealthReason
	}
	return ""
}

func (x *StorageDiskPayload) GetTemperature() int32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *StorageDiskPayload) GetPowerOnHours() uint64 {
	if x != nil {
		return x.PowerOnHours
	}
	return 0
}

func (x *StorageDiskPayload) GetPoolName() string {
	if x != nil {
		return x.PoolName
	}
	return ""
}

func (x *StorageDiskPayload) GetOperation() StorageDiskPayload_StorageDiskOperation {
	if x != nil {
		return x.Operation
	}
	return StorageDiskPayload_STORAGE_DISK_OPERATION_UNSPECIFIED
}

// Disk probe (SMART test) event payloads
type StorageDiskProbePayload struct {
	state           protoimpl.MessageState                            `protogen:"open.v1"`
	ProbeId         string                                            `protobuf:"bytes,1,opt,name=probe_id,json=probeId,proto3" json:"probe_id,omitempty"`                                                             // Unique probe execution ID
	DeviceId        string                                            `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`                                                          // Target device ID
	DevicePath      string                                            `protobuf:"bytes,3,opt,name=device_path,json=devicePath,proto3" json:"device_path,omitempty"`                                                    // Device path
	ProbeType       string                                            `protobuf:"bytes,4,opt,name=probe_type,json=probeType,proto3" json:"probe_type,omitempty"`                                                       // "quick" or "extensive"
	Status          string                                            `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`                                                                              // Probe status (SCHEDULED, RUNNING, COMPLETED, etc.)
	Result          string                                            `protobuf:"bytes,6,opt,name=result,proto3" json:"result,omitempty"`                                                                              // Probe result (PASS, FAIL, ABORTED)
	StartedAt       int64                                             `protobuf:"varint,7,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`                                                      // Start timestamp (Unix milliseconds)
	CompletedAt     int64                                             `protobuf:"varint,8,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`                                                // Completion timestamp (Unix milliseconds)
	DurationSeconds int64                                             `protobuf:"varint,9,opt,name=duration_seconds,json=durationSeconds,proto3" json:"duration_seconds,omitempty"`                                    // Duration in seconds
	PercentComplete int32                                             `protobuf:"varint,10,opt,name=percent_complete,json=percentComplete,proto3" json:"percent_complete,omitempty"`                                   // Progress percentage
	ErrorMessage    string                                            `protobuf:"bytes,11,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`                                             // Error message if failed
	ConflictReason  string                                            `protobuf:"bytes,12,opt,name=conflict_reason,json=conflictReason,proto3" json:"conflict_reason,omitempty"`                                       // Conflict reason if conflicted
	RetryCount      int32                                             `protobuf:"varint,13,opt,name=retry_count,json=retryCount,proto3" json:"retry_count,omitempty"`                                                  // Number of retry attempts
	Operation       StorageDiskProbePayload_StorageDiskProbeOperation `protobuf:"varint,14,opt,name=operation,proto3,enum=rodent.events.StorageDiskProbePayload_StorageDiskProbeOperation" json:"operation,omitempty"` // Event operation type
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *StorageDiskProbePayload) Reset() {
	*x = StorageDiskProbePayload{}
	mi := &file_proto_events_event_messages_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageDiskProbePayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageDiskProbePayload) ProtoMessage() {}

func (x *StorageDiskProbePayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_event_messages_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageDiskProbePayload.ProtoReflect.Descriptor instead.
func (*StorageDiskProbePayload) Descriptor() ([]byte, []int) {
	return file_proto_events_event_messages_proto_rawDescGZIP(), []int{38}
}

func (x *StorageDiskProbePayload) GetProbeId() string {
	if x != nil {
		return x.ProbeId
	}
	return ""
}

func (x *StorageDiskProbePayload) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *StorageDiskProbePayload) GetDevicePath() string {
	if x != nil {
		return x.DevicePath
	}
	return ""
}

func (x *StorageDiskProbePayload) GetProbeType() string {
	if x != nil {
		return x.ProbeType
	}
	return ""
}

func (x *StorageDiskProbePayload) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *StorageDiskProbePayload) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *StorageDiskProbePayload) GetStartedAt() int64 {
	if x != nil {
		return x.StartedAt
	}
	return 0
}

func (x *StorageDiskProbePayload) GetCompletedAt() int64 {
	if x != nil {
		return x.CompletedAt
	}
	return 0
}

func (x *StorageDiskProbePayload) GetDurationSeconds() int64 {
	if x != nil {
		return x.DurationSeconds
	}
	return 0
}

func (x *StorageDiskProbePayload) GetPercentComplete() int32 {
	if x != nil {
		return x.PercentComplete
	}
	return 0
}

func (x *StorageDiskProbePayload) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *StorageDiskProbePayload) GetConflictReason() string {
	if x != nil {
		return x.ConflictReason
	}
	return ""
}

func (x *StorageDiskProbePayload) GetRetryCount() int32 {
	if x != nil {
		return x.RetryCount
	}
	return 0
}

func (x *StorageDiskProbePayload) GetOperation() StorageDiskProbePayload_StorageDiskProbeOperation {
	if x != nil {
		return x.Operation
	}
	return StorageDiskProbePayload_STORAGE_DISK_PROBE_OPERATION_UNSPECIFIED
}

var File_proto_events_event_messages_proto protoreflect.FileDescriptor

const file_proto_events_event_messages_proto_rawDesc = "" +
	"\n" +
	"!proto/events/event_messages.proto\x12\rrodent.events\"\x83\b\n" +
	"\x05Event\x12\x19\n" +
	"\bevent_id\x18\x01 \x01(\tR\aeventId\x12/\n" +
	"\x05level\x18\x02 \x01(\x0e2\x19.rodent.events.EventLevelR\x05level\x128\n" +
	"\bcategory\x18\x03 \x01(\x0e2\x1c.rodent.events.EventCategoryR\bcategory\x12\x16\n" +
	"\x06source\x18\x04 \x01(\tR\x06source\x12\x1c\n" +
	"\ttimestamp\x18\x05 \x01(\x03R\ttimestamp\x12>\n" +
	"\bmetadata\x18\x06 \x03(\v2\".rodent.events.Event.MetadataEntryR\bmetadata\x12?\n" +
	"\fsystem_event\x18\n" +
	" \x01(\v2\x1a.rodent.events.SystemEventH\x00R\vsystemEvent\x12B\n" +
	"\rstorage_event\x18\v \x01(\v2\x1b.rodent.events.StorageEventH\x00R\fstorageEvent\x12B\n" +
	"\rnetwork_event\x18\f \x01(\v2\x1b.rodent.events.NetworkEventH\x00R\fnetworkEvent\x12E\n" +
	"\x0esecurity_event\x18\r \x01(\v2\x1c.rodent.events.SecurityEventH\x00R\rsecurityEvent\x12B\n" +
	"\rservice_event\x18\x0e \x01(\v2\x1b.rodent.events.ServiceEventH\x00R\fserviceEvent\x12E\n" +
	"\x0eidentity_event\x18\x0f \x01(\v2\x1c.rodent.events.IdentityEventH\x00R\ridentityEvent\x12?\n" +
	"\faccess_event\x18\x10 \x01(\v2\x1a.rodent.events.AccessEventH\x00R\vaccessEvent\x12B\n" +
	"\rsharing_event\x18\x11 \x01(\v2\x1b.rodent.events.SharingEventH\x00R\fsharingEvent\x12<\n" +
	"\vusage_event\x18\x12 \x01(\v2\x19.rodent.events.UsageEventH\x00R\n" +
	"usageEvent\x12R\n" +
	"\x13data_transfer_event\x18\x13 \x01(\v2 .rodent.events.DataTransferEventH\x00R\x11dataTransferEvent\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\x0f\n" +
	"\revent_payload\"\x86\x03\n" +
	"\vSystemEvent\x12?\n" +
	"\astartup\x18\x01 \x01(\v2#.rodent.events.SystemStartupPayloadH\x00R\astartup\x12B\n" +
	"\bshutdown\x18\x02 \x01(\v2$.rodent.events.SystemShutdownPayloadH\x00R\bshutdown\x12Q\n" +
	"\x0econfig_changed\x18\x03 \x01(\v2(.rodent.events.SystemConfigChangePayloadH\x00R\rconfigChanged\x12A\n" +
	"\n" +
	"user_event\x18\x04 \x01(\v2 .rodent.events.SystemUserPayloadH\x00R\tuserEvent\x12N\n" +
	"\fregistration\x18\x05 \x01(\v2(.rodent.events.SystemRegistrationPayloadH\x00R\fregistrationB\f\n" +
	"\n" +
	"event_type\"\x95\x03\n" +
	"\fStorageEvent\x12B\n" +
	"\n" +
	"pool_event\x18\x01 \x01(\v2!.rodent.events.StoragePoolPayloadH\x00R\tpoolEvent\x12K\n" +
	"\rdataset_event\x18\x02 \x01(\v2$.rodent.events.StorageDatasetPayloadH\x00R\fdatasetEvent\x12N\n" +
	"\x0esnapshot_event\x18\x04 \x01(\v2%.rodent.events.StorageSnapshotPayloadH\x00R\rsnapshotEvent\x12B\n" +
	"\n" +
	"disk_event\x18\x05 \x01(\v2!.rodent.events.StorageDiskPayloadH\x00R\tdiskEvent\x12R\n" +
	"\x10disk_probe_event\x18\x06 \x01(\v2&.rodent.events.StorageDiskProbePayloadH\x00R\x0ediskProbeEventB\f\n" +
	"\n" +
	"event_type\"\xc5\x01\n" +
	"\fNetworkEvent\x12Q\n" +
	"\x0finterface_event\x18\x01 \x01(\v2&.rodent.events.NetworkInterfacePayloadH\x00R\x0einterfaceEvent\x12T\n" +
	"\x10connection_event\x18\x02 \x01(\v2'.rodent.events.NetworkConnectionPayloadH\x00R\x0fconnectionEventB\f\n" +
	"\n" +
	"event_type\"\xfe\x01\n" +
	"\rSecurityEvent\x12C\n" +
	"\n" +
	"auth_event\x18\x01 \x01(\v2\".rodent.events.SecurityAuthPayloadH\x00R\tauthEvent\x12@\n" +
	"\tkey_event\x18\x02 \x01(\v2!.rodent.events.SecurityKeyPayloadH\x00R\bkeyEvent\x12X\n" +
	"\x11certificate_event\x18\x03 \x01(\v2).rodent.events.SecurityCertificatePayloadH\x00R\x10certificateEventB\f\n" +
	"\n" +
	"event_type\"f\n" +
	"\fServiceEvent\x12H\n" +
	"\fstatus_event\x18\x01 \x01(\v2#.rodent.events.ServiceStatusPayloadH\x00R\vstatusEventB\f\n" +
	"\n" +
	"event_type\"\xfb\x01\n" +
	"\rIdentityEvent\x12C\n" +
	"\n" +
	"user_event\x18\x01 \x01(\v2\".rodent.events.IdentityUserPayloadH\x00R\tuserEvent\x12F\n" +
	"\vgroup_event\x18\x02 \x01(\v2#.rodent.events.IdentityGroupPayloadH\x00R\n" +
	"groupEvent\x12O\n" +
	"\x0ecomputer_event\x18\x03 \x01(\v2&.rodent.events.IdentityComputerPayloadH\x00R\rcomputerEventB\f\n" +
	"\n" +
	"event_type\"\xb0\x01\n" +
	"\vAccessEvent\x12>\n" +
	"\tacl_event\x18\x01 \x01(\v2\x1f.rodent.events.AccessACLPayloadH\x00R\baclEvent\x12S\n" +
	"\x10permission_event\x18\x02 \x01(\v2&.rodent.events.AccessPermissionPayloadH\x00R\x0fpermissionEventB\f\n" +
	"\n" +
	"event_type\"\x90\x02\n" +
	"\fSharingEvent\x12E\n" +
	"\vshare_event\x18\x01 \x01(\v2\".rodent.events.SharingSharePayloadH\x00R\n" +
	"shareEvent\x12T\n" +
	"\x10connection_event\x18\x02 \x01(\v2'.rodent.events.SharingConnectionPayloadH\x00R\x0fconnectionEvent\x12U\n" +
	"\x11file_access_event\x18\x03 \x01(\v2'.rodent.events.SharingFileAccessPayloadH\x00R\x0ffileAccessEventB\f\n" +
	"\n" +
	"event_type\"\xfe\x01\n" +
	"\n" +
	"UsageEvent\x12C\n" +
	"\vquota_event\x18\x01 \x01(\v2 .rodent.events.UsageQuotaPayloadH\x00R\n" +
	"quotaEvent\x12L\n" +
	"\x0eresource_event\x18\x02 \x01(\v2#.rodent.events.UsageResourcePayloadH\x00R\rresourceEvent\x12O\n" +
	"\x0fthreshold_event\x18\x03 \x01(\v2$.rodent.events.UsageThresholdPayloadH\x00R\x0ethresholdEventB\f\n" +
	"\n" +
	"event_type\"v\n" +
	"\x11DataTransferEvent\x12S\n" +
	"\x0etransfer_event\x18\x01 \x01(\v2*.rodent.events.DataTransferTransferPayloadH\x00R\rtransferEventB\f\n" +
	"\n" +
	"event_type\"\xed\x02\n" +
	"\x14SystemStartupPayload\x12\x1b\n" +
	"\trodent_id\x18\x01 \x01(\tR\brodentId\x12'\n" +
	"\x0forganization_id\x18\x02 \x01(\tR\x0eorganizationId\x12!\n" +
	"\fstartup_time\x18\x03 \x01(\tR\vstartupTime\x12!\n" +
	"\fstartup_type\x18\x04 \x01(\tR\vstartupType\x12\x1a\n" +
	"\bservices\x18\x05 \x03(\tR\bservices\x12\x18\n" +
	"\aversion\x18\x06 \x01(\tR\aversion\x12T\n" +
	"\vsystem_info\x18\a \x03(\v23.rodent.events.SystemStartupPayload.SystemInfoEntryR\n" +
	"systemInfo\x1a=\n" +
	"\x0fSystemInfoEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb7\x02\n" +
	"\x19SystemRegistrationPayload\x12\x1b\n" +
	"\trodent_id\x18\x01 \x01(\tR\brodentId\x12'\n" +
	"\x0forganization_id\x18\x02 \x01(\tR\x0eorganizationId\x12#\n" +
	"\rregistered_at\x18\x03 \x01(\tR\fregisteredAt\x12#\n" +
	"\rtoggle_domain\x18\x04 \x01(\tR\ftoggleDomain\x12/\n" +
	"\x13certificate_expires\x18\x05 \x01(\tR\x12certificateExpires\x12,\n" +
	"\x12is_private_network\x18\x06 \x01(\bR\x10isPrivateNetwork\x12+\n" +
	"\x11registration_type\x18\a \x01(\tR\x10registrationType\"\xe6\x02\n" +
	"\x15SystemShutdownPayload\x12Z\n" +
	"\toperation\x18\x01 \x01(\x0e2<.rodent.events.SystemShutdownPayload.SystemShutdownOperationR\toperation\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\x12\x1a\n" +
	"\bgraceful\x18\x03 \x01(\bR\bgraceful\"\xbc\x01\n" +
	"\x17SystemShutdownOperation\x12)\n" +
	"%SYSTEM_SHUTDOWN_OPERATION_UNSPECIFIED\x10\x00\x12&\n" +
	"\"SYSTEM_SHUTDOWN_OPERATION_SHUTDOWN\x10\x01\x12%\n" +
	"!SYSTEM_SHUTDOWN_OPERATION_RESTART\x10\x02\x12'\n" +
	"#SYSTEM_SHUTDOWN_OPERATION_EMERGENCY\x10\x03\"\xf8\x02\n" +
	"\x19SystemConfigChangePayload\x12%\n" +
	"\x0econfig_section\x18\x01 \x01(\tR\rconfigSection\x12!\n" +
	"\fchanged_keys\x18\x02 \x03(\tR\vchangedKeys\x12\\\n" +
	"\toperation\x18\x03 \x01(\x0e2>.rodent.events.SystemConfigChangePayload.SystemConfigOperationR\toperation\"\xb2\x01\n" +
	"\x15SystemConfigOperation\x12'\n" +
	"#SYSTEM_CONFIG_OPERATION_UNSPECIFIED\x10\x00\x12#\n" +
	"\x1fSYSTEM_CONFIG_OPERATION_UPDATED\x10\x01\x12$\n" +
	" SYSTEM_CONFIG_OPERATION_RELOADED\x10\x02\x12%\n" +
	"!SYSTEM_CONFIG_OPERATION_VALIDATED\x10\x03\"\xbf\x03\n" +
	"\x11SystemUserPayload\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12!\n" +
	"\fdisplay_name\x18\x02 \x01(\tR\vdisplayName\x12\x10\n" +
	"\x03uid\x18\x03 \x01(\x05R\x03uid\x12\x16\n" +
	"\x06groups\x18\x04 \x03(\tR\x06groups\x12R\n" +
	"\toperation\x18\x05 \x01(\x0e24.rodent.events.SystemUserPayload.SystemUserOperationR\toperation\"\xec\x01\n" +
	"\x13SystemUserOperation\x12%\n" +
	"!SYSTEM_USER_OPERATION_UNSPECIFIED\x10\x00\x12!\n" +
	"\x1dSYSTEM_USER_OPERATION_CREATED\x10\x01\x12!\n" +
	"\x1dSYSTEM_USER_OPERATION_DELETED\x10\x02\x12\"\n" +
	"\x1eSYSTEM_USER_OPERATION_MODIFIED\x10\x03\x12 \n" +
	"\x1cSYSTEM_USER_OPERATION_LOCKED\x10\x04\x12\"\n" +
	"\x1eSYSTEM_USER_OPERATION_UNLOCKED\x10\x05\"\xca\x04\n" +
	"\x12StoragePoolPayload\x12\x1b\n" +
	"\tpool_name\x18\x01 \x01(\tR\bpoolName\x12\x18\n" +
	"\adevices\x18\x02 \x03(\tR\adevices\x12\x1b\n" +
	"\traid_type\x18\x03 \x01(\tR\braidType\x12\x1d\n" +
	"\n" +
	"size_bytes\x18\x04 \x01(\x03R\tsizeBytes\x12\x1d\n" +
	"\n" +
	"used_bytes\x18\x05 \x01(\x03R\tusedBytes\x12T\n" +
	"\toperation\x18\x06 \x01(\x0e26.rodent.events.StoragePoolPayload.StoragePoolOperationR\toperation\"\xcb\x02\n" +
	"\x14StoragePoolOperation\x12&\n" +
	"\"STORAGE_POOL_OPERATION_UNSPECIFIED\x10\x00\x12\"\n" +
	"\x1eSTORAGE_POOL_OPERATION_CREATED\x10\x01\x12\"\n" +
	"\x1eSTORAGE_POOL_OPERATION_DELETED\x10\x02\x12#\n" +
	"\x1fSTORAGE_POOL_OPERATION_EXPANDED\x10\x03\x12(\n" +
	"$STORAGE_POOL_OPERATION_SCRUB_STARTED\x10\x04\x12*\n" +
	"&STORAGE_POOL_OPERATION_SCRUB_COMPLETED\x10\x05\x12#\n" +
	"\x1fSTORAGE_POOL_OPERATION_EXPORTED\x10\x06\x12#\n" +
	"\x1fSTORAGE_POOL_OPERATION_IMPORTED\x10\a\"\x9b\x04\n" +
	"\x15StorageDatasetPayload\x12!\n" +
	"\fdataset_name\x18\x01 \x01(\tR\vdatasetName\x12\x1b\n" +
	"\tpool_name\x18\x02 \x01(\tR\bpoolName\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12\x1e\n" +
	"\n" +
	"mountpoint\x18\x04 \x01(\tR\n" +
	"mountpoint\x12\x1d\n" +
	"\n" +
	"size_bytes\x18\x05 \x01(\x03R\tsizeBytes\x12Z\n" +
	"\toperation\x18\x06 \x01(\x0e2<.rodent.events.StorageDatasetPayload.StorageDatasetOperationR\toperation\"\x92\x02\n" +
	"\x17StorageDatasetOperation\x12)\n" +
	"%STORAGE_DATASET_OPERATION_UNSPECIFIED\x10\x00\x12%\n" +
	"!STORAGE_DATASET_OPERATION_CREATED\x10\x01\x12%\n" +
	"!STORAGE_DATASET_OPERATION_DELETED\x10\x02\x12%\n" +
	"!STORAGE_DATASET_OPERATION_MOUNTED\x10\x03\x12'\n" +
	"#STORAGE_DATASET_OPERATION_UNMOUNTED\x10\x04\x12.\n" +
	"*STORAGE_DATASET_OPERATION_PROPERTY_CHANGED\x10\x05\"\xee\x03\n" +
	"\x16StorageSnapshotPayload\x12#\n" +
	"\rsnapshot_name\x18\x01 \x01(\tR\fsnapshotName\x12!\n" +
	"\fdataset_name\x18\x02 \x01(\tR\vdatasetName\x12#\n" +
	"\rcreation_time\x18\x03 \x01(\x03R\fcreationTime\x12\x1d\n" +
	"\n" +
	"size_bytes\x18\x04 \x01(\x03R\tsizeBytes\x12\\\n" +
	"\toperation\x18\x05 \x01(\x0e2>.rodent.events.StorageSnapshotPayload.StorageSnapshotOperationR\toperation\"\xe9\x01\n" +
	"\x18StorageSnapshotOperation\x12*\n" +
	"&STORAGE_SNAPSHOT_OPERATION_UNSPECIFIED\x10\x00\x12&\n" +
	"\"STORAGE_SNAPSHOT_OPERATION_CREATED\x10\x01\x12&\n" +
	"\"STORAGE_SNAPSHOT_OPERATION_DELETED\x10\x02\x12*\n" +
	"&STORAGE_SNAPSHOT_OPERATION_ROLLED_BACK\x10\x03\x12%\n" +
	"!STORAGE_SNAPSHOT_OPERATION_CLONED\x10\x04\"\xed\x03\n" +
	"\x14ServiceStatusPayload\x12!\n" +
	"\fservice_name\x18\x01 \x01(\tR\vserviceName\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x10\n" +
	"\x03pid\x18\x03 \x01(\x05R\x03pid\x12%\n" +
	"\x0euptime_seconds\x18\x04 \x01(\x03R\ruptimeSeconds\x12X\n" +
	"\toperation\x18\x05 \x01(\x0e2:.rodent.events.ServiceStatusPayload.ServiceStatusOperationR\toperation\"\x86\x02\n" +
	"\x16ServiceStatusOperation\x12(\n" +
	"$SERVICE_STATUS_OPERATION_UNSPECIFIED\x10\x00\x12$\n" +
	" SERVICE_STATUS_OPERATION_STARTED\x10\x01\x12$\n" +
	" SERVICE_STATUS_OPERATION_STOPPED\x10\x02\x12&\n" +
	"\"SERVICE_STATUS_OPERATION_RESTARTED\x10\x03\x12#\n" +
	"\x1fSERVICE_STATUS_OPERATION_FAILED\x10\x04\x12)\n" +
	"%SERVICE_STATUS_OPERATION_HEALTH_CHECK\x10\x05\"\xe4\x03\n" +
	"\x17NetworkInterfacePayload\x12%\n" +
	"\x0einterface_name\x18\x01 \x01(\tR\rinterfaceName\x12\x1d\n" +
	"\n" +
	"ip_address\x18\x02 \x01(\tR\tipAddress\x12\x1f\n" +
	"\vmac_address\x18\x03 \x01(\tR\n" +
	"macAddress\x12\x13\n" +
	"\x05is_up\x18\x04 \x01(\bR\x04isUp\x12^\n" +
	"\toperation\x18\x05 \x01(\x0e2@.rodent.events.NetworkInterfacePayload.NetworkInterfaceOperationR\toperation\"\xec\x01\n" +
	"\x19NetworkInterfaceOperation\x12+\n" +
	"'NETWORK_INTERFACE_OPERATION_UNSPECIFIED\x10\x00\x12\"\n" +
	"\x1eNETWORK_INTERFACE_OPERATION_UP\x10\x01\x12$\n" +
	" NETWORK_INTERFACE_OPERATION_DOWN\x10\x02\x12*\n" +
	"&NETWORK_INTERFACE_OPERATION_CONFIGURED\x10\x03\x12,\n" +
	"(NETWORK_INTERFACE_OPERATION_LINK_CHANGED\x10\x04\"\x9f\x04\n" +
	"\x18NetworkConnectionPayload\x12\x1b\n" +
	"\tsource_ip\x18\x01 \x01(\tR\bsourceIp\x12%\n" +
	"\x0edestination_ip\x18\x02 \x01(\tR\rdestinationIp\x12\x1f\n" +
	"\vsource_port\x18\x03 \x01(\x05R\n" +
	"sourcePort\x12)\n" +
	"\x10destination_port\x18\x04 \x01(\x05R\x0fdestinationPort\x12\x1a\n" +
	"\bprotocol\x18\x05 \x01(\tR\bprotocol\x12`\n" +
	"\toperation\x18\x06 \x01(\x0e2B.rodent.events.NetworkConnectionPayload.NetworkConnectionOperationR\toperation\"\xf4\x01\n" +
	"\x1aNetworkConnectionOperation\x12,\n" +
	"(NETWORK_CONNECTION_OPERATION_UNSPECIFIED\x10\x00\x12,\n" +
	"(NETWORK_CONNECTION_OPERATION_ESTABLISHED\x10\x01\x12'\n" +
	"#NETWORK_CONNECTION_OPERATION_CLOSED\x10\x02\x12'\n" +
	"#NETWORK_CONNECTION_OPERATION_FAILED\x10\x03\x12(\n" +
	"$NETWORK_CONNECTION_OPERATION_TIMEOUT\x10\x04\"\xa7\x03\n" +
	"\x13SecurityAuthPayload\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12\x16\n" +
	"\x06method\x18\x02 \x01(\tR\x06method\x12\x1b\n" +
	"\tsource_ip\x18\x03 \x01(\tR\bsourceIp\x12V\n" +
	"\toperation\x18\x04 \x01(\x0e28.rodent.events.SecurityAuthPayload.SecurityAuthOperationR\toperation\"\xe6\x01\n" +
	"\x15SecurityAuthOperation\x12'\n" +
	"#SECURITY_AUTH_OPERATION_UNSPECIFIED\x10\x00\x12)\n" +
	"%SECURITY_AUTH_OPERATION_LOGIN_SUCCESS\x10\x01\x12(\n" +
	"$SECURITY_AUTH_OPERATION_LOGIN_FAILED\x10\x02\x12\"\n" +
	"\x1eSECURITY_AUTH_OPERATION_LOGOUT\x10\x03\x12+\n" +
	"'SECURITY_AUTH_OPERATION_SESSION_EXPIRED\x10\x04\"\xae\x03\n" +
	"\x12SecurityKeyPayload\x12\x15\n" +
	"\x06key_id\x18\x01 \x01(\tR\x05keyId\x12\x19\n" +
	"\bkey_type\x18\x02 \x01(\tR\akeyType\x12\x1a\n" +
	"\busername\x18\x03 \x01(\tR\busername\x12\x1f\n" +
	"\vexpiry_time\x18\x04 \x01(\x03R\n" +
	"expiryTime\x12T\n" +
	"\toperation\x18\x05 \x01(\x0e26.rodent.events.SecurityKeyPayload.SecurityKeyOperationR\toperation\"\xd2\x01\n" +
	"\x14SecurityKeyOperation\x12&\n" +
	"\"SECURITY_KEY_OPERATION_UNSPECIFIED\x10\x00\x12$\n" +
	" SECURITY_KEY_OPERATION_GENERATED\x10\x01\x12$\n" +
	" SECURITY_KEY_OPERATION_INSTALLED\x10\x02\x12\"\n" +
	"\x1eSECURITY_KEY_OPERATION_REMOVED\x10\x03\x12\"\n" +
	"\x1eSECURITY_KEY_OPERATION_EXPIRED\x10\x04\"\xa3\x04\n" +
	"\x1aSecurityCertificatePayload\x12\x17\n" +
	"\acert_id\x18\x01 \x01(\tR\x06certId\x12\x16\n" +
	"\x06domain\x18\x02 \x01(\tR\x06domain\x12\x1f\n" +
	"\vissued_time\x18\x03 \x01(\x03R\n" +
	"issuedTime\x12\x1f\n" +
	"\vexpiry_time\x18\x04 \x01(\x03R\n" +
	"expiryTime\x12d\n" +
	"\toperation\x18\x05 \x01(\x0e2F.rodent.events.SecurityCertificatePayload.SecurityCertificateOperationR\toperation\"\xab\x02\n" +
	"\x1cSecurityCertificateOperation\x12.\n" +
	"*SECURITY_CERTIFICATE_OPERATION_UNSPECIFIED\x10\x00\x12)\n" +
	"%SECURITY_CERTIFICATE_OPERATION_ISSUED\x10\x01\x12,\n" +
	"(SECURITY_CERTIFICATE_OPERATION_INSTALLED\x10\x02\x12*\n" +
	"&SECURITY_CERTIFICATE_OPERATION_RENEWED\x10\x03\x12*\n" +
	"&SECURITY_CERTIFICATE_OPERATION_EXPIRED\x10\x04\x12*\n" +
	"&SECURITY_CERTIFICATE_OPERATION_REVOKED\x10\x05\"\xb8\x04\n" +
	"\x13IdentityUserPayload\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12!\n" +
	"\fdisplay_name\x18\x02 \x01(\tR\vdisplayName\x12\x14\n" +
	"\x05email\x18\x03 \x01(\tR\x05email\x12\x16\n" +
	"\x06groups\x18\x04 \x03(\tR\x06groups\x12\x16\n" +
	"\x06domain\x18\x05 \x01(\tR\x06domain\x12\x18\n" +
	"\aenabled\x18\x06 \x01(\bR\aenabled\x12V\n" +
	"\toperation\x18\a \x01(\x0e28.rodent.events.IdentityUserPayload.IdentityUserOperationR\toperation\"\xa9\x02\n" +
	"\x15IdentityUserOperation\x12'\n" +
	"#IDENTITY_USER_OPERATION_UNSPECIFIED\x10\x00\x12#\n" +
	"\x1fIDENTITY_USER_OPERATION_CREATED\x10\x01\x12#\n" +
	"\x1fIDENTITY_USER_OPERATION_DELETED\x10\x02\x12$\n" +
	" IDENTITY_USER_OPERATION_MODIFIED\x10\x03\x12#\n" +
	"\x1fIDENTITY_USER_OPERATION_ENABLED\x10\x04\x12$\n" +
	" IDENTITY_USER_OPERATION_DISABLED\x10\x05\x12,\n" +
	"(IDENTITY_USER_OPERATION_PASSWORD_CHANGED\x10\x06\"\xf3\x03\n" +
	"\x14IdentityGroupPayload\x12\x1d\n" +
	"\n" +
	"group_name\x18\x01 \x01(\tR\tgroupName\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x18\n" +
	"\amembers\x18\x03 \x03(\tR\amembers\x12\x16\n" +
	"\x06domain\x18\x04 \x01(\tR\x06domain\x12X\n" +
	"\toperation\x18\x05 \x01(\x0e2:.rodent.events.IdentityGroupPayload.IdentityGroupOperationR\toperation\"\x8d\x02\n" +
	"\x16IdentityGroupOperation\x12(\n" +
	"$IDENTITY_GROUP_OPERATION_UNSPECIFIED\x10\x00\x12$\n" +
	" IDENTITY_GROUP_OPERATION_CREATED\x10\x01\x12$\n" +
	" IDENTITY_GROUP_OPERATION_DELETED\x10\x02\x12%\n" +
	"!IDENTITY_GROUP_OPERATION_MODIFIED\x10\x03\x12)\n" +
	"%IDENTITY_GROUP_OPERATION_MEMBER_ADDED\x10\x04\x12+\n" +
	"'IDENTITY_GROUP_OPERATION_MEMBER_REMOVED\x10\x05\"\xa3\x04\n" +
	"\x17IdentityComputerPayload\x12#\n" +
	"\rcomputer_name\x18\x01 \x01(\tR\fcomputerName\x12\x1d\n" +
	"\n" +
	"ip_address\x18\x02 \x01(\tR\tipAddress\x12\x1d\n" +
	"\n" +
	"os_version\x18\x03 \x01(\tR\tosVersion\x12\x16\n" +
	"\x06domain\x18\x04 \x01(\tR\x06domain\x12\x18\n" +
	"\aenabled\x18\x05 \x01(\bR\aenabled\x12^\n" +
	"\toperation\x18\x06 \x01(\x0e2@.rodent.events.IdentityComputerPayload.IdentityComputerOperationR\toperation\"\x92\x02\n" +
	"\x19IdentityComputerOperation\x12+\n" +
	"'IDENTITY_COMPUTER_OPERATION_UNSPECIFIED\x10\x00\x12&\n" +
	"\"IDENTITY_COMPUTER_OPERATION_JOINED\x10\x01\x12$\n" +
	" IDENTITY_COMPUTER_OPERATION_LEFT\x10\x02\x12'\n" +
	"#IDENTITY_COMPUTER_OPERATION_UPDATED\x10\x03\x12'\n" +
	"#IDENTITY_COMPUTER_OPERATION_ENABLED\x10\x04\x12(\n" +
	"$IDENTITY_COMPUTER_OPERATION_DISABLED\x10\x05\"\x8e\x03\n" +
	"\x10AccessACLPayload\x12#\n" +
	"\rresource_path\x18\x01 \x01(\tR\fresourcePath\x12\x1c\n" +
	"\tprincipal\x18\x02 \x01(\tR\tprincipal\x12 \n" +
	"\vpermissions\x18\x03 \x03(\tR\vpermissions\x12P\n" +
	"\toperation\x18\x04 \x01(\x0e22.rodent.events.AccessACLPayload.AccessACLOperationR\toperation\"\xc2\x01\n" +
	"\x12AccessACLOperation\x12$\n" +
	" ACCESS_ACL_OPERATION_UNSPECIFIED\x10\x00\x12 \n" +
	"\x1cACCESS_ACL_OPERATION_GRANTED\x10\x01\x12\x1f\n" +
	"\x1bACCESS_ACL_OPERATION_DENIED\x10\x02\x12!\n" +
	"\x1dACCESS_ACL_OPERATION_MODIFIED\x10\x03\x12 \n" +
	"\x1cACCESS_ACL_OPERATION_REMOVED\x10\x04\"\xe2\x03\n" +
	"\x17AccessPermissionPayload\x12#\n" +
	"\rresource_path\x18\x01 \x01(\tR\fresourcePath\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12\x1e\n" +
	"\n" +
	"permission\x18\x03 \x01(\tR\n" +
	"permission\x12\x18\n" +
	"\agranted\x18\x04 \x01(\bR\agranted\x12^\n" +
	"\toperation\x18\x05 \x01(\x0e2@.rodent.events.AccessPermissionPayload.AccessPermissionOperationR\toperation\"\xeb\x01\n" +
	"\x19AccessPermissionOperation\x12+\n" +
	"'ACCESS_PERMISSION_OPERATION_UNSPECIFIED\x10\x00\x12'\n" +
	"#ACCESS_PERMISSION_OPERATION_CHECKED\x10\x01\x12'\n" +
	"#ACCESS_PERMISSION_OPERATION_GRANTED\x10\x02\x12&\n" +
	"\"ACCESS_PERMISSION_OPERATION_DENIED\x10\x03\x12'\n" +
	"#ACCESS_PERMISSION_OPERATION_CHANGED\x10\x04\"\xfc\x03\n" +
	"\x13SharingSharePayload\x12\x1d\n" +
	"\n" +
	"share_name\x18\x01 \x01(\tR\tshareName\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x12\x1a\n" +
	"\bprotocol\x18\x03 \x01(\tR\bprotocol\x12#\n" +
	"\rallowed_users\x18\x04 \x03(\tR\fallowedUsers\x12\x1b\n" +
	"\tread_only\x18\x05 \x01(\bR\breadOnly\x12V\n" +
	"\toperation\x18\x06 \x01(\x0e28.rodent.events.SharingSharePayload.SharingShareOperationR\toperation\"\xfb\x01\n" +
	"\x15SharingShareOperation\x12'\n" +
	"#SHARING_SHARE_OPERATION_UNSPECIFIED\x10\x00\x12#\n" +
	"\x1fSHARING_SHARE_OPERATION_CREATED\x10\x01\x12#\n" +
	"\x1fSHARING_SHARE_OPERATION_DELETED\x10\x02\x12$\n" +
	" SHARING_SHARE_OPERATION_MODIFIED\x10\x03\x12#\n" +
	"\x1fSHARING_SHARE_OPERATION_ENABLED\x10\x04\x12$\n" +
	" SHARING_SHARE_OPERATION_DISABLED\x10\x05\"\xeb\x03\n" +
	"\x18SharingConnectionPayload\x12\x1d\n" +
	"\n" +
	"share_name\x18\x01 \x01(\tR\tshareName\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12\x1b\n" +
	"\tclient_ip\x18\x03 \x01(\tR\bclientIp\x12\x1a\n" +
	"\bprotocol\x18\x04 \x01(\tR\bprotocol\x12`\n" +
	"\toperation\x18\x05 \x01(\x0e2B.rodent.events.SharingConnectionPayload.SharingConnectionOperationR\toperation\"\xf8\x01\n" +
	"\x1aSharingConnectionOperation\x12,\n" +
	"(SHARING_CONNECTION_OPERATION_UNSPECIFIED\x10\x00\x12*\n" +
	"&SHARING_CONNECTION_OPERATION_CONNECTED\x10\x01\x12-\n" +
	")SHARING_CONNECTION_OPERATION_DISCONNECTED\x10\x02\x12'\n" +
	"#SHARING_CONNECTION_OPERATION_FAILED\x10\x03\x12(\n" +
	"$SHARING_CONNECTION_OPERATION_TIMEOUT\x10\x04\"\x96\x04\n" +
	"\x18SharingFileAccessPayload\x12\x1b\n" +
	"\tfile_path\x18\x01 \x01(\tR\bfilePath\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12%\n" +
	"\x0eoperation_type\x18\x03 \x01(\tR\roperationType\x12\x1b\n" +
	"\tfile_size\x18\x04 \x01(\x03R\bfileSize\x12`\n" +
	"\toperation\x18\x05 \x01(\x0e2B.rodent.events.SharingFileAccessPayload.SharingFileAccessOperationR\toperation\"\x9a\x02\n" +
	"\x1aSharingFileAccessOperation\x12-\n" +
	")SHARING_FILE_ACCESS_OPERATION_UNSPECIFIED\x10\x00\x12&\n" +
	"\"SHARING_FILE_ACCESS_OPERATION_READ\x10\x01\x12'\n" +
	"#SHARING_FILE_ACCESS_OPERATION_WRITE\x10\x02\x12(\n" +
	"$SHARING_FILE_ACCESS_OPERATION_DELETE\x10\x03\x12(\n" +
	"$SHARING_FILE_ACCESS_OPERATION_RENAME\x10\x04\x12(\n" +
	"$SHARING_FILE_ACCESS_OPERATION_DENIED\x10\x05\"\xf0\x03\n" +
	"\x11UsageQuotaPayload\x12'\n" +
	"\x0forganization_id\x18\x01 \x01(\tR\x0eorganizationId\x12#\n" +
	"\rresource_type\x18\x02 \x01(\tR\fresourceType\x12#\n" +
	"\rcurrent_usage\x18\x03 \x01(\x03R\fcurrentUsage\x12\x1f\n" +
	"\vquota_limit\x18\x04 \x01(\x03R\n" +
	"quotaLimit\x12)\n" +
	"\x10usage_percentage\x18\x05 \x01(\x02R\x0fusagePercentage\x12R\n" +
	"\toperation\x18\x06 \x01(\x0e24.rodent.events.UsageQuotaPayload.UsageQuotaOperationR\toperation\"\xc7\x01\n" +
	"\x13UsageQuotaOperation\x12%\n" +
	"!USAGE_QUOTA_OPERATION_UNSPECIFIED\x10\x00\x12!\n" +
	"\x1dUSAGE_QUOTA_OPERATION_WARNING\x10\x01\x12\"\n" +
	"\x1eUSAGE_QUOTA_OPERATION_EXCEEDED\x10\x02\x12\x1f\n" +
	"\x1bUSAGE_QUOTA_OPERATION_RESET\x10\x03\x12!\n" +
	"\x1dUSAGE_QUOTA_OPERATION_UPDATED\x10\x04\"\xb6\x03\n" +
	"\x14UsageResourcePayload\x12\x1f\n" +
	"\vresource_id\x18\x01 \x01(\tR\n" +
	"resourceId\x12#\n" +
	"\rresource_type\x18\x02 \x01(\tR\fresourceType\x12\x1d\n" +
	"\n" +
	"bytes_used\x18\x03 \x01(\x03R\tbytesUsed\x12#\n" +
	"\robjects_count\x18\x04 \x01(\x03R\fobjectsCount\x12X\n" +
	"\toperation\x18\x05 \x01(\x0e2:.rodent.events.UsageResourcePayload.UsageResourceOperationR\toperation\"\xb9\x01\n" +
	"\x16UsageResourceOperation\x12(\n" +
	"$USAGE_RESOURCE_OPERATION_UNSPECIFIED\x10\x00\x12%\n" +
	"!USAGE_RESOURCE_OPERATION_MEASURED\x10\x01\x12&\n" +
	"\"USAGE_RESOURCE_OPERATION_INCREASED\x10\x02\x12&\n" +
	"\"USAGE_RESOURCE_OPERATION_DECREASED\x10\x03\"\xc9\x03\n" +
	"\x15UsageThresholdPayload\x12%\n" +
	"\x0ethreshold_name\x18\x01 \x01(\tR\rthresholdName\x12\x1f\n" +
	"\vmetric_name\x18\x02 \x01(\tR\n" +
	"metricName\x12#\n" +
	"\rcurrent_value\x18\x03 \x01(\x02R\fcurrentValue\x12'\n" +
	"\x0fthreshold_value\x18\x04 \x01(\x02R\x0ethresholdValue\x12Z\n" +
	"\toperation\x18\x05 \x01(\x0e2<.rodent.events.UsageThresholdPayload.UsageThresholdOperationR\toperation\"\xbd\x01\n" +
	"\x17UsageThresholdOperation\x12)\n" +
	"%USAGE_THRESHOLD_OPERATION_UNSPECIFIED\x10\x00\x12(\n" +
	"$USAGE_THRESHOLD_OPERATION_APPROACHED\x10\x01\x12&\n" +
	"\"USAGE_THRESHOLD_OPERATION_EXCEEDED\x10\x02\x12%\n" +
	"!USAGE_THRESHOLD_OPERATION_CLEARED\x10\x03\"\x80\t\n" +
	"\x1bDataTransferTransferPayload\x12\x1f\n" +
	"\vtransfer_id\x18\x01 \x01(\tR\n" +
	"transferId\x12%\n" +
	"\x0eoperation_type\x18\x02 \x01(\tR\roperationType\x12\x16\n" +
	"\x06source\x18\x03 \x01(\tR\x06source\x12 \n" +
	"\vdestination\x18\x04 \x01(\tR\vdestination\x12\x16\n" +
	"\x06status\x18\x05 \x01(\tR\x06status\x12^\n" +
	"\toperation\x18\x06 \x01(\x0e2@.rodent.events.DataTransferTransferPayload.DataTransferOperationR\toperation\x12#\n" +
	"\rerror_message\x18\a \x01(\tR\ferrorMessage\x12+\n" +
	"\x11bytes_transferred\x18\b \x01(\x03R\x10bytesTransferred\x12\x1f\n" +
	"\vtotal_bytes\x18\t \x01(\x03R\n" +
	"totalBytes\x12#\n" +
	"\rtransfer_rate\x18\n" +
	" \x01(\x03R\ftransferRate\x12!\n" +
	"\felapsed_time\x18\v \x01(\x03R\velapsedTime\x12#\n" +
	"\restimated_eta\x18\f \x01(\x03R\festimatedEta\x12\x14\n" +
	"\x05phase\x18\r \x01(\tR\x05phase\x12+\n" +
	"\x11phase_description\x18\x0e \x01(\tR\x10phaseDescription\x12\x1d\n" +
	"\n" +
	"created_at\x18\x0f \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"started_at\x18\x10 \x01(\x03R\tstartedAt\x12!\n" +
	"\fcompleted_at\x18\x11 \x01(\x03R\vcompletedAt\x12\x10\n" +
	"\x03pid\x18\x12 \x01(\x05R\x03pid\x12\x19\n" +
	"\blog_file\x18\x13 \x01(\tR\alogFile\x12%\n" +
	"\x0eis_incremental\x18\x14 \x01(\bR\risIncremental\x12!\n" +
	"\fis_resumable\x18\x15 \x01(\bR\visResumable\x12#\n" +
	"\rfrom_snapshot\x18\x16 \x01(\tR\ffromSnapshot\"\xc6\x02\n" +
	"\x15DataTransferOperation\x12'\n" +
	"#DATA_TRANSFER_OPERATION_UNSPECIFIED\x10\x00\x12#\n" +
	"\x1fDATA_TRANSFER_OPERATION_STARTED\x10\x01\x12$\n" +
	" DATA_TRANSFER_OPERATION_PROGRESS\x10\x02\x12%\n" +
	"!DATA_TRANSFER_OPERATION_COMPLETED\x10\x03\x12\"\n" +
	"\x1eDATA_TRANSFER_OPERATION_FAILED\x10\x04\x12%\n" +
	"!DATA_TRANSFER_OPERATION_CANCELLED\x10\x05\x12\"\n" +
	"\x1eDATA_TRANSFER_OPERATION_PAUSED\x10\x06\x12#\n" +
	"\x1fDATA_TRANSFER_OPERATION_RESUMED\x10\a\"\x94\a\n" +
	"\x12StorageDiskPayload\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x12\x1f\n" +
	"\vdevice_path\x18\x02 \x01(\tR\n" +
	"devicePath\x12\x16\n" +
	"\x06serial\x18\x03 \x01(\tR\x06serial\x12\x14\n" +
	"\x05model\x18\x04 \x01(\tR\x05model\x12\x16\n" +
	"\x06vendor\x18\x05 \x01(\tR\x06vendor\x12\x1d\n" +
	"\n" +
	"size_bytes\x18\x06 \x01(\x03R\tsizeBytes\x12\x1f\n" +
	"\vdevice_type\x18\a \x01(\tR\n" +
	"deviceType\x12%\n" +
	"\x0einterface_type\x18\b \x01(\tR\rinterfaceType\x12\x14\n" +
	"\x05state\x18\t \x01(\tR\x05state\x12\x16\n" +
	"\x06health\x18\n" +
	" \x01(\tR\x06health\x12#\n" +
	"\rhealth_reason\x18\v \x01(\tR\fhealthReason\x12 \n" +
	"\vtemperature\x18\f \x01(\x05R\vtemperature\x12$\n" +
	"\x0epower_on_hours\x18\r \x01(\x04R\fpowerOnHours\x12\x1b\n" +
	"\tpool_name\x18\x0e \x01(\tR\bpoolName\x12T\n" +
	"\toperation\x18\x0f \x01(\x0e26.rodent.events.StorageDiskPayload.StorageDiskOperationR\toperation\"\x84\x03\n" +
	"\x14StorageDiskOperation\x12&\n" +
	"\"STORAGE_DISK_OPERATION_UNSPECIFIED\x10\x00\x12%\n" +
	"!STORAGE_DISK_OPERATION_DISCOVERED\x10\x01\x12\"\n" +
	"\x1eSTORAGE_DISK_OPERATION_REMOVED\x10\x02\x12(\n" +
	"$STORAGE_DISK_OPERATION_STATE_CHANGED\x10\x03\x12)\n" +
	"%STORAGE_DISK_OPERATION_HEALTH_CHANGED\x10\x04\x12(\n" +
	"$STORAGE_DISK_OPERATION_ADDED_TO_POOL\x10\x05\x12,\n" +
	"(STORAGE_DISK_OPERATION_REMOVED_FROM_POOL\x10\x06\x12$\n" +
	" STORAGE_DISK_OPERATION_VALIDATED\x10\a\x12&\n" +
	"\"STORAGE_DISK_OPERATION_QUARANTINED\x10\b\"\xcd\a\n" +
	"\x17StorageDiskProbePayload\x12\x19\n" +
	"\bprobe_id\x18\x01 \x01(\tR\aprobeId\x12\x1b\n" +
	"\tdevice_id\x18\x02 \x01(\tR\bdeviceId\x12\x1f\n" +
	"\vdevice_path\x18\x03 \x01(\tR\n" +
	"devicePath\x12\x1d\n" +
	"\n" +
	"probe_type\x18\x04 \x01(\tR\tprobeType\x12\x16\n" +
	"\x06status\x18\x05 \x01(\tR\x06status\x12\x16\n" +
	"\x06result\x18\x06 \x01(\tR\x06result\x12\x1d\n" +
	"\n" +
	"started_at\x18\a \x01(\x03R\tstartedAt\x12!\n" +
	"\fcompleted_at\x18\b \x01(\x03R\vcompletedAt\x12)\n" +
	"\x10duration_seconds\x18\t \x01(\x03R\x0fdurationSeconds\x12)\n" +
	"\x10percent_complete\x18\n" +
	" \x01(\x05R\x0fpercentComplete\x12#\n" +
	"\rerror_message\x18\v \x01(\tR\ferrorMessage\x12'\n" +
	"\x0fconflict_reason\x18\f \x01(\tR\x0econflictReason\x12\x1f\n" +
	"\vretry_count\x18\r \x01(\x05R\n" +
	"retryCount\x12^\n" +
	"\toperation\x18\x0e \x01(\x0e2@.rodent.events.StorageDiskProbePayload.StorageDiskProbeOperationR\toperation\"\xa2\x03\n" +
	"\x19StorageDiskProbeOperation\x12,\n" +
	"(STORAGE_DISK_PROBE_OPERATION_UNSPECIFIED\x10\x00\x12*\n" +
	"&STORAGE_DISK_PROBE_OPERATION_SCHEDULED\x10\x01\x12(\n" +
	"$STORAGE_DISK_PROBE_OPERATION_STARTED\x10\x02\x12)\n" +
	"%STORAGE_DISK_PROBE_OPERATION_PROGRESS\x10\x03\x12*\n" +
	"&STORAGE_DISK_PROBE_OPERATION_COMPLETED\x10\x04\x12'\n" +
	"#STORAGE_DISK_PROBE_OPERATION_FAILED\x10\x05\x12*\n" +
	"&STORAGE_DISK_PROBE_OPERATION_CANCELLED\x10\x06\x12+\n" +
	"'STORAGE_DISK_PROBE_OPERATION_CONFLICTED\x10\a\x12(\n" +
	"$STORAGE_DISK_PROBE_OPERATION_TIMEOUT\x10\b*\xcf\x01\n" +
	"\n" +
	"EventLevel\x12\x1b\n" +
	"\x17EVENT_LEVEL_UNSPECIFIED\x10\x00\x12\x14\n" +
	"\x10EVENT_LEVEL_INFO\x10\x01\x12\x14\n" +
	"\x10EVENT_LEVEL_WARN\x10\x02\x12\x15\n" +
	"\x11EVENT_LEVEL_ERROR\x10\x03\x12\x18\n" +
	"\x14EVENT_LEVEL_CRITICAL\x10\x04\x12\x19\n" +
	"\x15EVENT_LEVEL_ESSENTIAL\x10\x05\x12\x15\n" +
	"\x11EVENT_LEVEL_DEBUG\x10\x06\x12\x15\n" +
	"\x11EVENT_LEVEL_TRACE\x10\a*\xcb\x02\n" +
	"\rEventCategory\x12\x1e\n" +
	"\x1aEVENT_CATEGORY_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15EVENT_CATEGORY_SYSTEM\x10\x01\x12\x1a\n" +
	"\x16EVENT_CATEGORY_STORAGE\x10\x02\x12\x1a\n" +
	"\x16EVENT_CATEGORY_NETWORK\x10\x03\x12\x1b\n" +
	"\x17EVENT_CATEGORY_SECURITY\x10\x04\x12\x1a\n" +
	"\x16EVENT_CATEGORY_SERVICE\x10\x05\x12\x1b\n" +
	"\x17EVENT_CATEGORY_IDENTITY\x10\x06\x12\x19\n" +
	"\x15EVENT_CATEGORY_ACCESS\x10\a\x12\x1a\n" +
	"\x16EVENT_CATEGORY_SHARING\x10\b\x12\x18\n" +
	"\x14EVENT_CATEGORY_USAGE\x10\t\x12 \n" +
	"\x1cEVENT_CATEGORY_DATA_TRANSFER\x10\n" +
	"B8Z6github.com/stratastor/toggle-rodent-proto/proto/eventsb\x06proto3"

var (
	file_proto_events_event_messages_proto_rawDescOnce sync.Once
	file_proto_events_event_messages_proto_rawDescData []byte
)

func file_proto_events_event_messages_proto_rawDescGZIP() []byte {
	file_proto_events_event_messages_proto_rawDescOnce.Do(func() {
		file_proto_events_event_messages_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_events_event_messages_proto_rawDesc), len(file_proto_events_event_messages_proto_rawDesc)))
	})
	return file_proto_events_event_messages_proto_rawDescData
}

var file_proto_events_event_messages_proto_enumTypes = make([]protoimpl.EnumInfo, 28)
var file_proto_events_event_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 41)
var file_proto_events_event_messages_proto_goTypes = []any{
	(EventLevel)(0),    // 0: rodent.events.EventLevel
	(EventCategory)(0), // 1: rodent.events.EventCategory
	(SystemShutdownPayload_SystemShutdownOperation)(0),           // 2: rodent.events.SystemShutdownPayload.SystemShutdownOperation
	(SystemConfigChangePayload_SystemConfigOperation)(0),         // 3: rodent.events.SystemConfigChangePayload.SystemConfigOperation
	(SystemUserPayload_SystemUserOperation)(0),                   // 4: rodent.events.SystemUserPayload.SystemUserOperation
	(StoragePoolPayload_StoragePoolOperation)(0),                 // 5: rodent.events.StoragePoolPayload.StoragePoolOperation
	(StorageDatasetPayload_StorageDatasetOperation)(0),           // 6: rodent.events.StorageDatasetPayload.StorageDatasetOperation
	(StorageSnapshotPayload_StorageSnapshotOperation)(0),         // 7: rodent.events.StorageSnapshotPayload.StorageSnapshotOperation
	(ServiceStatusPayload_ServiceStatusOperation)(0),             // 8: rodent.events.ServiceStatusPayload.ServiceStatusOperation
	(NetworkInterfacePayload_NetworkInterfaceOperation)(0),       // 9: rodent.events.NetworkInterfacePayload.NetworkInterfaceOperation
	(NetworkConnectionPayload_NetworkConnectionOperation)(0),     // 10: rodent.events.NetworkConnectionPayload.NetworkConnectionOperation
	(SecurityAuthPayload_SecurityAuthOperation)(0),               // 11: rodent.events.SecurityAuthPayload.SecurityAuthOperation
	(SecurityKeyPayload_SecurityKeyOperation)(0),                 // 12: rodent.events.SecurityKeyPayload.SecurityKeyOperation
	(SecurityCertificatePayload_SecurityCertificateOperation)(0), // 13: rodent.events.SecurityCertificatePayload.SecurityCertificateOperation
	(IdentityUserPayload_IdentityUserOperation)(0),               // 14: rodent.events.IdentityUserPayload.IdentityUserOperation
	(IdentityGroupPayload_IdentityGroupOperation)(0),             // 15: rodent.events.IdentityGroupPayload.IdentityGroupOperation
	(IdentityComputerPayload_IdentityComputerOperation)(0),       // 16: rodent.events.IdentityComputerPayload.IdentityComputerOperation
	(AccessACLPayload_AccessACLOperation)(0),                     // 17: rodent.events.AccessACLPayload.AccessACLOperation
	(AccessPermissionPayload_AccessPermissionOperation)(0),       // 18: rodent.events.AccessPermissionPayload.AccessPermissionOperation
	(SharingSharePayload_SharingShareOperation)(0),               // 19: rodent.events.SharingSharePayload.SharingShareOperation
	(SharingConnectionPayload_SharingConnectionOperation)(0),     // 20: rodent.events.SharingConnectionPayload.SharingConnectionOperation
	(SharingFileAccessPayload_SharingFileAccessOperation)(0),     // 21: rodent.events.SharingFileAccessPayload.SharingFileAccessOperation
	(UsageQuotaPayload_UsageQuotaOperation)(0),                   // 22: rodent.events.UsageQuotaPayload.UsageQuotaOperation
	(UsageResourcePayload_UsageResourceOperation)(0),             // 23: rodent.events.UsageResourcePayload.UsageResourceOperation
	(UsageThresholdPayload_UsageThresholdOperation)(0),           // 24: rodent.events.UsageThresholdPayload.UsageThresholdOperation
	(DataTransferTransferPayload_DataTransferOperation)(0),       // 25: rodent.events.DataTransferTransferPayload.DataTransferOperation
	(StorageDiskPayload_StorageDiskOperation)(0),                 // 26: rodent.events.StorageDiskPayload.StorageDiskOperation
	(StorageDiskProbePayload_StorageDiskProbeOperation)(0),       // 27: rodent.events.StorageDiskProbePayload.StorageDiskProbeOperation
	(*Event)(nil),                       // 28: rodent.events.Event
	(*SystemEvent)(nil),                 // 29: rodent.events.SystemEvent
	(*StorageEvent)(nil),                // 30: rodent.events.StorageEvent
	(*NetworkEvent)(nil),                // 31: rodent.events.NetworkEvent
	(*SecurityEvent)(nil),               // 32: rodent.events.SecurityEvent
	(*ServiceEvent)(nil),                // 33: rodent.events.ServiceEvent
	(*IdentityEvent)(nil),               // 34: rodent.events.IdentityEvent
	(*AccessEvent)(nil),                 // 35: rodent.events.AccessEvent
	(*SharingEvent)(nil),                // 36: rodent.events.SharingEvent
	(*UsageEvent)(nil),                  // 37: rodent.events.UsageEvent
	(*DataTransferEvent)(nil),           // 38: rodent.events.DataTransferEvent
	(*SystemStartupPayload)(nil),        // 39: rodent.events.SystemStartupPayload
	(*SystemRegistrationPayload)(nil),   // 40: rodent.events.SystemRegistrationPayload
	(*SystemShutdownPayload)(nil),       // 41: rodent.events.SystemShutdownPayload
	(*SystemConfigChangePayload)(nil),   // 42: rodent.events.SystemConfigChangePayload
	(*SystemUserPayload)(nil),           // 43: rodent.events.SystemUserPayload
	(*StoragePoolPayload)(nil),          // 44: rodent.events.StoragePoolPayload
	(*StorageDatasetPayload)(nil),       // 45: rodent.events.StorageDatasetPayload
	(*StorageSnapshotPayload)(nil),      // 46: rodent.events.StorageSnapshotPayload
	(*ServiceStatusPayload)(nil),        // 47: rodent.events.ServiceStatusPayload
	(*NetworkInterfacePayload)(nil),     // 48: rodent.events.NetworkInterfacePayload
	(*NetworkConnectionPayload)(nil),    // 49: rodent.events.NetworkConnectionPayload
	(*SecurityAuthPayload)(nil),         // 50: rodent.events.SecurityAuthPayload
	(*SecurityKeyPayload)(nil),          // 51: rodent.events.SecurityKeyPayload
	(*SecurityCertificatePayload)(nil),  // 52: rodent.events.SecurityCertificatePayload
	(*IdentityUserPayload)(nil),         // 53: rodent.events.IdentityUserPayload
	(*IdentityGroupPayload)(nil),        // 54: rodent.events.IdentityGroupPayload
	(*IdentityComputerPayload)(nil),     // 55: rodent.events.IdentityComputerPayload
	(*AccessACLPayload)(nil),            // 56: rodent.events.AccessACLPayload
	(*AccessPermissionPayload)(nil),     // 57: rodent.events.AccessPermissionPayload
	(*SharingSharePayload)(nil),         // 58: rodent.events.SharingSharePayload
	(*SharingConnectionPayload)(nil),    // 59: rodent.events.SharingConnectionPayload
	(*SharingFileAccessPayload)(nil),    // 60: rodent.events.SharingFileAccessPayload
	(*UsageQuotaPayload)(nil),           // 61: rodent.events.UsageQuotaPayload
	(*UsageResourcePayload)(nil),        // 62: rodent.events.UsageResourcePayload
	(*UsageThresholdPayload)(nil),       // 63: rodent.events.UsageThresholdPayload
	(*DataTransferTransferPayload)(nil), // 64: rodent.events.DataTransferTransferPayload
	(*StorageDiskPayload)(nil),          // 65: rodent.events.StorageDiskPayload
	(*StorageDiskProbePayload)(nil),     // 66: rodent.events.StorageDiskProbePayload
	nil,                                 // 67: rodent.events.Event.MetadataEntry
	nil,                                 // 68: rodent.events.SystemStartupPayload.SystemInfoEntry
}
var file_proto_events_event_messages_proto_depIdxs = []int32{
	0,  // 0: rodent.events.Event.level:type_name -> rodent.events.EventLevel
	1,  // 1: rodent.events.Event.category:type_name -> rodent.events.EventCategory
	67, // 2: rodent.events.Event.metadata:type_name -> rodent.events.Event.MetadataEntry
	29, // 3: rodent.events.Event.system_event:type_name -> rodent.events.SystemEvent
	30, // 4: rodent.events.Event.storage_event:type_name -> rodent.events.StorageEvent
	31, // 5: rodent.events.Event.network_event:type_name -> rodent.events.NetworkEvent
	32, // 6: rodent.events.Event.security_event:type_name -> rodent.events.SecurityEvent
	33, // 7: rodent.events.Event.service_event:type_name -> rodent.events.ServiceEvent
	34, // 8: rodent.events.Event.identity_event:type_name -> rodent.events.IdentityEvent
	35, // 9: rodent.events.Event.access_event:type_name -> rodent.events.AccessEvent
	36, // 10: rodent.events.Event.sharing_event:type_name -> rodent.events.SharingEvent
	37, // 11: rodent.events.Event.usage_event:type_name -> rodent.events.UsageEvent
	38, // 12: rodent.events.Event.data_transfer_event:type_name -> rodent.events.DataTransferEvent
	39, // 13: rodent.events.SystemEvent.startup:type_name -> rodent.events.SystemStartupPayload
	41, // 14: rodent.events.SystemEvent.shutdown:type_name -> rodent.events.SystemShutdownPayload
	42, // 15: rodent.events.SystemEvent.config_changed:type_name -> rodent.events.SystemConfigChangePayload
	43, // 16: rodent.events.SystemEvent.user_event:type_name -> rodent.events.SystemUserPayload
	40, // 17: rodent.events.SystemEvent.registration:type_name -> rodent.events.SystemRegistrationPayload
	44, // 18: rodent.events.StorageEvent.pool_event:type_name -> rodent.events.StoragePoolPayload
	45, // 19: rodent.events.StorageEvent.dataset_event:type_name -> rodent.events.StorageDatasetPayload
	46, // 20: rodent.events.StorageEvent.snapshot_event:type_name -> rodent.events.StorageSnapshotPayload
	65, // 21: rodent.events.StorageEvent.disk_event:type_name -> rodent.events.StorageDiskPayload
	66, // 22: rodent.events.StorageEvent.disk_probe_event:type_name -> rodent.events.StorageDiskProbePayload
	48, // 23: rodent.events.NetworkEvent.interface_event:type_name -> rodent.events.NetworkInterfacePayload
	49, // 24: rodent.events.NetworkEvent.connection_event:type_name -> rodent.events.NetworkConnectionPayload
	50, // 25: rodent.events.SecurityEvent.auth_event:type_name -> rodent.events.SecurityAuthPayload
	51, // 26: rodent.events.SecurityEvent.key_event:type_name -> rodent.events.SecurityKeyPayload
	52, // 27: rodent.events.SecurityEvent.certificate_event:type_name -> rodent.events.SecurityCertificatePayload
	47, // 28: rodent.events.ServiceEvent.status_event:type_name -> rodent.events.ServiceStatusPayload
	53, // 29: rodent.events.IdentityEvent.user_event:type_name -> rodent.events.IdentityUserPayload
	54, // 30: rodent.events.IdentityEvent.group_event:type_name -> rodent.events.IdentityGroupPayload
	55, // 31: rodent.events.IdentityEvent.computer_event:type_name -> rodent.events.IdentityComputerPayload
	56, // 32: rodent.events.AccessEvent.acl_event:type_name -> rodent.events.AccessACLPayload
	57, // 33: rodent.events.AccessEvent.permission_event:type_name -> rodent.events.AccessPermissionPayload
	58, // 34: rodent.events.SharingEvent.share_event:type_name -> rodent.events.SharingSharePayload
	59, // 35: rodent.events.SharingEvent.connection_event:type_name -> rodent.events.SharingConnectionPayload
	60, // 36: rodent.events.SharingEvent.file_access_event:type_name -> rodent.events.SharingFileAccessPayload
	61, // 37: rodent.events.UsageEvent.quota_event:type_name -> rodent.events.UsageQuotaPayload
	62, // 38: rodent.events.UsageEvent.resource_event:type_name -> rodent.events.UsageResourcePayload
	63, // 39: rodent.events.UsageEvent.threshold_event:type_name -> rodent.events.UsageThresholdPayload
	64, // 40: rodent.events.DataTransferEvent.transfer_event:type_name -> rodent.events.DataTransferTransferPayload
	68, // 41: rodent.events.SystemStartupPayload.system_info:type_name -> rodent.events.SystemStartupPayload.SystemInfoEntry
	2,  // 42: rodent.events.SystemShutdownPayload.operation:type_name -> rodent.events.SystemShutdownPayload.SystemShutdownOperation
	3,  // 43: rodent.events.SystemConfigChangePayload.operation:type_name -> rodent.events.SystemConfigChangePayload.SystemConfigOperation
	4,  // 44: rodent.events.SystemUserPayload.operation:type_name -> rodent.events.SystemUserPayload.SystemUserOperation
	5,  // 45: rodent.events.StoragePoolPayload.operation:type_name -> rodent.events.StoragePoolPayload.StoragePoolOperation
	6,  // 46: rodent.events.StorageDatasetPayload.operation:type_name -> rodent.events.StorageDatasetPayload.StorageDatasetOperation
	7,  // 47: rodent.events.StorageSnapshotPayload.operation:type_name -> rodent.events.StorageSnapshotPayload.StorageSnapshotOperation
	8,  // 48: rodent.events.ServiceStatusPayload.operation:type_name -> rodent.events.ServiceStatusPayload.ServiceStatusOperation
	9,  // 49: rodent.events.NetworkInterfacePayload.operation:type_name -> rodent.events.NetworkInterfacePayload.NetworkInterfaceOperation
	10, // 50: rodent.events.NetworkConnectionPayload.operation:type_name -> rodent.events.NetworkConnectionPayload.NetworkConnectionOperation
	11, // 51: rodent.events.SecurityAuthPayload.operation:type_name -> rodent.events.SecurityAuthPayload.SecurityAuthOperation
	12, // 52: rodent.events.SecurityKeyPayload.operation:type_name -> rodent.events.SecurityKeyPayload.SecurityKeyOperation
	13, // 53: rodent.events.SecurityCertificatePayload.operation:type_name -> rodent.events.SecurityCertificatePayload.SecurityCertificateOperation
	14, // 54: rodent.events.IdentityUserPayload.operation:type_name -> rodent.events.IdentityUserPayload.IdentityUserOperation
	15, // 55: rodent.events.IdentityGroupPayload.operation:type_name -> rodent.events.IdentityGroupPayload.IdentityGroupOperation
	16, // 56: rodent.events.IdentityComputerPayload.operation:type_name -> rodent.events.IdentityComputerPayload.IdentityComputerOperation
	17, // 57: rodent.events.AccessACLPayload.operation:type_name -> rodent.events.AccessACLPayload.AccessACLOperation
	18, // 58: rodent.events.AccessPermissionPayload.operation:type_name -> rodent.events.AccessPermissionPayload.AccessPermissionOperation
	19, // 59: rodent.events.SharingSharePayload.operation:type_name -> rodent.events.SharingSharePayload.SharingShareOperation
	20, // 60: rodent.events.SharingConnectionPayload.operation:type_name -> rodent.events.SharingConnectionPayload.SharingConnectionOperation
	21, // 61: rodent.events.SharingFileAccessPayload.operation:type_name -> rodent.events.SharingFileAccessPayload.SharingFileAccessOperation
	22, // 62: rodent.events.UsageQuotaPayload.operation:type_name -> rodent.events.UsageQuotaPayload.UsageQuotaOperation
	23, // 63: rodent.events.UsageResourcePayload.operation:type_name -> rodent.events.UsageResourcePayload.UsageResourceOperation
	24, // 64: rodent.events.UsageThresholdPayload.operation:type_name -> rodent.events.UsageThresholdPayload.UsageThresholdOperation
	25, // 65: rodent.events.DataTransferTransferPayload.operation:type_name -> rodent.events.DataTransferTransferPayload.DataTransferOperation
	26, // 66: rodent.events.StorageDiskPayload.operation:type_name -> rodent.events.StorageDiskPayload.StorageDiskOperation
	27, // 67: rodent.events.StorageDiskProbePayload.operation:type_name -> rodent.events.StorageDiskProbePayload.StorageDiskProbeOperation
	68, // [68:68] is the sub-list for method output_type
	68, // [68:68] is the sub-list for method input_type
	68, // [68:68] is the sub-list for extension type_name
	68, // [68:68] is the sub-list for extension extendee
	0,  // [0:68] is the sub-list for field type_name
}

func init() { file_proto_events_event_messages_proto_init() }
func file_proto_events_event_messages_proto_init() {
	if File_proto_events_event_messages_proto != nil {
		return
	}
	file_proto_events_event_messages_proto_msgTypes[0].OneofWrappers = []any{
		(*Event_SystemEvent)(nil),
		(*Event_StorageEvent)(nil),
		(*Event_NetworkEvent)(nil),
		(*Event_SecurityEvent)(nil),
		(*Event_ServiceEvent)(nil),
		(*Event_IdentityEvent)(nil),
		(*Event_AccessEvent)(nil),
		(*Event_SharingEvent)(nil),
		(*Event_UsageEvent)(nil),
		(*Event_DataTransferEvent)(nil),
	}
	file_proto_events_event_messages_proto_msgTypes[1].OneofWrappers = []any{
		(*SystemEvent_Startup)(nil),
		(*SystemEvent_Shutdown)(nil),
		(*SystemEvent_ConfigChanged)(nil),
		(*SystemEvent_UserEvent)(nil),
		(*SystemEvent_Registration)(nil),
	}
	file_proto_events_event_messages_proto_msgTypes[2].OneofWrappers = []any{
		(*StorageEvent_PoolEvent)(nil),
		(*StorageEvent_DatasetEvent)(nil),
		(*StorageEvent_SnapshotEvent)(nil),
		(*StorageEvent_DiskEvent)(nil),
		(*StorageEvent_DiskProbeEvent)(nil),
	}
	file_proto_events_event_messages_proto_msgTypes[3].OneofWrappers = []any{
		(*NetworkEvent_InterfaceEvent)(nil),
		(*NetworkEvent_ConnectionEvent)(nil),
	}
	file_proto_events_event_messages_proto_msgTypes[4].OneofWrappers = []any{
		(*SecurityEvent_AuthEvent)(nil),
		(*SecurityEvent_KeyEvent)(nil),
		(*SecurityEvent_CertificateEvent)(nil),
	}
	file_proto_events_event_messages_proto_msgTypes[5].OneofWrappers = []any{
		(*ServiceEvent_StatusEvent)(nil),
	}
	file_proto_events_event_messages_proto_msgTypes[6].OneofWrappers = []any{
		(*IdentityEvent_UserEvent)(nil),
		(*IdentityEvent_GroupEvent)(nil),
		(*IdentityEvent_ComputerEvent)(nil),
	}
	file_proto_events_event_messages_proto_msgTypes[7].OneofWrappers = []any{
		(*AccessEvent_AclEvent)(nil),
		(*AccessEvent_PermissionEvent)(nil),
	}
	file_proto_events_event_messages_proto_msgTypes[8].OneofWrappers = []any{
		(*SharingEvent_ShareEvent)(nil),
		(*SharingEvent_ConnectionEvent)(nil),
		(*SharingEvent_FileAccessEvent)(nil),
	}
	file_proto_events_event_messages_proto_msgTypes[9].OneofWrappers = []any{
		(*UsageEvent_QuotaEvent)(nil),
		(*UsageEvent_ResourceEvent)(nil),
		(*UsageEvent_ThresholdEvent)(nil),
	}
	file_proto_events_event_messages_proto_msgTypes[10].OneofWrappers = []any{
		(*DataTransferEvent_TransferEvent)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_events_event_messages_proto_rawDesc), len(file_proto_events_event_messages_proto_rawDesc)),
			NumEnums:      28,
			NumMessages:   41,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_events_event_messages_proto_goTypes,
		DependencyIndexes: file_proto_events_event_messages_proto_depIdxs,
		EnumInfos:         file_proto_events_event_messages_proto_enumTypes,
		MessageInfos:      file_proto_events_event_messages_proto_msgTypes,
	}.Build()
	File_proto_events_event_messages_proto = out.File
	file_proto_events_event_messages_proto_goTypes = nil
	file_proto_events_event_messages_proto_depIdxs = nil
}
