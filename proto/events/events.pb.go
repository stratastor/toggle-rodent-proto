// Copyright 2025 The StrataSTOR Authors and Contributors
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/events/events.proto

package events

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// SystemEventType defines system-level event types
type SystemEventType int32

const (
	SystemEventType_SYSTEM_EVENT_TYPE_UNSPECIFIED SystemEventType = 0
	// Lifecycle events
	SystemEventType_SYSTEM_EVENT_TYPE_STARTUP  SystemEventType = 1
	SystemEventType_SYSTEM_EVENT_TYPE_SHUTDOWN SystemEventType = 2
	SystemEventType_SYSTEM_EVENT_TYPE_RESTART  SystemEventType = 3
	// Configuration events
	SystemEventType_SYSTEM_EVENT_TYPE_CONFIG_CHANGED  SystemEventType = 4
	SystemEventType_SYSTEM_EVENT_TYPE_CONFIG_RELOADED SystemEventType = 5
	// Health and monitoring
	SystemEventType_SYSTEM_EVENT_TYPE_HEALTH_CHECK_PASSED   SystemEventType = 6
	SystemEventType_SYSTEM_EVENT_TYPE_HEALTH_CHECK_FAILED   SystemEventType = 7
	SystemEventType_SYSTEM_EVENT_TYPE_PERFORMANCE_THRESHOLD SystemEventType = 8
	// User management (local system users)
	SystemEventType_SYSTEM_EVENT_TYPE_LOCAL_USER_CREATED  SystemEventType = 9
	SystemEventType_SYSTEM_EVENT_TYPE_LOCAL_USER_DELETED  SystemEventType = 10
	SystemEventType_SYSTEM_EVENT_TYPE_LOCAL_USER_MODIFIED SystemEventType = 11
	SystemEventType_SYSTEM_EVENT_TYPE_LOCAL_GROUP_CREATED SystemEventType = 12
	SystemEventType_SYSTEM_EVENT_TYPE_LOCAL_GROUP_DELETED SystemEventType = 13
	// System updates
	SystemEventType_SYSTEM_EVENT_TYPE_PACKAGE_INSTALLED SystemEventType = 14
	SystemEventType_SYSTEM_EVENT_TYPE_PACKAGE_UPDATED   SystemEventType = 15
	SystemEventType_SYSTEM_EVENT_TYPE_PACKAGE_REMOVED   SystemEventType = 16
)

// Enum value maps for SystemEventType.
var (
	SystemEventType_name = map[int32]string{
		0:  "SYSTEM_EVENT_TYPE_UNSPECIFIED",
		1:  "SYSTEM_EVENT_TYPE_STARTUP",
		2:  "SYSTEM_EVENT_TYPE_SHUTDOWN",
		3:  "SYSTEM_EVENT_TYPE_RESTART",
		4:  "SYSTEM_EVENT_TYPE_CONFIG_CHANGED",
		5:  "SYSTEM_EVENT_TYPE_CONFIG_RELOADED",
		6:  "SYSTEM_EVENT_TYPE_HEALTH_CHECK_PASSED",
		7:  "SYSTEM_EVENT_TYPE_HEALTH_CHECK_FAILED",
		8:  "SYSTEM_EVENT_TYPE_PERFORMANCE_THRESHOLD",
		9:  "SYSTEM_EVENT_TYPE_LOCAL_USER_CREATED",
		10: "SYSTEM_EVENT_TYPE_LOCAL_USER_DELETED",
		11: "SYSTEM_EVENT_TYPE_LOCAL_USER_MODIFIED",
		12: "SYSTEM_EVENT_TYPE_LOCAL_GROUP_CREATED",
		13: "SYSTEM_EVENT_TYPE_LOCAL_GROUP_DELETED",
		14: "SYSTEM_EVENT_TYPE_PACKAGE_INSTALLED",
		15: "SYSTEM_EVENT_TYPE_PACKAGE_UPDATED",
		16: "SYSTEM_EVENT_TYPE_PACKAGE_REMOVED",
	}
	SystemEventType_value = map[string]int32{
		"SYSTEM_EVENT_TYPE_UNSPECIFIED":           0,
		"SYSTEM_EVENT_TYPE_STARTUP":               1,
		"SYSTEM_EVENT_TYPE_SHUTDOWN":              2,
		"SYSTEM_EVENT_TYPE_RESTART":               3,
		"SYSTEM_EVENT_TYPE_CONFIG_CHANGED":        4,
		"SYSTEM_EVENT_TYPE_CONFIG_RELOADED":       5,
		"SYSTEM_EVENT_TYPE_HEALTH_CHECK_PASSED":   6,
		"SYSTEM_EVENT_TYPE_HEALTH_CHECK_FAILED":   7,
		"SYSTEM_EVENT_TYPE_PERFORMANCE_THRESHOLD": 8,
		"SYSTEM_EVENT_TYPE_LOCAL_USER_CREATED":    9,
		"SYSTEM_EVENT_TYPE_LOCAL_USER_DELETED":    10,
		"SYSTEM_EVENT_TYPE_LOCAL_USER_MODIFIED":   11,
		"SYSTEM_EVENT_TYPE_LOCAL_GROUP_CREATED":   12,
		"SYSTEM_EVENT_TYPE_LOCAL_GROUP_DELETED":   13,
		"SYSTEM_EVENT_TYPE_PACKAGE_INSTALLED":     14,
		"SYSTEM_EVENT_TYPE_PACKAGE_UPDATED":       15,
		"SYSTEM_EVENT_TYPE_PACKAGE_REMOVED":       16,
	}
)

func (x SystemEventType) Enum() *SystemEventType {
	p := new(SystemEventType)
	*p = x
	return p
}

func (x SystemEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SystemEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_events_events_proto_enumTypes[0].Descriptor()
}

func (SystemEventType) Type() protoreflect.EnumType {
	return &file_proto_events_events_proto_enumTypes[0]
}

func (x SystemEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SystemEventType.Descriptor instead.
func (SystemEventType) EnumDescriptor() ([]byte, []int) {
	return file_proto_events_events_proto_rawDescGZIP(), []int{0}
}

// StorageEventType defines storage-related event types
type StorageEventType int32

const (
	StorageEventType_STORAGE_EVENT_TYPE_UNSPECIFIED StorageEventType = 0
	// Pool operations
	StorageEventType_STORAGE_EVENT_TYPE_POOL_CREATED         StorageEventType = 1
	StorageEventType_STORAGE_EVENT_TYPE_POOL_DESTROYED       StorageEventType = 2
	StorageEventType_STORAGE_EVENT_TYPE_POOL_IMPORTED        StorageEventType = 3
	StorageEventType_STORAGE_EVENT_TYPE_POOL_EXPORTED        StorageEventType = 4
	StorageEventType_STORAGE_EVENT_TYPE_POOL_SCRUB_STARTED   StorageEventType = 5
	StorageEventType_STORAGE_EVENT_TYPE_POOL_SCRUB_COMPLETED StorageEventType = 6
	StorageEventType_STORAGE_EVENT_TYPE_POOL_SCRUB_FAILED    StorageEventType = 7
	StorageEventType_STORAGE_EVENT_TYPE_POOL_STATUS_CHANGED  StorageEventType = 8
	// Dataset operations
	StorageEventType_STORAGE_EVENT_TYPE_DATASET_CREATED          StorageEventType = 9
	StorageEventType_STORAGE_EVENT_TYPE_DATASET_DESTROYED        StorageEventType = 10
	StorageEventType_STORAGE_EVENT_TYPE_DATASET_RENAMED          StorageEventType = 11
	StorageEventType_STORAGE_EVENT_TYPE_DATASET_PROPERTY_CHANGED StorageEventType = 12
	StorageEventType_STORAGE_EVENT_TYPE_DATASET_MOUNTED          StorageEventType = 13
	StorageEventType_STORAGE_EVENT_TYPE_DATASET_UNMOUNTED        StorageEventType = 14
	// Snapshot operations
	StorageEventType_STORAGE_EVENT_TYPE_SNAPSHOT_CREATED     StorageEventType = 15
	StorageEventType_STORAGE_EVENT_TYPE_SNAPSHOT_DESTROYED   StorageEventType = 16
	StorageEventType_STORAGE_EVENT_TYPE_SNAPSHOT_RENAMED     StorageEventType = 17
	StorageEventType_STORAGE_EVENT_TYPE_SNAPSHOT_ROLLED_BACK StorageEventType = 18
	StorageEventType_STORAGE_EVENT_TYPE_SNAPSHOT_CLONED      StorageEventType = 19
	// Transfer operations
	StorageEventType_STORAGE_EVENT_TYPE_TRANSFER_STARTED   StorageEventType = 20
	StorageEventType_STORAGE_EVENT_TYPE_TRANSFER_COMPLETED StorageEventType = 21
	StorageEventType_STORAGE_EVENT_TYPE_TRANSFER_FAILED    StorageEventType = 22
	StorageEventType_STORAGE_EVENT_TYPE_TRANSFER_PAUSED    StorageEventType = 23
	StorageEventType_STORAGE_EVENT_TYPE_TRANSFER_RESUMED   StorageEventType = 24
	StorageEventType_STORAGE_EVENT_TYPE_TRANSFER_CANCELLED StorageEventType = 25
	// Volume and space
	StorageEventType_STORAGE_EVENT_TYPE_VOLUME_FULL      StorageEventType = 26
	StorageEventType_STORAGE_EVENT_TYPE_VOLUME_THRESHOLD StorageEventType = 27
	StorageEventType_STORAGE_EVENT_TYPE_QUOTA_EXCEEDED   StorageEventType = 28
)

// Enum value maps for StorageEventType.
var (
	StorageEventType_name = map[int32]string{
		0:  "STORAGE_EVENT_TYPE_UNSPECIFIED",
		1:  "STORAGE_EVENT_TYPE_POOL_CREATED",
		2:  "STORAGE_EVENT_TYPE_POOL_DESTROYED",
		3:  "STORAGE_EVENT_TYPE_POOL_IMPORTED",
		4:  "STORAGE_EVENT_TYPE_POOL_EXPORTED",
		5:  "STORAGE_EVENT_TYPE_POOL_SCRUB_STARTED",
		6:  "STORAGE_EVENT_TYPE_POOL_SCRUB_COMPLETED",
		7:  "STORAGE_EVENT_TYPE_POOL_SCRUB_FAILED",
		8:  "STORAGE_EVENT_TYPE_POOL_STATUS_CHANGED",
		9:  "STORAGE_EVENT_TYPE_DATASET_CREATED",
		10: "STORAGE_EVENT_TYPE_DATASET_DESTROYED",
		11: "STORAGE_EVENT_TYPE_DATASET_RENAMED",
		12: "STORAGE_EVENT_TYPE_DATASET_PROPERTY_CHANGED",
		13: "STORAGE_EVENT_TYPE_DATASET_MOUNTED",
		14: "STORAGE_EVENT_TYPE_DATASET_UNMOUNTED",
		15: "STORAGE_EVENT_TYPE_SNAPSHOT_CREATED",
		16: "STORAGE_EVENT_TYPE_SNAPSHOT_DESTROYED",
		17: "STORAGE_EVENT_TYPE_SNAPSHOT_RENAMED",
		18: "STORAGE_EVENT_TYPE_SNAPSHOT_ROLLED_BACK",
		19: "STORAGE_EVENT_TYPE_SNAPSHOT_CLONED",
		20: "STORAGE_EVENT_TYPE_TRANSFER_STARTED",
		21: "STORAGE_EVENT_TYPE_TRANSFER_COMPLETED",
		22: "STORAGE_EVENT_TYPE_TRANSFER_FAILED",
		23: "STORAGE_EVENT_TYPE_TRANSFER_PAUSED",
		24: "STORAGE_EVENT_TYPE_TRANSFER_RESUMED",
		25: "STORAGE_EVENT_TYPE_TRANSFER_CANCELLED",
		26: "STORAGE_EVENT_TYPE_VOLUME_FULL",
		27: "STORAGE_EVENT_TYPE_VOLUME_THRESHOLD",
		28: "STORAGE_EVENT_TYPE_QUOTA_EXCEEDED",
	}
	StorageEventType_value = map[string]int32{
		"STORAGE_EVENT_TYPE_UNSPECIFIED":              0,
		"STORAGE_EVENT_TYPE_POOL_CREATED":             1,
		"STORAGE_EVENT_TYPE_POOL_DESTROYED":           2,
		"STORAGE_EVENT_TYPE_POOL_IMPORTED":            3,
		"STORAGE_EVENT_TYPE_POOL_EXPORTED":            4,
		"STORAGE_EVENT_TYPE_POOL_SCRUB_STARTED":       5,
		"STORAGE_EVENT_TYPE_POOL_SCRUB_COMPLETED":     6,
		"STORAGE_EVENT_TYPE_POOL_SCRUB_FAILED":        7,
		"STORAGE_EVENT_TYPE_POOL_STATUS_CHANGED":      8,
		"STORAGE_EVENT_TYPE_DATASET_CREATED":          9,
		"STORAGE_EVENT_TYPE_DATASET_DESTROYED":        10,
		"STORAGE_EVENT_TYPE_DATASET_RENAMED":          11,
		"STORAGE_EVENT_TYPE_DATASET_PROPERTY_CHANGED": 12,
		"STORAGE_EVENT_TYPE_DATASET_MOUNTED":          13,
		"STORAGE_EVENT_TYPE_DATASET_UNMOUNTED":        14,
		"STORAGE_EVENT_TYPE_SNAPSHOT_CREATED":         15,
		"STORAGE_EVENT_TYPE_SNAPSHOT_DESTROYED":       16,
		"STORAGE_EVENT_TYPE_SNAPSHOT_RENAMED":         17,
		"STORAGE_EVENT_TYPE_SNAPSHOT_ROLLED_BACK":     18,
		"STORAGE_EVENT_TYPE_SNAPSHOT_CLONED":          19,
		"STORAGE_EVENT_TYPE_TRANSFER_STARTED":         20,
		"STORAGE_EVENT_TYPE_TRANSFER_COMPLETED":       21,
		"STORAGE_EVENT_TYPE_TRANSFER_FAILED":          22,
		"STORAGE_EVENT_TYPE_TRANSFER_PAUSED":          23,
		"STORAGE_EVENT_TYPE_TRANSFER_RESUMED":         24,
		"STORAGE_EVENT_TYPE_TRANSFER_CANCELLED":       25,
		"STORAGE_EVENT_TYPE_VOLUME_FULL":              26,
		"STORAGE_EVENT_TYPE_VOLUME_THRESHOLD":         27,
		"STORAGE_EVENT_TYPE_QUOTA_EXCEEDED":           28,
	}
)

func (x StorageEventType) Enum() *StorageEventType {
	p := new(StorageEventType)
	*p = x
	return p
}

func (x StorageEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StorageEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_events_events_proto_enumTypes[1].Descriptor()
}

func (StorageEventType) Type() protoreflect.EnumType {
	return &file_proto_events_events_proto_enumTypes[1]
}

func (x StorageEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StorageEventType.Descriptor instead.
func (StorageEventType) EnumDescriptor() ([]byte, []int) {
	return file_proto_events_events_proto_rawDescGZIP(), []int{1}
}

// NetworkEventType defines network-related event types
type NetworkEventType int32

const (
	NetworkEventType_NETWORK_EVENT_TYPE_UNSPECIFIED NetworkEventType = 0
	// Interface events
	NetworkEventType_NETWORK_EVENT_TYPE_INTERFACE_UP             NetworkEventType = 1
	NetworkEventType_NETWORK_EVENT_TYPE_INTERFACE_DOWN           NetworkEventType = 2
	NetworkEventType_NETWORK_EVENT_TYPE_INTERFACE_ADDED          NetworkEventType = 3
	NetworkEventType_NETWORK_EVENT_TYPE_INTERFACE_REMOVED        NetworkEventType = 4
	NetworkEventType_NETWORK_EVENT_TYPE_INTERFACE_CONFIG_CHANGED NetworkEventType = 5
	// Connectivity events
	NetworkEventType_NETWORK_EVENT_TYPE_CONNECTION_ESTABLISHED NetworkEventType = 6
	NetworkEventType_NETWORK_EVENT_TYPE_CONNECTION_FAILED      NetworkEventType = 7
	NetworkEventType_NETWORK_EVENT_TYPE_CONNECTION_LOST        NetworkEventType = 8
	NetworkEventType_NETWORK_EVENT_TYPE_CONNECTION_TIMEOUT     NetworkEventType = 9
	// DNS events
	NetworkEventType_NETWORK_EVENT_TYPE_DNS_CONFIG_CHANGED    NetworkEventType = 10
	NetworkEventType_NETWORK_EVENT_TYPE_DNS_RESOLUTION_FAILED NetworkEventType = 11
	// Routing events
	NetworkEventType_NETWORK_EVENT_TYPE_ROUTE_ADDED   NetworkEventType = 12
	NetworkEventType_NETWORK_EVENT_TYPE_ROUTE_DELETED NetworkEventType = 13
	NetworkEventType_NETWORK_EVENT_TYPE_ROUTE_CHANGED NetworkEventType = 14
	// Performance events
	NetworkEventType_NETWORK_EVENT_TYPE_BANDWIDTH_THRESHOLD   NetworkEventType = 15
	NetworkEventType_NETWORK_EVENT_TYPE_PACKET_LOSS_THRESHOLD NetworkEventType = 16
	NetworkEventType_NETWORK_EVENT_TYPE_LATENCY_THRESHOLD     NetworkEventType = 17
)

// Enum value maps for NetworkEventType.
var (
	NetworkEventType_name = map[int32]string{
		0:  "NETWORK_EVENT_TYPE_UNSPECIFIED",
		1:  "NETWORK_EVENT_TYPE_INTERFACE_UP",
		2:  "NETWORK_EVENT_TYPE_INTERFACE_DOWN",
		3:  "NETWORK_EVENT_TYPE_INTERFACE_ADDED",
		4:  "NETWORK_EVENT_TYPE_INTERFACE_REMOVED",
		5:  "NETWORK_EVENT_TYPE_INTERFACE_CONFIG_CHANGED",
		6:  "NETWORK_EVENT_TYPE_CONNECTION_ESTABLISHED",
		7:  "NETWORK_EVENT_TYPE_CONNECTION_FAILED",
		8:  "NETWORK_EVENT_TYPE_CONNECTION_LOST",
		9:  "NETWORK_EVENT_TYPE_CONNECTION_TIMEOUT",
		10: "NETWORK_EVENT_TYPE_DNS_CONFIG_CHANGED",
		11: "NETWORK_EVENT_TYPE_DNS_RESOLUTION_FAILED",
		12: "NETWORK_EVENT_TYPE_ROUTE_ADDED",
		13: "NETWORK_EVENT_TYPE_ROUTE_DELETED",
		14: "NETWORK_EVENT_TYPE_ROUTE_CHANGED",
		15: "NETWORK_EVENT_TYPE_BANDWIDTH_THRESHOLD",
		16: "NETWORK_EVENT_TYPE_PACKET_LOSS_THRESHOLD",
		17: "NETWORK_EVENT_TYPE_LATENCY_THRESHOLD",
	}
	NetworkEventType_value = map[string]int32{
		"NETWORK_EVENT_TYPE_UNSPECIFIED":              0,
		"NETWORK_EVENT_TYPE_INTERFACE_UP":             1,
		"NETWORK_EVENT_TYPE_INTERFACE_DOWN":           2,
		"NETWORK_EVENT_TYPE_INTERFACE_ADDED":          3,
		"NETWORK_EVENT_TYPE_INTERFACE_REMOVED":        4,
		"NETWORK_EVENT_TYPE_INTERFACE_CONFIG_CHANGED": 5,
		"NETWORK_EVENT_TYPE_CONNECTION_ESTABLISHED":   6,
		"NETWORK_EVENT_TYPE_CONNECTION_FAILED":        7,
		"NETWORK_EVENT_TYPE_CONNECTION_LOST":          8,
		"NETWORK_EVENT_TYPE_CONNECTION_TIMEOUT":       9,
		"NETWORK_EVENT_TYPE_DNS_CONFIG_CHANGED":       10,
		"NETWORK_EVENT_TYPE_DNS_RESOLUTION_FAILED":    11,
		"NETWORK_EVENT_TYPE_ROUTE_ADDED":              12,
		"NETWORK_EVENT_TYPE_ROUTE_DELETED":            13,
		"NETWORK_EVENT_TYPE_ROUTE_CHANGED":            14,
		"NETWORK_EVENT_TYPE_BANDWIDTH_THRESHOLD":      15,
		"NETWORK_EVENT_TYPE_PACKET_LOSS_THRESHOLD":    16,
		"NETWORK_EVENT_TYPE_LATENCY_THRESHOLD":        17,
	}
)

func (x NetworkEventType) Enum() *NetworkEventType {
	p := new(NetworkEventType)
	*p = x
	return p
}

func (x NetworkEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NetworkEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_events_events_proto_enumTypes[2].Descriptor()
}

func (NetworkEventType) Type() protoreflect.EnumType {
	return &file_proto_events_events_proto_enumTypes[2]
}

func (x NetworkEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NetworkEventType.Descriptor instead.
func (NetworkEventType) EnumDescriptor() ([]byte, []int) {
	return file_proto_events_events_proto_rawDescGZIP(), []int{2}
}

// SecurityEventType defines security-related event types
type SecurityEventType int32

const (
	SecurityEventType_SECURITY_EVENT_TYPE_UNSPECIFIED SecurityEventType = 0
	// Authentication events
	SecurityEventType_SECURITY_EVENT_TYPE_AUTH_SUCCESS  SecurityEventType = 1
	SecurityEventType_SECURITY_EVENT_TYPE_AUTH_FAILED   SecurityEventType = 2
	SecurityEventType_SECURITY_EVENT_TYPE_AUTH_TIMEOUT  SecurityEventType = 3
	SecurityEventType_SECURITY_EVENT_TYPE_LOGIN_SUCCESS SecurityEventType = 4
	SecurityEventType_SECURITY_EVENT_TYPE_LOGIN_FAILED  SecurityEventType = 5
	SecurityEventType_SECURITY_EVENT_TYPE_LOGOUT        SecurityEventType = 6
	// Authorization events
	SecurityEventType_SECURITY_EVENT_TYPE_PERMISSION_DENIED    SecurityEventType = 7
	SecurityEventType_SECURITY_EVENT_TYPE_PRIVILEGE_ESCALATION SecurityEventType = 8
	SecurityEventType_SECURITY_EVENT_TYPE_UNAUTHORIZED_ACCESS  SecurityEventType = 9
	// Cryptographic events
	SecurityEventType_SECURITY_EVENT_TYPE_KEY_GENERATED       SecurityEventType = 10
	SecurityEventType_SECURITY_EVENT_TYPE_KEY_ROTATED         SecurityEventType = 11
	SecurityEventType_SECURITY_EVENT_TYPE_KEY_EXPIRED         SecurityEventType = 12
	SecurityEventType_SECURITY_EVENT_TYPE_KEY_COMPROMISED     SecurityEventType = 13
	SecurityEventType_SECURITY_EVENT_TYPE_CERTIFICATE_ISSUED  SecurityEventType = 14
	SecurityEventType_SECURITY_EVENT_TYPE_CERTIFICATE_EXPIRED SecurityEventType = 15
	SecurityEventType_SECURITY_EVENT_TYPE_CERTIFICATE_REVOKED SecurityEventType = 16
	// SSH events
	SecurityEventType_SECURITY_EVENT_TYPE_SSH_KEY_ADDED              SecurityEventType = 17
	SecurityEventType_SECURITY_EVENT_TYPE_SSH_KEY_REMOVED            SecurityEventType = 18
	SecurityEventType_SECURITY_EVENT_TYPE_SSH_CONNECTION_ESTABLISHED SecurityEventType = 19
	SecurityEventType_SECURITY_EVENT_TYPE_SSH_CONNECTION_FAILED      SecurityEventType = 20
	// Security violations
	SecurityEventType_SECURITY_EVENT_TYPE_INTRUSION_DETECTED SecurityEventType = 21
	SecurityEventType_SECURITY_EVENT_TYPE_MALWARE_DETECTED   SecurityEventType = 22
	SecurityEventType_SECURITY_EVENT_TYPE_POLICY_VIOLATION   SecurityEventType = 23
)

// Enum value maps for SecurityEventType.
var (
	SecurityEventType_name = map[int32]string{
		0:  "SECURITY_EVENT_TYPE_UNSPECIFIED",
		1:  "SECURITY_EVENT_TYPE_AUTH_SUCCESS",
		2:  "SECURITY_EVENT_TYPE_AUTH_FAILED",
		3:  "SECURITY_EVENT_TYPE_AUTH_TIMEOUT",
		4:  "SECURITY_EVENT_TYPE_LOGIN_SUCCESS",
		5:  "SECURITY_EVENT_TYPE_LOGIN_FAILED",
		6:  "SECURITY_EVENT_TYPE_LOGOUT",
		7:  "SECURITY_EVENT_TYPE_PERMISSION_DENIED",
		8:  "SECURITY_EVENT_TYPE_PRIVILEGE_ESCALATION",
		9:  "SECURITY_EVENT_TYPE_UNAUTHORIZED_ACCESS",
		10: "SECURITY_EVENT_TYPE_KEY_GENERATED",
		11: "SECURITY_EVENT_TYPE_KEY_ROTATED",
		12: "SECURITY_EVENT_TYPE_KEY_EXPIRED",
		13: "SECURITY_EVENT_TYPE_KEY_COMPROMISED",
		14: "SECURITY_EVENT_TYPE_CERTIFICATE_ISSUED",
		15: "SECURITY_EVENT_TYPE_CERTIFICATE_EXPIRED",
		16: "SECURITY_EVENT_TYPE_CERTIFICATE_REVOKED",
		17: "SECURITY_EVENT_TYPE_SSH_KEY_ADDED",
		18: "SECURITY_EVENT_TYPE_SSH_KEY_REMOVED",
		19: "SECURITY_EVENT_TYPE_SSH_CONNECTION_ESTABLISHED",
		20: "SECURITY_EVENT_TYPE_SSH_CONNECTION_FAILED",
		21: "SECURITY_EVENT_TYPE_INTRUSION_DETECTED",
		22: "SECURITY_EVENT_TYPE_MALWARE_DETECTED",
		23: "SECURITY_EVENT_TYPE_POLICY_VIOLATION",
	}
	SecurityEventType_value = map[string]int32{
		"SECURITY_EVENT_TYPE_UNSPECIFIED":                0,
		"SECURITY_EVENT_TYPE_AUTH_SUCCESS":               1,
		"SECURITY_EVENT_TYPE_AUTH_FAILED":                2,
		"SECURITY_EVENT_TYPE_AUTH_TIMEOUT":               3,
		"SECURITY_EVENT_TYPE_LOGIN_SUCCESS":              4,
		"SECURITY_EVENT_TYPE_LOGIN_FAILED":               5,
		"SECURITY_EVENT_TYPE_LOGOUT":                     6,
		"SECURITY_EVENT_TYPE_PERMISSION_DENIED":          7,
		"SECURITY_EVENT_TYPE_PRIVILEGE_ESCALATION":       8,
		"SECURITY_EVENT_TYPE_UNAUTHORIZED_ACCESS":        9,
		"SECURITY_EVENT_TYPE_KEY_GENERATED":              10,
		"SECURITY_EVENT_TYPE_KEY_ROTATED":                11,
		"SECURITY_EVENT_TYPE_KEY_EXPIRED":                12,
		"SECURITY_EVENT_TYPE_KEY_COMPROMISED":            13,
		"SECURITY_EVENT_TYPE_CERTIFICATE_ISSUED":         14,
		"SECURITY_EVENT_TYPE_CERTIFICATE_EXPIRED":        15,
		"SECURITY_EVENT_TYPE_CERTIFICATE_REVOKED":        16,
		"SECURITY_EVENT_TYPE_SSH_KEY_ADDED":              17,
		"SECURITY_EVENT_TYPE_SSH_KEY_REMOVED":            18,
		"SECURITY_EVENT_TYPE_SSH_CONNECTION_ESTABLISHED": 19,
		"SECURITY_EVENT_TYPE_SSH_CONNECTION_FAILED":      20,
		"SECURITY_EVENT_TYPE_INTRUSION_DETECTED":         21,
		"SECURITY_EVENT_TYPE_MALWARE_DETECTED":           22,
		"SECURITY_EVENT_TYPE_POLICY_VIOLATION":           23,
	}
)

func (x SecurityEventType) Enum() *SecurityEventType {
	p := new(SecurityEventType)
	*p = x
	return p
}

func (x SecurityEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SecurityEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_events_events_proto_enumTypes[3].Descriptor()
}

func (SecurityEventType) Type() protoreflect.EnumType {
	return &file_proto_events_events_proto_enumTypes[3]
}

func (x SecurityEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SecurityEventType.Descriptor instead.
func (SecurityEventType) EnumDescriptor() ([]byte, []int) {
	return file_proto_events_events_proto_rawDescGZIP(), []int{3}
}

// ServiceEventType defines service management event types
type ServiceEventType int32

const (
	ServiceEventType_SERVICE_EVENT_TYPE_UNSPECIFIED ServiceEventType = 0
	// Lifecycle events
	ServiceEventType_SERVICE_EVENT_TYPE_STARTED   ServiceEventType = 1
	ServiceEventType_SERVICE_EVENT_TYPE_STOPPED   ServiceEventType = 2
	ServiceEventType_SERVICE_EVENT_TYPE_RESTARTED ServiceEventType = 3
	ServiceEventType_SERVICE_EVENT_TYPE_FAILED    ServiceEventType = 4
	ServiceEventType_SERVICE_EVENT_TYPE_CRASHED   ServiceEventType = 5
	ServiceEventType_SERVICE_EVENT_TYPE_KILLED    ServiceEventType = 6
	// Configuration events
	ServiceEventType_SERVICE_EVENT_TYPE_CONFIG_CHANGED  ServiceEventType = 7
	ServiceEventType_SERVICE_EVENT_TYPE_CONFIG_RELOADED ServiceEventType = 8
	ServiceEventType_SERVICE_EVENT_TYPE_CONFIG_INVALID  ServiceEventType = 9
	// Startup configuration
	ServiceEventType_SERVICE_EVENT_TYPE_ENABLED_AT_STARTUP  ServiceEventType = 10
	ServiceEventType_SERVICE_EVENT_TYPE_DISABLED_AT_STARTUP ServiceEventType = 11
	// Health events
	ServiceEventType_SERVICE_EVENT_TYPE_HEALTH_CHECK_PASSED ServiceEventType = 12
	ServiceEventType_SERVICE_EVENT_TYPE_HEALTH_CHECK_FAILED ServiceEventType = 13
	ServiceEventType_SERVICE_EVENT_TYPE_DEPENDENCY_FAILED   ServiceEventType = 14
)

// Enum value maps for ServiceEventType.
var (
	ServiceEventType_name = map[int32]string{
		0:  "SERVICE_EVENT_TYPE_UNSPECIFIED",
		1:  "SERVICE_EVENT_TYPE_STARTED",
		2:  "SERVICE_EVENT_TYPE_STOPPED",
		3:  "SERVICE_EVENT_TYPE_RESTARTED",
		4:  "SERVICE_EVENT_TYPE_FAILED",
		5:  "SERVICE_EVENT_TYPE_CRASHED",
		6:  "SERVICE_EVENT_TYPE_KILLED",
		7:  "SERVICE_EVENT_TYPE_CONFIG_CHANGED",
		8:  "SERVICE_EVENT_TYPE_CONFIG_RELOADED",
		9:  "SERVICE_EVENT_TYPE_CONFIG_INVALID",
		10: "SERVICE_EVENT_TYPE_ENABLED_AT_STARTUP",
		11: "SERVICE_EVENT_TYPE_DISABLED_AT_STARTUP",
		12: "SERVICE_EVENT_TYPE_HEALTH_CHECK_PASSED",
		13: "SERVICE_EVENT_TYPE_HEALTH_CHECK_FAILED",
		14: "SERVICE_EVENT_TYPE_DEPENDENCY_FAILED",
	}
	ServiceEventType_value = map[string]int32{
		"SERVICE_EVENT_TYPE_UNSPECIFIED":         0,
		"SERVICE_EVENT_TYPE_STARTED":             1,
		"SERVICE_EVENT_TYPE_STOPPED":             2,
		"SERVICE_EVENT_TYPE_RESTARTED":           3,
		"SERVICE_EVENT_TYPE_FAILED":              4,
		"SERVICE_EVENT_TYPE_CRASHED":             5,
		"SERVICE_EVENT_TYPE_KILLED":              6,
		"SERVICE_EVENT_TYPE_CONFIG_CHANGED":      7,
		"SERVICE_EVENT_TYPE_CONFIG_RELOADED":     8,
		"SERVICE_EVENT_TYPE_CONFIG_INVALID":      9,
		"SERVICE_EVENT_TYPE_ENABLED_AT_STARTUP":  10,
		"SERVICE_EVENT_TYPE_DISABLED_AT_STARTUP": 11,
		"SERVICE_EVENT_TYPE_HEALTH_CHECK_PASSED": 12,
		"SERVICE_EVENT_TYPE_HEALTH_CHECK_FAILED": 13,
		"SERVICE_EVENT_TYPE_DEPENDENCY_FAILED":   14,
	}
)

func (x ServiceEventType) Enum() *ServiceEventType {
	p := new(ServiceEventType)
	*p = x
	return p
}

func (x ServiceEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServiceEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_events_events_proto_enumTypes[4].Descriptor()
}

func (ServiceEventType) Type() protoreflect.EnumType {
	return &file_proto_events_events_proto_enumTypes[4]
}

func (x ServiceEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServiceEventType.Descriptor instead.
func (ServiceEventType) EnumDescriptor() ([]byte, []int) {
	return file_proto_events_events_proto_rawDescGZIP(), []int{4}
}

// IdentityEventType defines identity management event types (AD/LDAP)
type IdentityEventType int32

const (
	IdentityEventType_IDENTITY_EVENT_TYPE_UNSPECIFIED IdentityEventType = 0
	// User management
	IdentityEventType_IDENTITY_EVENT_TYPE_USER_CREATED          IdentityEventType = 1
	IdentityEventType_IDENTITY_EVENT_TYPE_USER_UPDATED          IdentityEventType = 2
	IdentityEventType_IDENTITY_EVENT_TYPE_USER_DELETED          IdentityEventType = 3
	IdentityEventType_IDENTITY_EVENT_TYPE_USER_ENABLED          IdentityEventType = 4
	IdentityEventType_IDENTITY_EVENT_TYPE_USER_DISABLED         IdentityEventType = 5
	IdentityEventType_IDENTITY_EVENT_TYPE_USER_PASSWORD_CHANGED IdentityEventType = 6
	IdentityEventType_IDENTITY_EVENT_TYPE_USER_PASSWORD_EXPIRED IdentityEventType = 7
	IdentityEventType_IDENTITY_EVENT_TYPE_USER_LOCKED           IdentityEventType = 8
	IdentityEventType_IDENTITY_EVENT_TYPE_USER_UNLOCKED         IdentityEventType = 9
	// Group management
	IdentityEventType_IDENTITY_EVENT_TYPE_GROUP_CREATED        IdentityEventType = 10
	IdentityEventType_IDENTITY_EVENT_TYPE_GROUP_UPDATED        IdentityEventType = 11
	IdentityEventType_IDENTITY_EVENT_TYPE_GROUP_DELETED        IdentityEventType = 12
	IdentityEventType_IDENTITY_EVENT_TYPE_GROUP_MEMBER_ADDED   IdentityEventType = 13
	IdentityEventType_IDENTITY_EVENT_TYPE_GROUP_MEMBER_REMOVED IdentityEventType = 14
	// Computer/Device management
	IdentityEventType_IDENTITY_EVENT_TYPE_COMPUTER_JOINED   IdentityEventType = 15
	IdentityEventType_IDENTITY_EVENT_TYPE_COMPUTER_LEFT     IdentityEventType = 16
	IdentityEventType_IDENTITY_EVENT_TYPE_COMPUTER_UPDATED  IdentityEventType = 17
	IdentityEventType_IDENTITY_EVENT_TYPE_COMPUTER_DISABLED IdentityEventType = 18
	// Domain operations
	IdentityEventType_IDENTITY_EVENT_TYPE_DOMAIN_SYNC_STARTED            IdentityEventType = 19
	IdentityEventType_IDENTITY_EVENT_TYPE_DOMAIN_SYNC_COMPLETED          IdentityEventType = 20
	IdentityEventType_IDENTITY_EVENT_TYPE_DOMAIN_SYNC_FAILED             IdentityEventType = 21
	IdentityEventType_IDENTITY_EVENT_TYPE_DOMAIN_CONTROLLER_CONNECTED    IdentityEventType = 22
	IdentityEventType_IDENTITY_EVENT_TYPE_DOMAIN_CONTROLLER_DISCONNECTED IdentityEventType = 23
)

// Enum value maps for IdentityEventType.
var (
	IdentityEventType_name = map[int32]string{
		0:  "IDENTITY_EVENT_TYPE_UNSPECIFIED",
		1:  "IDENTITY_EVENT_TYPE_USER_CREATED",
		2:  "IDENTITY_EVENT_TYPE_USER_UPDATED",
		3:  "IDENTITY_EVENT_TYPE_USER_DELETED",
		4:  "IDENTITY_EVENT_TYPE_USER_ENABLED",
		5:  "IDENTITY_EVENT_TYPE_USER_DISABLED",
		6:  "IDENTITY_EVENT_TYPE_USER_PASSWORD_CHANGED",
		7:  "IDENTITY_EVENT_TYPE_USER_PASSWORD_EXPIRED",
		8:  "IDENTITY_EVENT_TYPE_USER_LOCKED",
		9:  "IDENTITY_EVENT_TYPE_USER_UNLOCKED",
		10: "IDENTITY_EVENT_TYPE_GROUP_CREATED",
		11: "IDENTITY_EVENT_TYPE_GROUP_UPDATED",
		12: "IDENTITY_EVENT_TYPE_GROUP_DELETED",
		13: "IDENTITY_EVENT_TYPE_GROUP_MEMBER_ADDED",
		14: "IDENTITY_EVENT_TYPE_GROUP_MEMBER_REMOVED",
		15: "IDENTITY_EVENT_TYPE_COMPUTER_JOINED",
		16: "IDENTITY_EVENT_TYPE_COMPUTER_LEFT",
		17: "IDENTITY_EVENT_TYPE_COMPUTER_UPDATED",
		18: "IDENTITY_EVENT_TYPE_COMPUTER_DISABLED",
		19: "IDENTITY_EVENT_TYPE_DOMAIN_SYNC_STARTED",
		20: "IDENTITY_EVENT_TYPE_DOMAIN_SYNC_COMPLETED",
		21: "IDENTITY_EVENT_TYPE_DOMAIN_SYNC_FAILED",
		22: "IDENTITY_EVENT_TYPE_DOMAIN_CONTROLLER_CONNECTED",
		23: "IDENTITY_EVENT_TYPE_DOMAIN_CONTROLLER_DISCONNECTED",
	}
	IdentityEventType_value = map[string]int32{
		"IDENTITY_EVENT_TYPE_UNSPECIFIED":                    0,
		"IDENTITY_EVENT_TYPE_USER_CREATED":                   1,
		"IDENTITY_EVENT_TYPE_USER_UPDATED":                   2,
		"IDENTITY_EVENT_TYPE_USER_DELETED":                   3,
		"IDENTITY_EVENT_TYPE_USER_ENABLED":                   4,
		"IDENTITY_EVENT_TYPE_USER_DISABLED":                  5,
		"IDENTITY_EVENT_TYPE_USER_PASSWORD_CHANGED":          6,
		"IDENTITY_EVENT_TYPE_USER_PASSWORD_EXPIRED":          7,
		"IDENTITY_EVENT_TYPE_USER_LOCKED":                    8,
		"IDENTITY_EVENT_TYPE_USER_UNLOCKED":                  9,
		"IDENTITY_EVENT_TYPE_GROUP_CREATED":                  10,
		"IDENTITY_EVENT_TYPE_GROUP_UPDATED":                  11,
		"IDENTITY_EVENT_TYPE_GROUP_DELETED":                  12,
		"IDENTITY_EVENT_TYPE_GROUP_MEMBER_ADDED":             13,
		"IDENTITY_EVENT_TYPE_GROUP_MEMBER_REMOVED":           14,
		"IDENTITY_EVENT_TYPE_COMPUTER_JOINED":                15,
		"IDENTITY_EVENT_TYPE_COMPUTER_LEFT":                  16,
		"IDENTITY_EVENT_TYPE_COMPUTER_UPDATED":               17,
		"IDENTITY_EVENT_TYPE_COMPUTER_DISABLED":              18,
		"IDENTITY_EVENT_TYPE_DOMAIN_SYNC_STARTED":            19,
		"IDENTITY_EVENT_TYPE_DOMAIN_SYNC_COMPLETED":          20,
		"IDENTITY_EVENT_TYPE_DOMAIN_SYNC_FAILED":             21,
		"IDENTITY_EVENT_TYPE_DOMAIN_CONTROLLER_CONNECTED":    22,
		"IDENTITY_EVENT_TYPE_DOMAIN_CONTROLLER_DISCONNECTED": 23,
	}
)

func (x IdentityEventType) Enum() *IdentityEventType {
	p := new(IdentityEventType)
	*p = x
	return p
}

func (x IdentityEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IdentityEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_events_events_proto_enumTypes[5].Descriptor()
}

func (IdentityEventType) Type() protoreflect.EnumType {
	return &file_proto_events_events_proto_enumTypes[5]
}

func (x IdentityEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IdentityEventType.Descriptor instead.
func (IdentityEventType) EnumDescriptor() ([]byte, []int) {
	return file_proto_events_events_proto_rawDescGZIP(), []int{5}
}

// AccessEventType defines access control event types (ACL, permissions)
type AccessEventType int32

const (
	AccessEventType_ACCESS_EVENT_TYPE_UNSPECIFIED AccessEventType = 0
	// ACL operations
	AccessEventType_ACCESS_EVENT_TYPE_ACL_CREATED            AccessEventType = 1
	AccessEventType_ACCESS_EVENT_TYPE_ACL_UPDATED            AccessEventType = 2
	AccessEventType_ACCESS_EVENT_TYPE_ACL_DELETED            AccessEventType = 3
	AccessEventType_ACCESS_EVENT_TYPE_ACL_PERMISSION_GRANTED AccessEventType = 4
	AccessEventType_ACCESS_EVENT_TYPE_ACL_PERMISSION_REVOKED AccessEventType = 5
	// Access attempts
	AccessEventType_ACCESS_EVENT_TYPE_FILE_ACCESS_GRANTED      AccessEventType = 6
	AccessEventType_ACCESS_EVENT_TYPE_FILE_ACCESS_DENIED       AccessEventType = 7
	AccessEventType_ACCESS_EVENT_TYPE_DIRECTORY_ACCESS_GRANTED AccessEventType = 8
	AccessEventType_ACCESS_EVENT_TYPE_DIRECTORY_ACCESS_DENIED  AccessEventType = 9
	// Permission changes
	AccessEventType_ACCESS_EVENT_TYPE_OWNERSHIP_CHANGED   AccessEventType = 10
	AccessEventType_ACCESS_EVENT_TYPE_PERMISSIONS_CHANGED AccessEventType = 11
	AccessEventType_ACCESS_EVENT_TYPE_INHERITANCE_CHANGED AccessEventType = 12
	// Security descriptor events
	AccessEventType_ACCESS_EVENT_TYPE_SECURITY_DESCRIPTOR_CHANGED AccessEventType = 13
	AccessEventType_ACCESS_EVENT_TYPE_DEFAULT_ACL_CHANGED         AccessEventType = 14
)

// Enum value maps for AccessEventType.
var (
	AccessEventType_name = map[int32]string{
		0:  "ACCESS_EVENT_TYPE_UNSPECIFIED",
		1:  "ACCESS_EVENT_TYPE_ACL_CREATED",
		2:  "ACCESS_EVENT_TYPE_ACL_UPDATED",
		3:  "ACCESS_EVENT_TYPE_ACL_DELETED",
		4:  "ACCESS_EVENT_TYPE_ACL_PERMISSION_GRANTED",
		5:  "ACCESS_EVENT_TYPE_ACL_PERMISSION_REVOKED",
		6:  "ACCESS_EVENT_TYPE_FILE_ACCESS_GRANTED",
		7:  "ACCESS_EVENT_TYPE_FILE_ACCESS_DENIED",
		8:  "ACCESS_EVENT_TYPE_DIRECTORY_ACCESS_GRANTED",
		9:  "ACCESS_EVENT_TYPE_DIRECTORY_ACCESS_DENIED",
		10: "ACCESS_EVENT_TYPE_OWNERSHIP_CHANGED",
		11: "ACCESS_EVENT_TYPE_PERMISSIONS_CHANGED",
		12: "ACCESS_EVENT_TYPE_INHERITANCE_CHANGED",
		13: "ACCESS_EVENT_TYPE_SECURITY_DESCRIPTOR_CHANGED",
		14: "ACCESS_EVENT_TYPE_DEFAULT_ACL_CHANGED",
	}
	AccessEventType_value = map[string]int32{
		"ACCESS_EVENT_TYPE_UNSPECIFIED":                 0,
		"ACCESS_EVENT_TYPE_ACL_CREATED":                 1,
		"ACCESS_EVENT_TYPE_ACL_UPDATED":                 2,
		"ACCESS_EVENT_TYPE_ACL_DELETED":                 3,
		"ACCESS_EVENT_TYPE_ACL_PERMISSION_GRANTED":      4,
		"ACCESS_EVENT_TYPE_ACL_PERMISSION_REVOKED":      5,
		"ACCESS_EVENT_TYPE_FILE_ACCESS_GRANTED":         6,
		"ACCESS_EVENT_TYPE_FILE_ACCESS_DENIED":          7,
		"ACCESS_EVENT_TYPE_DIRECTORY_ACCESS_GRANTED":    8,
		"ACCESS_EVENT_TYPE_DIRECTORY_ACCESS_DENIED":     9,
		"ACCESS_EVENT_TYPE_OWNERSHIP_CHANGED":           10,
		"ACCESS_EVENT_TYPE_PERMISSIONS_CHANGED":         11,
		"ACCESS_EVENT_TYPE_INHERITANCE_CHANGED":         12,
		"ACCESS_EVENT_TYPE_SECURITY_DESCRIPTOR_CHANGED": 13,
		"ACCESS_EVENT_TYPE_DEFAULT_ACL_CHANGED":         14,
	}
)

func (x AccessEventType) Enum() *AccessEventType {
	p := new(AccessEventType)
	*p = x
	return p
}

func (x AccessEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccessEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_events_events_proto_enumTypes[6].Descriptor()
}

func (AccessEventType) Type() protoreflect.EnumType {
	return &file_proto_events_events_proto_enumTypes[6]
}

func (x AccessEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccessEventType.Descriptor instead.
func (AccessEventType) EnumDescriptor() ([]byte, []int) {
	return file_proto_events_events_proto_rawDescGZIP(), []int{6}
}

// SharingEventType defines file sharing event types (SMB, NFS)
type SharingEventType int32

const (
	SharingEventType_SHARING_EVENT_TYPE_UNSPECIFIED SharingEventType = 0
	// Share lifecycle
	SharingEventType_SHARING_EVENT_TYPE_SHARE_CREATED  SharingEventType = 1
	SharingEventType_SHARING_EVENT_TYPE_SHARE_UPDATED  SharingEventType = 2
	SharingEventType_SHARING_EVENT_TYPE_SHARE_DELETED  SharingEventType = 3
	SharingEventType_SHARING_EVENT_TYPE_SHARE_ENABLED  SharingEventType = 4
	SharingEventType_SHARING_EVENT_TYPE_SHARE_DISABLED SharingEventType = 5
	// SMB specific events
	SharingEventType_SHARING_EVENT_TYPE_SMB_SHARE_CONNECTED     SharingEventType = 6
	SharingEventType_SHARING_EVENT_TYPE_SMB_SHARE_DISCONNECTED  SharingEventType = 7
	SharingEventType_SHARING_EVENT_TYPE_SMB_SESSION_ESTABLISHED SharingEventType = 8
	SharingEventType_SHARING_EVENT_TYPE_SMB_SESSION_TERMINATED  SharingEventType = 9
	SharingEventType_SHARING_EVENT_TYPE_SMB_FILE_OPENED         SharingEventType = 10
	SharingEventType_SHARING_EVENT_TYPE_SMB_FILE_CLOSED         SharingEventType = 11
	// NFS specific events
	SharingEventType_SHARING_EVENT_TYPE_NFS_EXPORT_CREATED SharingEventType = 12
	SharingEventType_SHARING_EVENT_TYPE_NFS_EXPORT_DELETED SharingEventType = 13
	SharingEventType_SHARING_EVENT_TYPE_NFS_MOUNT          SharingEventType = 14
	SharingEventType_SHARING_EVENT_TYPE_NFS_UNMOUNT        SharingEventType = 15
	// Access and security
	SharingEventType_SHARING_EVENT_TYPE_SHARE_ACCESS_GRANTED SharingEventType = 16
	SharingEventType_SHARING_EVENT_TYPE_SHARE_ACCESS_DENIED  SharingEventType = 17
	SharingEventType_SHARING_EVENT_TYPE_QUOTA_EXCEEDED       SharingEventType = 18
	// Performance and monitoring
	SharingEventType_SHARING_EVENT_TYPE_CONNECTION_LIMIT_REACHED SharingEventType = 19
	SharingEventType_SHARING_EVENT_TYPE_BANDWIDTH_THRESHOLD      SharingEventType = 20
)

// Enum value maps for SharingEventType.
var (
	SharingEventType_name = map[int32]string{
		0:  "SHARING_EVENT_TYPE_UNSPECIFIED",
		1:  "SHARING_EVENT_TYPE_SHARE_CREATED",
		2:  "SHARING_EVENT_TYPE_SHARE_UPDATED",
		3:  "SHARING_EVENT_TYPE_SHARE_DELETED",
		4:  "SHARING_EVENT_TYPE_SHARE_ENABLED",
		5:  "SHARING_EVENT_TYPE_SHARE_DISABLED",
		6:  "SHARING_EVENT_TYPE_SMB_SHARE_CONNECTED",
		7:  "SHARING_EVENT_TYPE_SMB_SHARE_DISCONNECTED",
		8:  "SHARING_EVENT_TYPE_SMB_SESSION_ESTABLISHED",
		9:  "SHARING_EVENT_TYPE_SMB_SESSION_TERMINATED",
		10: "SHARING_EVENT_TYPE_SMB_FILE_OPENED",
		11: "SHARING_EVENT_TYPE_SMB_FILE_CLOSED",
		12: "SHARING_EVENT_TYPE_NFS_EXPORT_CREATED",
		13: "SHARING_EVENT_TYPE_NFS_EXPORT_DELETED",
		14: "SHARING_EVENT_TYPE_NFS_MOUNT",
		15: "SHARING_EVENT_TYPE_NFS_UNMOUNT",
		16: "SHARING_EVENT_TYPE_SHARE_ACCESS_GRANTED",
		17: "SHARING_EVENT_TYPE_SHARE_ACCESS_DENIED",
		18: "SHARING_EVENT_TYPE_QUOTA_EXCEEDED",
		19: "SHARING_EVENT_TYPE_CONNECTION_LIMIT_REACHED",
		20: "SHARING_EVENT_TYPE_BANDWIDTH_THRESHOLD",
	}
	SharingEventType_value = map[string]int32{
		"SHARING_EVENT_TYPE_UNSPECIFIED":              0,
		"SHARING_EVENT_TYPE_SHARE_CREATED":            1,
		"SHARING_EVENT_TYPE_SHARE_UPDATED":            2,
		"SHARING_EVENT_TYPE_SHARE_DELETED":            3,
		"SHARING_EVENT_TYPE_SHARE_ENABLED":            4,
		"SHARING_EVENT_TYPE_SHARE_DISABLED":           5,
		"SHARING_EVENT_TYPE_SMB_SHARE_CONNECTED":      6,
		"SHARING_EVENT_TYPE_SMB_SHARE_DISCONNECTED":   7,
		"SHARING_EVENT_TYPE_SMB_SESSION_ESTABLISHED":  8,
		"SHARING_EVENT_TYPE_SMB_SESSION_TERMINATED":   9,
		"SHARING_EVENT_TYPE_SMB_FILE_OPENED":          10,
		"SHARING_EVENT_TYPE_SMB_FILE_CLOSED":          11,
		"SHARING_EVENT_TYPE_NFS_EXPORT_CREATED":       12,
		"SHARING_EVENT_TYPE_NFS_EXPORT_DELETED":       13,
		"SHARING_EVENT_TYPE_NFS_MOUNT":                14,
		"SHARING_EVENT_TYPE_NFS_UNMOUNT":              15,
		"SHARING_EVENT_TYPE_SHARE_ACCESS_GRANTED":     16,
		"SHARING_EVENT_TYPE_SHARE_ACCESS_DENIED":      17,
		"SHARING_EVENT_TYPE_QUOTA_EXCEEDED":           18,
		"SHARING_EVENT_TYPE_CONNECTION_LIMIT_REACHED": 19,
		"SHARING_EVENT_TYPE_BANDWIDTH_THRESHOLD":      20,
	}
)

func (x SharingEventType) Enum() *SharingEventType {
	p := new(SharingEventType)
	*p = x
	return p
}

func (x SharingEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SharingEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_events_events_proto_enumTypes[7].Descriptor()
}

func (SharingEventType) Type() protoreflect.EnumType {
	return &file_proto_events_events_proto_enumTypes[7]
}

func (x SharingEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SharingEventType.Descriptor instead.
func (SharingEventType) EnumDescriptor() ([]byte, []int) {
	return file_proto_events_events_proto_rawDescGZIP(), []int{7}
}

// System event payloads
type SystemStartupPayload struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Version         string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	BootTimeSeconds int64                  `protobuf:"varint,2,opt,name=boot_time_seconds,json=bootTimeSeconds,proto3" json:"boot_time_seconds,omitempty"`
	Hostname        string                 `protobuf:"bytes,3,opt,name=hostname,proto3" json:"hostname,omitempty"`
	ServicesStarted []string               `protobuf:"bytes,4,rep,name=services_started,json=servicesStarted,proto3" json:"services_started,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SystemStartupPayload) Reset() {
	*x = SystemStartupPayload{}
	mi := &file_proto_events_events_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemStartupPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemStartupPayload) ProtoMessage() {}

func (x *SystemStartupPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_events_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemStartupPayload.ProtoReflect.Descriptor instead.
func (*SystemStartupPayload) Descriptor() ([]byte, []int) {
	return file_proto_events_events_proto_rawDescGZIP(), []int{0}
}

func (x *SystemStartupPayload) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *SystemStartupPayload) GetBootTimeSeconds() int64 {
	if x != nil {
		return x.BootTimeSeconds
	}
	return 0
}

func (x *SystemStartupPayload) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *SystemStartupPayload) GetServicesStarted() []string {
	if x != nil {
		return x.ServicesStarted
	}
	return nil
}

type SystemConfigChangePayload struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	ConfigFile         string                 `protobuf:"bytes,1,opt,name=config_file,json=configFile,proto3" json:"config_file,omitempty"`
	ChangedBy          string                 `protobuf:"bytes,2,opt,name=changed_by,json=changedBy,proto3" json:"changed_by,omitempty"`
	ChangeType         string                 `protobuf:"bytes,3,opt,name=change_type,json=changeType,proto3" json:"change_type,omitempty"` // created, modified, deleted
	AffectedComponents []string               `protobuf:"bytes,4,rep,name=affected_components,json=affectedComponents,proto3" json:"affected_components,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *SystemConfigChangePayload) Reset() {
	*x = SystemConfigChangePayload{}
	mi := &file_proto_events_events_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemConfigChangePayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemConfigChangePayload) ProtoMessage() {}

func (x *SystemConfigChangePayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_events_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemConfigChangePayload.ProtoReflect.Descriptor instead.
func (*SystemConfigChangePayload) Descriptor() ([]byte, []int) {
	return file_proto_events_events_proto_rawDescGZIP(), []int{1}
}

func (x *SystemConfigChangePayload) GetConfigFile() string {
	if x != nil {
		return x.ConfigFile
	}
	return ""
}

func (x *SystemConfigChangePayload) GetChangedBy() string {
	if x != nil {
		return x.ChangedBy
	}
	return ""
}

func (x *SystemConfigChangePayload) GetChangeType() string {
	if x != nil {
		return x.ChangeType
	}
	return ""
}

func (x *SystemConfigChangePayload) GetAffectedComponents() []string {
	if x != nil {
		return x.AffectedComponents
	}
	return nil
}

type SystemUserPayload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	FullName      string                 `protobuf:"bytes,2,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	Groups        []string               `protobuf:"bytes,3,rep,name=groups,proto3" json:"groups,omitempty"`
	Shell         string                 `protobuf:"bytes,4,opt,name=shell,proto3" json:"shell,omitempty"`
	HomeDir       string                 `protobuf:"bytes,5,opt,name=home_dir,json=homeDir,proto3" json:"home_dir,omitempty"`
	CreateHome    bool                   `protobuf:"varint,6,opt,name=create_home,json=createHome,proto3" json:"create_home,omitempty"`
	SystemUser    bool                   `protobuf:"varint,7,opt,name=system_user,json=systemUser,proto3" json:"system_user,omitempty"`
	Uid           int32                  `protobuf:"varint,8,opt,name=uid,proto3" json:"uid,omitempty"`
	Gid           int32                  `protobuf:"varint,9,opt,name=gid,proto3" json:"gid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemUserPayload) Reset() {
	*x = SystemUserPayload{}
	mi := &file_proto_events_events_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemUserPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemUserPayload) ProtoMessage() {}

func (x *SystemUserPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_events_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemUserPayload.ProtoReflect.Descriptor instead.
func (*SystemUserPayload) Descriptor() ([]byte, []int) {
	return file_proto_events_events_proto_rawDescGZIP(), []int{2}
}

func (x *SystemUserPayload) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SystemUserPayload) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *SystemUserPayload) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *SystemUserPayload) GetShell() string {
	if x != nil {
		return x.Shell
	}
	return ""
}

func (x *SystemUserPayload) GetHomeDir() string {
	if x != nil {
		return x.HomeDir
	}
	return ""
}

func (x *SystemUserPayload) GetCreateHome() bool {
	if x != nil {
		return x.CreateHome
	}
	return false
}

func (x *SystemUserPayload) GetSystemUser() bool {
	if x != nil {
		return x.SystemUser
	}
	return false
}

func (x *SystemUserPayload) GetUid() int32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *SystemUserPayload) GetGid() int32 {
	if x != nil {
		return x.Gid
	}
	return 0
}

// Storage event payloads
type StoragePoolPayload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PoolName      string                 `protobuf:"bytes,1,opt,name=pool_name,json=poolName,proto3" json:"pool_name,omitempty"`
	PoolState     string                 `protobuf:"bytes,2,opt,name=pool_state,json=poolState,proto3" json:"pool_state,omitempty"`
	PoolGuid      string                 `protobuf:"bytes,3,opt,name=pool_guid,json=poolGuid,proto3" json:"pool_guid,omitempty"`
	TotalSize     int64                  `protobuf:"varint,4,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	UsedSize      int64                  `protobuf:"varint,5,opt,name=used_size,json=usedSize,proto3" json:"used_size,omitempty"`
	AvailableSize int64                  `protobuf:"varint,6,opt,name=available_size,json=availableSize,proto3" json:"available_size,omitempty"`
	HealthStatus  string                 `protobuf:"bytes,7,opt,name=health_status,json=healthStatus,proto3" json:"health_status,omitempty"`
	Vdevs         []string               `protobuf:"bytes,8,rep,name=vdevs,proto3" json:"vdevs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoragePoolPayload) Reset() {
	*x = StoragePoolPayload{}
	mi := &file_proto_events_events_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoragePoolPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoragePoolPayload) ProtoMessage() {}

func (x *StoragePoolPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_events_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoragePoolPayload.ProtoReflect.Descriptor instead.
func (*StoragePoolPayload) Descriptor() ([]byte, []int) {
	return file_proto_events_events_proto_rawDescGZIP(), []int{3}
}

func (x *StoragePoolPayload) GetPoolName() string {
	if x != nil {
		return x.PoolName
	}
	return ""
}

func (x *StoragePoolPayload) GetPoolState() string {
	if x != nil {
		return x.PoolState
	}
	return ""
}

func (x *StoragePoolPayload) GetPoolGuid() string {
	if x != nil {
		return x.PoolGuid
	}
	return ""
}

func (x *StoragePoolPayload) GetTotalSize() int64 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *StoragePoolPayload) GetUsedSize() int64 {
	if x != nil {
		return x.UsedSize
	}
	return 0
}

func (x *StoragePoolPayload) GetAvailableSize() int64 {
	if x != nil {
		return x.AvailableSize
	}
	return 0
}

func (x *StoragePoolPayload) GetHealthStatus() string {
	if x != nil {
		return x.HealthStatus
	}
	return ""
}

func (x *StoragePoolPayload) GetVdevs() []string {
	if x != nil {
		return x.Vdevs
	}
	return nil
}

type StorageDatasetPayload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DatasetName   string                 `protobuf:"bytes,1,opt,name=dataset_name,json=datasetName,proto3" json:"dataset_name,omitempty"`
	PoolName      string                 `protobuf:"bytes,2,opt,name=pool_name,json=poolName,proto3" json:"pool_name,omitempty"`
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"` // filesystem, volume
	Used          int64                  `protobuf:"varint,4,opt,name=used,proto3" json:"used,omitempty"`
	Available     int64                  `protobuf:"varint,5,opt,name=available,proto3" json:"available,omitempty"`
	Referenced    int64                  `protobuf:"varint,6,opt,name=referenced,proto3" json:"referenced,omitempty"`
	Mountpoint    string                 `protobuf:"bytes,7,opt,name=mountpoint,proto3" json:"mountpoint,omitempty"`
	Properties    map[string]string      `protobuf:"bytes,8,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StorageDatasetPayload) Reset() {
	*x = StorageDatasetPayload{}
	mi := &file_proto_events_events_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageDatasetPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageDatasetPayload) ProtoMessage() {}

func (x *StorageDatasetPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_events_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageDatasetPayload.ProtoReflect.Descriptor instead.
func (*StorageDatasetPayload) Descriptor() ([]byte, []int) {
	return file_proto_events_events_proto_rawDescGZIP(), []int{4}
}

func (x *StorageDatasetPayload) GetDatasetName() string {
	if x != nil {
		return x.DatasetName
	}
	return ""
}

func (x *StorageDatasetPayload) GetPoolName() string {
	if x != nil {
		return x.PoolName
	}
	return ""
}

func (x *StorageDatasetPayload) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *StorageDatasetPayload) GetUsed() int64 {
	if x != nil {
		return x.Used
	}
	return 0
}

func (x *StorageDatasetPayload) GetAvailable() int64 {
	if x != nil {
		return x.Available
	}
	return 0
}

func (x *StorageDatasetPayload) GetReferenced() int64 {
	if x != nil {
		return x.Referenced
	}
	return 0
}

func (x *StorageDatasetPayload) GetMountpoint() string {
	if x != nil {
		return x.Mountpoint
	}
	return ""
}

func (x *StorageDatasetPayload) GetProperties() map[string]string {
	if x != nil {
		return x.Properties
	}
	return nil
}

type StorageSnapshotPayload struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SnapshotName   string                 `protobuf:"bytes,1,opt,name=snapshot_name,json=snapshotName,proto3" json:"snapshot_name,omitempty"`
	DatasetName    string                 `protobuf:"bytes,2,opt,name=dataset_name,json=datasetName,proto3" json:"dataset_name,omitempty"`
	CreationTime   int64                  `protobuf:"varint,3,opt,name=creation_time,json=creationTime,proto3" json:"creation_time,omitempty"`
	UsedSize       int64                  `protobuf:"varint,4,opt,name=used_size,json=usedSize,proto3" json:"used_size,omitempty"`
	ReferencedSize int64                  `protobuf:"varint,5,opt,name=referenced_size,json=referencedSize,proto3" json:"referenced_size,omitempty"`
	Recursive      bool                   `protobuf:"varint,6,opt,name=recursive,proto3" json:"recursive,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *StorageSnapshotPayload) Reset() {
	*x = StorageSnapshotPayload{}
	mi := &file_proto_events_events_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageSnapshotPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageSnapshotPayload) ProtoMessage() {}

func (x *StorageSnapshotPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_events_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageSnapshotPayload.ProtoReflect.Descriptor instead.
func (*StorageSnapshotPayload) Descriptor() ([]byte, []int) {
	return file_proto_events_events_proto_rawDescGZIP(), []int{5}
}

func (x *StorageSnapshotPayload) GetSnapshotName() string {
	if x != nil {
		return x.SnapshotName
	}
	return ""
}

func (x *StorageSnapshotPayload) GetDatasetName() string {
	if x != nil {
		return x.DatasetName
	}
	return ""
}

func (x *StorageSnapshotPayload) GetCreationTime() int64 {
	if x != nil {
		return x.CreationTime
	}
	return 0
}

func (x *StorageSnapshotPayload) GetUsedSize() int64 {
	if x != nil {
		return x.UsedSize
	}
	return 0
}

func (x *StorageSnapshotPayload) GetReferencedSize() int64 {
	if x != nil {
		return x.ReferencedSize
	}
	return 0
}

func (x *StorageSnapshotPayload) GetRecursive() bool {
	if x != nil {
		return x.Recursive
	}
	return false
}

type StorageTransferPayload struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	TransferId       string                 `protobuf:"bytes,1,opt,name=transfer_id,json=transferId,proto3" json:"transfer_id,omitempty"`
	Operation        string                 `protobuf:"bytes,2,opt,name=operation,proto3" json:"operation,omitempty"` // send, receive, send_receive
	SourceSnapshot   string                 `protobuf:"bytes,3,opt,name=source_snapshot,json=sourceSnapshot,proto3" json:"source_snapshot,omitempty"`
	TargetDataset    string                 `protobuf:"bytes,4,opt,name=target_dataset,json=targetDataset,proto3" json:"target_dataset,omitempty"`
	Status           string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	Error            string                 `protobuf:"bytes,6,opt,name=error,proto3" json:"error,omitempty"`
	DurationSeconds  int64                  `protobuf:"varint,7,opt,name=duration_seconds,json=durationSeconds,proto3" json:"duration_seconds,omitempty"`
	BytesTransferred int64                  `protobuf:"varint,8,opt,name=bytes_transferred,json=bytesTransferred,proto3" json:"bytes_transferred,omitempty"`
	TransferRate     int64                  `protobuf:"varint,9,opt,name=transfer_rate,json=transferRate,proto3" json:"transfer_rate,omitempty"`
	RemoteHost       string                 `protobuf:"bytes,10,opt,name=remote_host,json=remoteHost,proto3" json:"remote_host,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *StorageTransferPayload) Reset() {
	*x = StorageTransferPayload{}
	mi := &file_proto_events_events_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageTransferPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageTransferPayload) ProtoMessage() {}

func (x *StorageTransferPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_events_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageTransferPayload.ProtoReflect.Descriptor instead.
func (*StorageTransferPayload) Descriptor() ([]byte, []int) {
	return file_proto_events_events_proto_rawDescGZIP(), []int{6}
}

func (x *StorageTransferPayload) GetTransferId() string {
	if x != nil {
		return x.TransferId
	}
	return ""
}

func (x *StorageTransferPayload) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

func (x *StorageTransferPayload) GetSourceSnapshot() string {
	if x != nil {
		return x.SourceSnapshot
	}
	return ""
}

func (x *StorageTransferPayload) GetTargetDataset() string {
	if x != nil {
		return x.TargetDataset
	}
	return ""
}

func (x *StorageTransferPayload) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *StorageTransferPayload) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *StorageTransferPayload) GetDurationSeconds() int64 {
	if x != nil {
		return x.DurationSeconds
	}
	return 0
}

func (x *StorageTransferPayload) GetBytesTransferred() int64 {
	if x != nil {
		return x.BytesTransferred
	}
	return 0
}

func (x *StorageTransferPayload) GetTransferRate() int64 {
	if x != nil {
		return x.TransferRate
	}
	return 0
}

func (x *StorageTransferPayload) GetRemoteHost() string {
	if x != nil {
		return x.RemoteHost
	}
	return ""
}

// Network event payloads
type NetworkInterfacePayload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	InterfaceName string                 `protobuf:"bytes,1,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	InterfaceType string                 `protobuf:"bytes,2,opt,name=interface_type,json=interfaceType,proto3" json:"interface_type,omitempty"` // ethernet, wifi, bond, vlan
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`                                    // up, down
	IpAddress     string                 `protobuf:"bytes,4,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	Netmask       string                 `protobuf:"bytes,5,opt,name=netmask,proto3" json:"netmask,omitempty"`
	Gateway       string                 `protobuf:"bytes,6,opt,name=gateway,proto3" json:"gateway,omitempty"`
	MacAddress    string                 `protobuf:"bytes,7,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	RxBytes       int64                  `protobuf:"varint,8,opt,name=rx_bytes,json=rxBytes,proto3" json:"rx_bytes,omitempty"`
	TxBytes       int64                  `protobuf:"varint,9,opt,name=tx_bytes,json=txBytes,proto3" json:"tx_bytes,omitempty"`
	Mtu           int32                  `protobuf:"varint,10,opt,name=mtu,proto3" json:"mtu,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkInterfacePayload) Reset() {
	*x = NetworkInterfacePayload{}
	mi := &file_proto_events_events_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkInterfacePayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkInterfacePayload) ProtoMessage() {}

func (x *NetworkInterfacePayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_events_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkInterfacePayload.ProtoReflect.Descriptor instead.
func (*NetworkInterfacePayload) Descriptor() ([]byte, []int) {
	return file_proto_events_events_proto_rawDescGZIP(), []int{7}
}

func (x *NetworkInterfacePayload) GetInterfaceName() string {
	if x != nil {
		return x.InterfaceName
	}
	return ""
}

func (x *NetworkInterfacePayload) GetInterfaceType() string {
	if x != nil {
		return x.InterfaceType
	}
	return ""
}

func (x *NetworkInterfacePayload) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *NetworkInterfacePayload) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *NetworkInterfacePayload) GetNetmask() string {
	if x != nil {
		return x.Netmask
	}
	return ""
}

func (x *NetworkInterfacePayload) GetGateway() string {
	if x != nil {
		return x.Gateway
	}
	return ""
}

func (x *NetworkInterfacePayload) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *NetworkInterfacePayload) GetRxBytes() int64 {
	if x != nil {
		return x.RxBytes
	}
	return 0
}

func (x *NetworkInterfacePayload) GetTxBytes() int64 {
	if x != nil {
		return x.TxBytes
	}
	return 0
}

func (x *NetworkInterfacePayload) GetMtu() int32 {
	if x != nil {
		return x.Mtu
	}
	return 0
}

type NetworkConnectionPayload struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	SourceIp        string                 `protobuf:"bytes,1,opt,name=source_ip,json=sourceIp,proto3" json:"source_ip,omitempty"`
	DestinationIp   string                 `protobuf:"bytes,2,opt,name=destination_ip,json=destinationIp,proto3" json:"destination_ip,omitempty"`
	SourcePort      int32                  `protobuf:"varint,3,opt,name=source_port,json=sourcePort,proto3" json:"source_port,omitempty"`
	DestinationPort int32                  `protobuf:"varint,4,opt,name=destination_port,json=destinationPort,proto3" json:"destination_port,omitempty"`
	Protocol        string                 `protobuf:"bytes,5,opt,name=protocol,proto3" json:"protocol,omitempty"`
	ConnectionType  string                 `protobuf:"bytes,6,opt,name=connection_type,json=connectionType,proto3" json:"connection_type,omitempty"` // tcp, udp, icmp
	Status          string                 `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	DurationMs      int64                  `protobuf:"varint,8,opt,name=duration_ms,json=durationMs,proto3" json:"duration_ms,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *NetworkConnectionPayload) Reset() {
	*x = NetworkConnectionPayload{}
	mi := &file_proto_events_events_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkConnectionPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkConnectionPayload) ProtoMessage() {}

func (x *NetworkConnectionPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_events_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkConnectionPayload.ProtoReflect.Descriptor instead.
func (*NetworkConnectionPayload) Descriptor() ([]byte, []int) {
	return file_proto_events_events_proto_rawDescGZIP(), []int{8}
}

func (x *NetworkConnectionPayload) GetSourceIp() string {
	if x != nil {
		return x.SourceIp
	}
	return ""
}

func (x *NetworkConnectionPayload) GetDestinationIp() string {
	if x != nil {
		return x.DestinationIp
	}
	return ""
}

func (x *NetworkConnectionPayload) GetSourcePort() int32 {
	if x != nil {
		return x.SourcePort
	}
	return 0
}

func (x *NetworkConnectionPayload) GetDestinationPort() int32 {
	if x != nil {
		return x.DestinationPort
	}
	return 0
}

func (x *NetworkConnectionPayload) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *NetworkConnectionPayload) GetConnectionType() string {
	if x != nil {
		return x.ConnectionType
	}
	return ""
}

func (x *NetworkConnectionPayload) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *NetworkConnectionPayload) GetDurationMs() int64 {
	if x != nil {
		return x.DurationMs
	}
	return 0
}

// Security event payloads
type SecurityAuthPayload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	IpAddress     string                 `protobuf:"bytes,2,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	Method        string                 `protobuf:"bytes,3,opt,name=method,proto3" json:"method,omitempty"` // password, key, certificate
	Reason        string                 `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"` // invalid_credentials, account_locked, etc.
	Resource      string                 `protobuf:"bytes,5,opt,name=resource,proto3" json:"resource,omitempty"`
	UserAgent     string                 `protobuf:"bytes,6,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`
	AttemptCount  int32                  `protobuf:"varint,7,opt,name=attempt_count,json=attemptCount,proto3" json:"attempt_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SecurityAuthPayload) Reset() {
	*x = SecurityAuthPayload{}
	mi := &file_proto_events_events_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SecurityAuthPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecurityAuthPayload) ProtoMessage() {}

func (x *SecurityAuthPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_events_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecurityAuthPayload.ProtoReflect.Descriptor instead.
func (*SecurityAuthPayload) Descriptor() ([]byte, []int) {
	return file_proto_events_events_proto_rawDescGZIP(), []int{9}
}

func (x *SecurityAuthPayload) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SecurityAuthPayload) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *SecurityAuthPayload) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *SecurityAuthPayload) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *SecurityAuthPayload) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *SecurityAuthPayload) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

func (x *SecurityAuthPayload) GetAttemptCount() int32 {
	if x != nil {
		return x.AttemptCount
	}
	return 0
}

type SecurityKeyPayload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	KeyId         string                 `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	KeyType       string                 `protobuf:"bytes,2,opt,name=key_type,json=keyType,proto3" json:"key_type,omitempty"` // rsa, ed25519, ecdsa
	Algorithm     string                 `protobuf:"bytes,3,opt,name=algorithm,proto3" json:"algorithm,omitempty"`
	KeySize       int32                  `protobuf:"varint,4,opt,name=key_size,json=keySize,proto3" json:"key_size,omitempty"`
	Fingerprint   string                 `protobuf:"bytes,5,opt,name=fingerprint,proto3" json:"fingerprint,omitempty"`
	ExpiryTime    int64                  `protobuf:"varint,6,opt,name=expiry_time,json=expiryTime,proto3" json:"expiry_time,omitempty"`
	CreatedBy     string                 `protobuf:"bytes,7,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	Purpose       string                 `protobuf:"bytes,8,opt,name=purpose,proto3" json:"purpose,omitempty"` // ssh, tls, signing
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SecurityKeyPayload) Reset() {
	*x = SecurityKeyPayload{}
	mi := &file_proto_events_events_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SecurityKeyPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecurityKeyPayload) ProtoMessage() {}

func (x *SecurityKeyPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_events_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecurityKeyPayload.ProtoReflect.Descriptor instead.
func (*SecurityKeyPayload) Descriptor() ([]byte, []int) {
	return file_proto_events_events_proto_rawDescGZIP(), []int{10}
}

func (x *SecurityKeyPayload) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *SecurityKeyPayload) GetKeyType() string {
	if x != nil {
		return x.KeyType
	}
	return ""
}

func (x *SecurityKeyPayload) GetAlgorithm() string {
	if x != nil {
		return x.Algorithm
	}
	return ""
}

func (x *SecurityKeyPayload) GetKeySize() int32 {
	if x != nil {
		return x.KeySize
	}
	return 0
}

func (x *SecurityKeyPayload) GetFingerprint() string {
	if x != nil {
		return x.Fingerprint
	}
	return ""
}

func (x *SecurityKeyPayload) GetExpiryTime() int64 {
	if x != nil {
		return x.ExpiryTime
	}
	return 0
}

func (x *SecurityKeyPayload) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *SecurityKeyPayload) GetPurpose() string {
	if x != nil {
		return x.Purpose
	}
	return ""
}

type SecurityCertificatePayload struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	CertificateId      string                 `protobuf:"bytes,1,opt,name=certificate_id,json=certificateId,proto3" json:"certificate_id,omitempty"`
	Subject            string                 `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject,omitempty"`
	Issuer             string                 `protobuf:"bytes,3,opt,name=issuer,proto3" json:"issuer,omitempty"`
	SerialNumber       string                 `protobuf:"bytes,4,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	SanEntries         []string               `protobuf:"bytes,5,rep,name=san_entries,json=sanEntries,proto3" json:"san_entries,omitempty"`
	NotBefore          int64                  `protobuf:"varint,6,opt,name=not_before,json=notBefore,proto3" json:"not_before,omitempty"`
	NotAfter           int64                  `protobuf:"varint,7,opt,name=not_after,json=notAfter,proto3" json:"not_after,omitempty"`
	SignatureAlgorithm string                 `protobuf:"bytes,8,opt,name=signature_algorithm,json=signatureAlgorithm,proto3" json:"signature_algorithm,omitempty"`
	IsCa               bool                   `protobuf:"varint,9,opt,name=is_ca,json=isCa,proto3" json:"is_ca,omitempty"`
	KeyUsage           string                 `protobuf:"bytes,10,opt,name=key_usage,json=keyUsage,proto3" json:"key_usage,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *SecurityCertificatePayload) Reset() {
	*x = SecurityCertificatePayload{}
	mi := &file_proto_events_events_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SecurityCertificatePayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecurityCertificatePayload) ProtoMessage() {}

func (x *SecurityCertificatePayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_events_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecurityCertificatePayload.ProtoReflect.Descriptor instead.
func (*SecurityCertificatePayload) Descriptor() ([]byte, []int) {
	return file_proto_events_events_proto_rawDescGZIP(), []int{11}
}

func (x *SecurityCertificatePayload) GetCertificateId() string {
	if x != nil {
		return x.CertificateId
	}
	return ""
}

func (x *SecurityCertificatePayload) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *SecurityCertificatePayload) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *SecurityCertificatePayload) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *SecurityCertificatePayload) GetSanEntries() []string {
	if x != nil {
		return x.SanEntries
	}
	return nil
}

func (x *SecurityCertificatePayload) GetNotBefore() int64 {
	if x != nil {
		return x.NotBefore
	}
	return 0
}

func (x *SecurityCertificatePayload) GetNotAfter() int64 {
	if x != nil {
		return x.NotAfter
	}
	return 0
}

func (x *SecurityCertificatePayload) GetSignatureAlgorithm() string {
	if x != nil {
		return x.SignatureAlgorithm
	}
	return ""
}

func (x *SecurityCertificatePayload) GetIsCa() bool {
	if x != nil {
		return x.IsCa
	}
	return false
}

func (x *SecurityCertificatePayload) GetKeyUsage() string {
	if x != nil {
		return x.KeyUsage
	}
	return ""
}

// Service event payloads
type ServiceStatusPayload struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ServiceName      string                 `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	Status           string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"` // running, stopped, failed, starting, stopping
	Version          string                 `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Pid              int32                  `protobuf:"varint,4,opt,name=pid,proto3" json:"pid,omitempty"`
	ConfigPath       string                 `protobuf:"bytes,5,opt,name=config_path,json=configPath,proto3" json:"config_path,omitempty"`
	Error            string                 `protobuf:"bytes,6,opt,name=error,proto3" json:"error,omitempty"`
	UptimeSeconds    int64                  `protobuf:"varint,7,opt,name=uptime_seconds,json=uptimeSeconds,proto3" json:"uptime_seconds,omitempty"`
	MemoryUsageBytes int64                  `protobuf:"varint,8,opt,name=memory_usage_bytes,json=memoryUsageBytes,proto3" json:"memory_usage_bytes,omitempty"`
	CpuUsagePercent  float64                `protobuf:"fixed64,9,opt,name=cpu_usage_percent,json=cpuUsagePercent,proto3" json:"cpu_usage_percent,omitempty"`
	EnabledAtStartup bool                   `protobuf:"varint,10,opt,name=enabled_at_startup,json=enabledAtStartup,proto3" json:"enabled_at_startup,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ServiceStatusPayload) Reset() {
	*x = ServiceStatusPayload{}
	mi := &file_proto_events_events_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceStatusPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceStatusPayload) ProtoMessage() {}

func (x *ServiceStatusPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_events_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceStatusPayload.ProtoReflect.Descriptor instead.
func (*ServiceStatusPayload) Descriptor() ([]byte, []int) {
	return file_proto_events_events_proto_rawDescGZIP(), []int{12}
}

func (x *ServiceStatusPayload) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *ServiceStatusPayload) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ServiceStatusPayload) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ServiceStatusPayload) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *ServiceStatusPayload) GetConfigPath() string {
	if x != nil {
		return x.ConfigPath
	}
	return ""
}

func (x *ServiceStatusPayload) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *ServiceStatusPayload) GetUptimeSeconds() int64 {
	if x != nil {
		return x.UptimeSeconds
	}
	return 0
}

func (x *ServiceStatusPayload) GetMemoryUsageBytes() int64 {
	if x != nil {
		return x.MemoryUsageBytes
	}
	return 0
}

func (x *ServiceStatusPayload) GetCpuUsagePercent() float64 {
	if x != nil {
		return x.CpuUsagePercent
	}
	return 0
}

func (x *ServiceStatusPayload) GetEnabledAtStartup() bool {
	if x != nil {
		return x.EnabledAtStartup
	}
	return false
}

// Identity event payloads (AD/LDAP)
type IdentityUserPayload struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Username          string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	DisplayName       string                 `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Email             string                 `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	FirstName         string                 `protobuf:"bytes,4,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName          string                 `protobuf:"bytes,5,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Department        string                 `protobuf:"bytes,6,opt,name=department,proto3" json:"department,omitempty"`
	Title             string                 `protobuf:"bytes,7,opt,name=title,proto3" json:"title,omitempty"`
	Manager           string                 `protobuf:"bytes,8,opt,name=manager,proto3" json:"manager,omitempty"`
	Groups            []string               `protobuf:"bytes,9,rep,name=groups,proto3" json:"groups,omitempty"`
	Enabled           bool                   `protobuf:"varint,10,opt,name=enabled,proto3" json:"enabled,omitempty"`
	PasswordLastSet   int64                  `protobuf:"varint,11,opt,name=password_last_set,json=passwordLastSet,proto3" json:"password_last_set,omitempty"`
	LastLogin         int64                  `protobuf:"varint,12,opt,name=last_login,json=lastLogin,proto3" json:"last_login,omitempty"`
	AccountExpires    int64                  `protobuf:"varint,13,opt,name=account_expires,json=accountExpires,proto3" json:"account_expires,omitempty"`
	Domain            string                 `protobuf:"bytes,14,opt,name=domain,proto3" json:"domain,omitempty"`
	DistinguishedName string                 `protobuf:"bytes,15,opt,name=distinguished_name,json=distinguishedName,proto3" json:"distinguished_name,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *IdentityUserPayload) Reset() {
	*x = IdentityUserPayload{}
	mi := &file_proto_events_events_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IdentityUserPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentityUserPayload) ProtoMessage() {}

func (x *IdentityUserPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_events_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentityUserPayload.ProtoReflect.Descriptor instead.
func (*IdentityUserPayload) Descriptor() ([]byte, []int) {
	return file_proto_events_events_proto_rawDescGZIP(), []int{13}
}

func (x *IdentityUserPayload) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *IdentityUserPayload) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *IdentityUserPayload) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *IdentityUserPayload) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *IdentityUserPayload) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *IdentityUserPayload) GetDepartment() string {
	if x != nil {
		return x.Department
	}
	return ""
}

func (x *IdentityUserPayload) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *IdentityUserPayload) GetManager() string {
	if x != nil {
		return x.Manager
	}
	return ""
}

func (x *IdentityUserPayload) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *IdentityUserPayload) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *IdentityUserPayload) GetPasswordLastSet() int64 {
	if x != nil {
		return x.PasswordLastSet
	}
	return 0
}

func (x *IdentityUserPayload) GetLastLogin() int64 {
	if x != nil {
		return x.LastLogin
	}
	return 0
}

func (x *IdentityUserPayload) GetAccountExpires() int64 {
	if x != nil {
		return x.AccountExpires
	}
	return 0
}

func (x *IdentityUserPayload) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *IdentityUserPayload) GetDistinguishedName() string {
	if x != nil {
		return x.DistinguishedName
	}
	return ""
}

type IdentityGroupPayload struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	GroupName         string                 `protobuf:"bytes,1,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	DisplayName       string                 `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Description       string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	GroupType         string                 `protobuf:"bytes,4,opt,name=group_type,json=groupType,proto3" json:"group_type,omitempty"` // security, distribution
	Scope             string                 `protobuf:"bytes,5,opt,name=scope,proto3" json:"scope,omitempty"`                          // domain_local, global, universal
	Members           []string               `protobuf:"bytes,6,rep,name=members,proto3" json:"members,omitempty"`
	ManagedBy         string                 `protobuf:"bytes,7,opt,name=managed_by,json=managedBy,proto3" json:"managed_by,omitempty"`
	Domain            string                 `protobuf:"bytes,8,opt,name=domain,proto3" json:"domain,omitempty"`
	DistinguishedName string                 `protobuf:"bytes,9,opt,name=distinguished_name,json=distinguishedName,proto3" json:"distinguished_name,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *IdentityGroupPayload) Reset() {
	*x = IdentityGroupPayload{}
	mi := &file_proto_events_events_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IdentityGroupPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentityGroupPayload) ProtoMessage() {}

func (x *IdentityGroupPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_events_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentityGroupPayload.ProtoReflect.Descriptor instead.
func (*IdentityGroupPayload) Descriptor() ([]byte, []int) {
	return file_proto_events_events_proto_rawDescGZIP(), []int{14}
}

func (x *IdentityGroupPayload) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *IdentityGroupPayload) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *IdentityGroupPayload) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *IdentityGroupPayload) GetGroupType() string {
	if x != nil {
		return x.GroupType
	}
	return ""
}

func (x *IdentityGroupPayload) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *IdentityGroupPayload) GetMembers() []string {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *IdentityGroupPayload) GetManagedBy() string {
	if x != nil {
		return x.ManagedBy
	}
	return ""
}

func (x *IdentityGroupPayload) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *IdentityGroupPayload) GetDistinguishedName() string {
	if x != nil {
		return x.DistinguishedName
	}
	return ""
}

type IdentityComputerPayload struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	ComputerName           string                 `protobuf:"bytes,1,opt,name=computer_name,json=computerName,proto3" json:"computer_name,omitempty"`
	DnsHostName            string                 `protobuf:"bytes,2,opt,name=dns_host_name,json=dnsHostName,proto3" json:"dns_host_name,omitempty"`
	OperatingSystem        string                 `protobuf:"bytes,3,opt,name=operating_system,json=operatingSystem,proto3" json:"operating_system,omitempty"`
	OperatingSystemVersion string                 `protobuf:"bytes,4,opt,name=operating_system_version,json=operatingSystemVersion,proto3" json:"operating_system_version,omitempty"`
	Description            string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Location               string                 `protobuf:"bytes,6,opt,name=location,proto3" json:"location,omitempty"`
	Enabled                bool                   `protobuf:"varint,7,opt,name=enabled,proto3" json:"enabled,omitempty"`
	LastLogin              int64                  `protobuf:"varint,8,opt,name=last_login,json=lastLogin,proto3" json:"last_login,omitempty"`
	DistinguishedName      string                 `protobuf:"bytes,9,opt,name=distinguished_name,json=distinguishedName,proto3" json:"distinguished_name,omitempty"`
	Domain                 string                 `protobuf:"bytes,10,opt,name=domain,proto3" json:"domain,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *IdentityComputerPayload) Reset() {
	*x = IdentityComputerPayload{}
	mi := &file_proto_events_events_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IdentityComputerPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentityComputerPayload) ProtoMessage() {}

func (x *IdentityComputerPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_events_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentityComputerPayload.ProtoReflect.Descriptor instead.
func (*IdentityComputerPayload) Descriptor() ([]byte, []int) {
	return file_proto_events_events_proto_rawDescGZIP(), []int{15}
}

func (x *IdentityComputerPayload) GetComputerName() string {
	if x != nil {
		return x.ComputerName
	}
	return ""
}

func (x *IdentityComputerPayload) GetDnsHostName() string {
	if x != nil {
		return x.DnsHostName
	}
	return ""
}

func (x *IdentityComputerPayload) GetOperatingSystem() string {
	if x != nil {
		return x.OperatingSystem
	}
	return ""
}

func (x *IdentityComputerPayload) GetOperatingSystemVersion() string {
	if x != nil {
		return x.OperatingSystemVersion
	}
	return ""
}

func (x *IdentityComputerPayload) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *IdentityComputerPayload) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *IdentityComputerPayload) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *IdentityComputerPayload) GetLastLogin() int64 {
	if x != nil {
		return x.LastLogin
	}
	return 0
}

func (x *IdentityComputerPayload) GetDistinguishedName() string {
	if x != nil {
		return x.DistinguishedName
	}
	return ""
}

func (x *IdentityComputerPayload) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

// Access control event payloads
type AccessACLPayload struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ResourcePath     string                 `protobuf:"bytes,1,opt,name=resource_path,json=resourcePath,proto3" json:"resource_path,omitempty"`
	ResourceType     string                 `protobuf:"bytes,2,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`    // file, directory
	AclType          string                 `protobuf:"bytes,3,opt,name=acl_type,json=aclType,proto3" json:"acl_type,omitempty"`                   // posix, nfsv4
	Principal        string                 `protobuf:"bytes,4,opt,name=principal,proto3" json:"principal,omitempty"`                              // user or group name
	PrincipalType    string                 `protobuf:"bytes,5,opt,name=principal_type,json=principalType,proto3" json:"principal_type,omitempty"` // user, group
	Permissions      string                 `protobuf:"bytes,6,opt,name=permissions,proto3" json:"permissions,omitempty"`                          // rwx, specific permissions
	AccessType       string                 `protobuf:"bytes,7,opt,name=access_type,json=accessType,proto3" json:"access_type,omitempty"`          // allow, deny
	Inherited        bool                   `protobuf:"varint,8,opt,name=inherited,proto3" json:"inherited,omitempty"`
	InheritanceFlags string                 `protobuf:"bytes,9,opt,name=inheritance_flags,json=inheritanceFlags,proto3" json:"inheritance_flags,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *AccessACLPayload) Reset() {
	*x = AccessACLPayload{}
	mi := &file_proto_events_events_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccessACLPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessACLPayload) ProtoMessage() {}

func (x *AccessACLPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_events_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessACLPayload.ProtoReflect.Descriptor instead.
func (*AccessACLPayload) Descriptor() ([]byte, []int) {
	return file_proto_events_events_proto_rawDescGZIP(), []int{16}
}

func (x *AccessACLPayload) GetResourcePath() string {
	if x != nil {
		return x.ResourcePath
	}
	return ""
}

func (x *AccessACLPayload) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

func (x *AccessACLPayload) GetAclType() string {
	if x != nil {
		return x.AclType
	}
	return ""
}

func (x *AccessACLPayload) GetPrincipal() string {
	if x != nil {
		return x.Principal
	}
	return ""
}

func (x *AccessACLPayload) GetPrincipalType() string {
	if x != nil {
		return x.PrincipalType
	}
	return ""
}

func (x *AccessACLPayload) GetPermissions() string {
	if x != nil {
		return x.Permissions
	}
	return ""
}

func (x *AccessACLPayload) GetAccessType() string {
	if x != nil {
		return x.AccessType
	}
	return ""
}

func (x *AccessACLPayload) GetInherited() bool {
	if x != nil {
		return x.Inherited
	}
	return false
}

func (x *AccessACLPayload) GetInheritanceFlags() string {
	if x != nil {
		return x.InheritanceFlags
	}
	return ""
}

type AccessPermissionPayload struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ResourcePath   string                 `protobuf:"bytes,1,opt,name=resource_path,json=resourcePath,proto3" json:"resource_path,omitempty"`
	ResourceType   string                 `protobuf:"bytes,2,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
	Principal      string                 `protobuf:"bytes,3,opt,name=principal,proto3" json:"principal,omitempty"`
	PrincipalType  string                 `protobuf:"bytes,4,opt,name=principal_type,json=principalType,proto3" json:"principal_type,omitempty"`
	OldPermissions string                 `protobuf:"bytes,5,opt,name=old_permissions,json=oldPermissions,proto3" json:"old_permissions,omitempty"`
	NewPermissions string                 `protobuf:"bytes,6,opt,name=new_permissions,json=newPermissions,proto3" json:"new_permissions,omitempty"`
	Owner          string                 `protobuf:"bytes,7,opt,name=owner,proto3" json:"owner,omitempty"`
	Group          string                 `protobuf:"bytes,8,opt,name=group,proto3" json:"group,omitempty"`
	ChangedBy      string                 `protobuf:"bytes,9,opt,name=changed_by,json=changedBy,proto3" json:"changed_by,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AccessPermissionPayload) Reset() {
	*x = AccessPermissionPayload{}
	mi := &file_proto_events_events_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccessPermissionPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessPermissionPayload) ProtoMessage() {}

func (x *AccessPermissionPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_events_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessPermissionPayload.ProtoReflect.Descriptor instead.
func (*AccessPermissionPayload) Descriptor() ([]byte, []int) {
	return file_proto_events_events_proto_rawDescGZIP(), []int{17}
}

func (x *AccessPermissionPayload) GetResourcePath() string {
	if x != nil {
		return x.ResourcePath
	}
	return ""
}

func (x *AccessPermissionPayload) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

func (x *AccessPermissionPayload) GetPrincipal() string {
	if x != nil {
		return x.Principal
	}
	return ""
}

func (x *AccessPermissionPayload) GetPrincipalType() string {
	if x != nil {
		return x.PrincipalType
	}
	return ""
}

func (x *AccessPermissionPayload) GetOldPermissions() string {
	if x != nil {
		return x.OldPermissions
	}
	return ""
}

func (x *AccessPermissionPayload) GetNewPermissions() string {
	if x != nil {
		return x.NewPermissions
	}
	return ""
}

func (x *AccessPermissionPayload) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *AccessPermissionPayload) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *AccessPermissionPayload) GetChangedBy() string {
	if x != nil {
		return x.ChangedBy
	}
	return ""
}

// File sharing event payloads
type SharingSharePayload struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ShareName      string                 `protobuf:"bytes,1,opt,name=share_name,json=shareName,proto3" json:"share_name,omitempty"`
	SharePath      string                 `protobuf:"bytes,2,opt,name=share_path,json=sharePath,proto3" json:"share_path,omitempty"`
	ShareType      string                 `protobuf:"bytes,3,opt,name=share_type,json=shareType,proto3" json:"share_type,omitempty"` // smb, nfs, iscsi
	Description    string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Enabled        bool                   `protobuf:"varint,5,opt,name=enabled,proto3" json:"enabled,omitempty"`
	AllowedUsers   []string               `protobuf:"bytes,6,rep,name=allowed_users,json=allowedUsers,proto3" json:"allowed_users,omitempty"`
	AllowedGroups  []string               `protobuf:"bytes,7,rep,name=allowed_groups,json=allowedGroups,proto3" json:"allowed_groups,omitempty"`
	Properties     map[string]string      `protobuf:"bytes,8,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // browseable, readonly, etc.
	MaxConnections int32                  `protobuf:"varint,9,opt,name=max_connections,json=maxConnections,proto3" json:"max_connections,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SharingSharePayload) Reset() {
	*x = SharingSharePayload{}
	mi := &file_proto_events_events_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SharingSharePayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SharingSharePayload) ProtoMessage() {}

func (x *SharingSharePayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_events_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SharingSharePayload.ProtoReflect.Descriptor instead.
func (*SharingSharePayload) Descriptor() ([]byte, []int) {
	return file_proto_events_events_proto_rawDescGZIP(), []int{18}
}

func (x *SharingSharePayload) GetShareName() string {
	if x != nil {
		return x.ShareName
	}
	return ""
}

func (x *SharingSharePayload) GetSharePath() string {
	if x != nil {
		return x.SharePath
	}
	return ""
}

func (x *SharingSharePayload) GetShareType() string {
	if x != nil {
		return x.ShareType
	}
	return ""
}

func (x *SharingSharePayload) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SharingSharePayload) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *SharingSharePayload) GetAllowedUsers() []string {
	if x != nil {
		return x.AllowedUsers
	}
	return nil
}

func (x *SharingSharePayload) GetAllowedGroups() []string {
	if x != nil {
		return x.AllowedGroups
	}
	return nil
}

func (x *SharingSharePayload) GetProperties() map[string]string {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *SharingSharePayload) GetMaxConnections() int32 {
	if x != nil {
		return x.MaxConnections
	}
	return 0
}

type SharingConnectionPayload struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ShareName      string                 `protobuf:"bytes,1,opt,name=share_name,json=shareName,proto3" json:"share_name,omitempty"`
	ShareType      string                 `protobuf:"bytes,2,opt,name=share_type,json=shareType,proto3" json:"share_type,omitempty"`
	ClientIp       string                 `protobuf:"bytes,3,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`
	Username       string                 `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	ConnectionType string                 `protobuf:"bytes,5,opt,name=connection_type,json=connectionType,proto3" json:"connection_type,omitempty"` // smb, nfs
	SessionId      int64                  `protobuf:"varint,6,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	ConnectedTime  int64                  `protobuf:"varint,7,opt,name=connected_time,json=connectedTime,proto3" json:"connected_time,omitempty"`
	BytesRead      int64                  `protobuf:"varint,8,opt,name=bytes_read,json=bytesRead,proto3" json:"bytes_read,omitempty"`
	BytesWritten   int64                  `protobuf:"varint,9,opt,name=bytes_written,json=bytesWritten,proto3" json:"bytes_written,omitempty"`
	OpenFiles      int32                  `protobuf:"varint,10,opt,name=open_files,json=openFiles,proto3" json:"open_files,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SharingConnectionPayload) Reset() {
	*x = SharingConnectionPayload{}
	mi := &file_proto_events_events_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SharingConnectionPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SharingConnectionPayload) ProtoMessage() {}

func (x *SharingConnectionPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_events_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SharingConnectionPayload.ProtoReflect.Descriptor instead.
func (*SharingConnectionPayload) Descriptor() ([]byte, []int) {
	return file_proto_events_events_proto_rawDescGZIP(), []int{19}
}

func (x *SharingConnectionPayload) GetShareName() string {
	if x != nil {
		return x.ShareName
	}
	return ""
}

func (x *SharingConnectionPayload) GetShareType() string {
	if x != nil {
		return x.ShareType
	}
	return ""
}

func (x *SharingConnectionPayload) GetClientIp() string {
	if x != nil {
		return x.ClientIp
	}
	return ""
}

func (x *SharingConnectionPayload) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SharingConnectionPayload) GetConnectionType() string {
	if x != nil {
		return x.ConnectionType
	}
	return ""
}

func (x *SharingConnectionPayload) GetSessionId() int64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

func (x *SharingConnectionPayload) GetConnectedTime() int64 {
	if x != nil {
		return x.ConnectedTime
	}
	return 0
}

func (x *SharingConnectionPayload) GetBytesRead() int64 {
	if x != nil {
		return x.BytesRead
	}
	return 0
}

func (x *SharingConnectionPayload) GetBytesWritten() int64 {
	if x != nil {
		return x.BytesWritten
	}
	return 0
}

func (x *SharingConnectionPayload) GetOpenFiles() int32 {
	if x != nil {
		return x.OpenFiles
	}
	return 0
}

type SharingFileAccessPayload struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ShareName        string                 `protobuf:"bytes,1,opt,name=share_name,json=shareName,proto3" json:"share_name,omitempty"`
	FilePath         string                 `protobuf:"bytes,2,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	Username         string                 `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	ClientIp         string                 `protobuf:"bytes,4,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`
	AccessType       string                 `protobuf:"bytes,5,opt,name=access_type,json=accessType,proto3" json:"access_type,omitempty"` // read, write, execute, delete
	Success          bool                   `protobuf:"varint,6,opt,name=success,proto3" json:"success,omitempty"`
	ErrorCode        string                 `protobuf:"bytes,7,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	FileSize         int64                  `protobuf:"varint,8,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`
	BytesTransferred int64                  `protobuf:"varint,9,opt,name=bytes_transferred,json=bytesTransferred,proto3" json:"bytes_transferred,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SharingFileAccessPayload) Reset() {
	*x = SharingFileAccessPayload{}
	mi := &file_proto_events_events_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SharingFileAccessPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SharingFileAccessPayload) ProtoMessage() {}

func (x *SharingFileAccessPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_events_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SharingFileAccessPayload.ProtoReflect.Descriptor instead.
func (*SharingFileAccessPayload) Descriptor() ([]byte, []int) {
	return file_proto_events_events_proto_rawDescGZIP(), []int{20}
}

func (x *SharingFileAccessPayload) GetShareName() string {
	if x != nil {
		return x.ShareName
	}
	return ""
}

func (x *SharingFileAccessPayload) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *SharingFileAccessPayload) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SharingFileAccessPayload) GetClientIp() string {
	if x != nil {
		return x.ClientIp
	}
	return ""
}

func (x *SharingFileAccessPayload) GetAccessType() string {
	if x != nil {
		return x.AccessType
	}
	return ""
}

func (x *SharingFileAccessPayload) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SharingFileAccessPayload) GetErrorCode() string {
	if x != nil {
		return x.ErrorCode
	}
	return ""
}

func (x *SharingFileAccessPayload) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *SharingFileAccessPayload) GetBytesTransferred() int64 {
	if x != nil {
		return x.BytesTransferred
	}
	return 0
}

var File_proto_events_events_proto protoreflect.FileDescriptor

const file_proto_events_events_proto_rawDesc = "" +
	"\n" +
	"\x19proto/events/events.proto\x12\rrodent.events\"\xa3\x01\n" +
	"\x14SystemStartupPayload\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12*\n" +
	"\x11boot_time_seconds\x18\x02 \x01(\x03R\x0fbootTimeSeconds\x12\x1a\n" +
	"\bhostname\x18\x03 \x01(\tR\bhostname\x12)\n" +
	"\x10services_started\x18\x04 \x03(\tR\x0fservicesStarted\"\xad\x01\n" +
	"\x19SystemConfigChangePayload\x12\x1f\n" +
	"\vconfig_file\x18\x01 \x01(\tR\n" +
	"configFile\x12\x1d\n" +
	"\n" +
	"changed_by\x18\x02 \x01(\tR\tchangedBy\x12\x1f\n" +
	"\vchange_type\x18\x03 \x01(\tR\n" +
	"changeType\x12/\n" +
	"\x13affected_components\x18\x04 \x03(\tR\x12affectedComponents\"\xfb\x01\n" +
	"\x11SystemUserPayload\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12\x1b\n" +
	"\tfull_name\x18\x02 \x01(\tR\bfullName\x12\x16\n" +
	"\x06groups\x18\x03 \x03(\tR\x06groups\x12\x14\n" +
	"\x05shell\x18\x04 \x01(\tR\x05shell\x12\x19\n" +
	"\bhome_dir\x18\x05 \x01(\tR\ahomeDir\x12\x1f\n" +
	"\vcreate_home\x18\x06 \x01(\bR\n" +
	"createHome\x12\x1f\n" +
	"\vsystem_user\x18\a \x01(\bR\n" +
	"systemUser\x12\x10\n" +
	"\x03uid\x18\b \x01(\x05R\x03uid\x12\x10\n" +
	"\x03gid\x18\t \x01(\x05R\x03gid\"\x8b\x02\n" +
	"\x12StoragePoolPayload\x12\x1b\n" +
	"\tpool_name\x18\x01 \x01(\tR\bpoolName\x12\x1d\n" +
	"\n" +
	"pool_state\x18\x02 \x01(\tR\tpoolState\x12\x1b\n" +
	"\tpool_guid\x18\x03 \x01(\tR\bpoolGuid\x12\x1d\n" +
	"\n" +
	"total_size\x18\x04 \x01(\x03R\ttotalSize\x12\x1b\n" +
	"\tused_size\x18\x05 \x01(\x03R\busedSize\x12%\n" +
	"\x0eavailable_size\x18\x06 \x01(\x03R\ravailableSize\x12#\n" +
	"\rhealth_status\x18\a \x01(\tR\fhealthStatus\x12\x14\n" +
	"\x05vdevs\x18\b \x03(\tR\x05vdevs\"\xf2\x02\n" +
	"\x15StorageDatasetPayload\x12!\n" +
	"\fdataset_name\x18\x01 \x01(\tR\vdatasetName\x12\x1b\n" +
	"\tpool_name\x18\x02 \x01(\tR\bpoolName\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12\x12\n" +
	"\x04used\x18\x04 \x01(\x03R\x04used\x12\x1c\n" +
	"\tavailable\x18\x05 \x01(\x03R\tavailable\x12\x1e\n" +
	"\n" +
	"referenced\x18\x06 \x01(\x03R\n" +
	"referenced\x12\x1e\n" +
	"\n" +
	"mountpoint\x18\a \x01(\tR\n" +
	"mountpoint\x12T\n" +
	"\n" +
	"properties\x18\b \x03(\v24.rodent.events.StorageDatasetPayload.PropertiesEntryR\n" +
	"properties\x1a=\n" +
	"\x0fPropertiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe9\x01\n" +
	"\x16StorageSnapshotPayload\x12#\n" +
	"\rsnapshot_name\x18\x01 \x01(\tR\fsnapshotName\x12!\n" +
	"\fdataset_name\x18\x02 \x01(\tR\vdatasetName\x12#\n" +
	"\rcreation_time\x18\x03 \x01(\x03R\fcreationTime\x12\x1b\n" +
	"\tused_size\x18\x04 \x01(\x03R\busedSize\x12'\n" +
	"\x0freferenced_size\x18\x05 \x01(\x03R\x0ereferencedSize\x12\x1c\n" +
	"\trecursive\x18\x06 \x01(\bR\trecursive\"\xf3\x02\n" +
	"\x16StorageTransferPayload\x12\x1f\n" +
	"\vtransfer_id\x18\x01 \x01(\tR\n" +
	"transferId\x12\x1c\n" +
	"\toperation\x18\x02 \x01(\tR\toperation\x12'\n" +
	"\x0fsource_snapshot\x18\x03 \x01(\tR\x0esourceSnapshot\x12%\n" +
	"\x0etarget_dataset\x18\x04 \x01(\tR\rtargetDataset\x12\x16\n" +
	"\x06status\x18\x05 \x01(\tR\x06status\x12\x14\n" +
	"\x05error\x18\x06 \x01(\tR\x05error\x12)\n" +
	"\x10duration_seconds\x18\a \x01(\x03R\x0fdurationSeconds\x12+\n" +
	"\x11bytes_transferred\x18\b \x01(\x03R\x10bytesTransferred\x12#\n" +
	"\rtransfer_rate\x18\t \x01(\x03R\ftransferRate\x12\x1f\n" +
	"\vremote_host\x18\n" +
	" \x01(\tR\n" +
	"remoteHost\"\xbb\x02\n" +
	"\x17NetworkInterfacePayload\x12%\n" +
	"\x0einterface_name\x18\x01 \x01(\tR\rinterfaceName\x12%\n" +
	"\x0einterface_type\x18\x02 \x01(\tR\rinterfaceType\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\x12\x1d\n" +
	"\n" +
	"ip_address\x18\x04 \x01(\tR\tipAddress\x12\x18\n" +
	"\anetmask\x18\x05 \x01(\tR\anetmask\x12\x18\n" +
	"\agateway\x18\x06 \x01(\tR\agateway\x12\x1f\n" +
	"\vmac_address\x18\a \x01(\tR\n" +
	"macAddress\x12\x19\n" +
	"\brx_bytes\x18\b \x01(\x03R\arxBytes\x12\x19\n" +
	"\btx_bytes\x18\t \x01(\x03R\atxBytes\x12\x10\n" +
	"\x03mtu\x18\n" +
	" \x01(\x05R\x03mtu\"\xa8\x02\n" +
	"\x18NetworkConnectionPayload\x12\x1b\n" +
	"\tsource_ip\x18\x01 \x01(\tR\bsourceIp\x12%\n" +
	"\x0edestination_ip\x18\x02 \x01(\tR\rdestinationIp\x12\x1f\n" +
	"\vsource_port\x18\x03 \x01(\x05R\n" +
	"sourcePort\x12)\n" +
	"\x10destination_port\x18\x04 \x01(\x05R\x0fdestinationPort\x12\x1a\n" +
	"\bprotocol\x18\x05 \x01(\tR\bprotocol\x12'\n" +
	"\x0fconnection_type\x18\x06 \x01(\tR\x0econnectionType\x12\x16\n" +
	"\x06status\x18\a \x01(\tR\x06status\x12\x1f\n" +
	"\vduration_ms\x18\b \x01(\x03R\n" +
	"durationMs\"\xe0\x01\n" +
	"\x13SecurityAuthPayload\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12\x1d\n" +
	"\n" +
	"ip_address\x18\x02 \x01(\tR\tipAddress\x12\x16\n" +
	"\x06method\x18\x03 \x01(\tR\x06method\x12\x16\n" +
	"\x06reason\x18\x04 \x01(\tR\x06reason\x12\x1a\n" +
	"\bresource\x18\x05 \x01(\tR\bresource\x12\x1d\n" +
	"\n" +
	"user_agent\x18\x06 \x01(\tR\tuserAgent\x12#\n" +
	"\rattempt_count\x18\a \x01(\x05R\fattemptCount\"\xfb\x01\n" +
	"\x12SecurityKeyPayload\x12\x15\n" +
	"\x06key_id\x18\x01 \x01(\tR\x05keyId\x12\x19\n" +
	"\bkey_type\x18\x02 \x01(\tR\akeyType\x12\x1c\n" +
	"\talgorithm\x18\x03 \x01(\tR\talgorithm\x12\x19\n" +
	"\bkey_size\x18\x04 \x01(\x05R\akeySize\x12 \n" +
	"\vfingerprint\x18\x05 \x01(\tR\vfingerprint\x12\x1f\n" +
	"\vexpiry_time\x18\x06 \x01(\x03R\n" +
	"expiryTime\x12\x1d\n" +
	"\n" +
	"created_by\x18\a \x01(\tR\tcreatedBy\x12\x18\n" +
	"\apurpose\x18\b \x01(\tR\apurpose\"\xda\x02\n" +
	"\x1aSecurityCertificatePayload\x12%\n" +
	"\x0ecertificate_id\x18\x01 \x01(\tR\rcertificateId\x12\x18\n" +
	"\asubject\x18\x02 \x01(\tR\asubject\x12\x16\n" +
	"\x06issuer\x18\x03 \x01(\tR\x06issuer\x12#\n" +
	"\rserial_number\x18\x04 \x01(\tR\fserialNumber\x12\x1f\n" +
	"\vsan_entries\x18\x05 \x03(\tR\n" +
	"sanEntries\x12\x1d\n" +
	"\n" +
	"not_before\x18\x06 \x01(\x03R\tnotBefore\x12\x1b\n" +
	"\tnot_after\x18\a \x01(\x03R\bnotAfter\x12/\n" +
	"\x13signature_algorithm\x18\b \x01(\tR\x12signatureAlgorithm\x12\x13\n" +
	"\x05is_ca\x18\t \x01(\bR\x04isCa\x12\x1b\n" +
	"\tkey_usage\x18\n" +
	" \x01(\tR\bkeyUsage\"\xe3\x02\n" +
	"\x14ServiceStatusPayload\x12!\n" +
	"\fservice_name\x18\x01 \x01(\tR\vserviceName\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x12\x10\n" +
	"\x03pid\x18\x04 \x01(\x05R\x03pid\x12\x1f\n" +
	"\vconfig_path\x18\x05 \x01(\tR\n" +
	"configPath\x12\x14\n" +
	"\x05error\x18\x06 \x01(\tR\x05error\x12%\n" +
	"\x0euptime_seconds\x18\a \x01(\x03R\ruptimeSeconds\x12,\n" +
	"\x12memory_usage_bytes\x18\b \x01(\x03R\x10memoryUsageBytes\x12*\n" +
	"\x11cpu_usage_percent\x18\t \x01(\x01R\x0fcpuUsagePercent\x12,\n" +
	"\x12enabled_at_startup\x18\n" +
	" \x01(\bR\x10enabledAtStartup\"\xe3\x03\n" +
	"\x13IdentityUserPayload\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12!\n" +
	"\fdisplay_name\x18\x02 \x01(\tR\vdisplayName\x12\x14\n" +
	"\x05email\x18\x03 \x01(\tR\x05email\x12\x1d\n" +
	"\n" +
	"first_name\x18\x04 \x01(\tR\tfirstName\x12\x1b\n" +
	"\tlast_name\x18\x05 \x01(\tR\blastName\x12\x1e\n" +
	"\n" +
	"department\x18\x06 \x01(\tR\n" +
	"department\x12\x14\n" +
	"\x05title\x18\a \x01(\tR\x05title\x12\x18\n" +
	"\amanager\x18\b \x01(\tR\amanager\x12\x16\n" +
	"\x06groups\x18\t \x03(\tR\x06groups\x12\x18\n" +
	"\aenabled\x18\n" +
	" \x01(\bR\aenabled\x12*\n" +
	"\x11password_last_set\x18\v \x01(\x03R\x0fpasswordLastSet\x12\x1d\n" +
	"\n" +
	"last_login\x18\f \x01(\x03R\tlastLogin\x12'\n" +
	"\x0faccount_expires\x18\r \x01(\x03R\x0eaccountExpires\x12\x16\n" +
	"\x06domain\x18\x0e \x01(\tR\x06domain\x12-\n" +
	"\x12distinguished_name\x18\x0f \x01(\tR\x11distinguishedName\"\xaf\x02\n" +
	"\x14IdentityGroupPayload\x12\x1d\n" +
	"\n" +
	"group_name\x18\x01 \x01(\tR\tgroupName\x12!\n" +
	"\fdisplay_name\x18\x02 \x01(\tR\vdisplayName\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1d\n" +
	"\n" +
	"group_type\x18\x04 \x01(\tR\tgroupType\x12\x14\n" +
	"\x05scope\x18\x05 \x01(\tR\x05scope\x12\x18\n" +
	"\amembers\x18\x06 \x03(\tR\amembers\x12\x1d\n" +
	"\n" +
	"managed_by\x18\a \x01(\tR\tmanagedBy\x12\x16\n" +
	"\x06domain\x18\b \x01(\tR\x06domain\x12-\n" +
	"\x12distinguished_name\x18\t \x01(\tR\x11distinguishedName\"\x85\x03\n" +
	"\x17IdentityComputerPayload\x12#\n" +
	"\rcomputer_name\x18\x01 \x01(\tR\fcomputerName\x12\"\n" +
	"\rdns_host_name\x18\x02 \x01(\tR\vdnsHostName\x12)\n" +
	"\x10operating_system\x18\x03 \x01(\tR\x0foperatingSystem\x128\n" +
	"\x18operating_system_version\x18\x04 \x01(\tR\x16operatingSystemVersion\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\x12\x1a\n" +
	"\blocation\x18\x06 \x01(\tR\blocation\x12\x18\n" +
	"\aenabled\x18\a \x01(\bR\aenabled\x12\x1d\n" +
	"\n" +
	"last_login\x18\b \x01(\x03R\tlastLogin\x12-\n" +
	"\x12distinguished_name\x18\t \x01(\tR\x11distinguishedName\x12\x16\n" +
	"\x06domain\x18\n" +
	" \x01(\tR\x06domain\"\xca\x02\n" +
	"\x10AccessACLPayload\x12#\n" +
	"\rresource_path\x18\x01 \x01(\tR\fresourcePath\x12#\n" +
	"\rresource_type\x18\x02 \x01(\tR\fresourceType\x12\x19\n" +
	"\bacl_type\x18\x03 \x01(\tR\aaclType\x12\x1c\n" +
	"\tprincipal\x18\x04 \x01(\tR\tprincipal\x12%\n" +
	"\x0eprincipal_type\x18\x05 \x01(\tR\rprincipalType\x12 \n" +
	"\vpermissions\x18\x06 \x01(\tR\vpermissions\x12\x1f\n" +
	"\vaccess_type\x18\a \x01(\tR\n" +
	"accessType\x12\x1c\n" +
	"\tinherited\x18\b \x01(\bR\tinherited\x12+\n" +
	"\x11inheritance_flags\x18\t \x01(\tR\x10inheritanceFlags\"\xc5\x02\n" +
	"\x17AccessPermissionPayload\x12#\n" +
	"\rresource_path\x18\x01 \x01(\tR\fresourcePath\x12#\n" +
	"\rresource_type\x18\x02 \x01(\tR\fresourceType\x12\x1c\n" +
	"\tprincipal\x18\x03 \x01(\tR\tprincipal\x12%\n" +
	"\x0eprincipal_type\x18\x04 \x01(\tR\rprincipalType\x12'\n" +
	"\x0fold_permissions\x18\x05 \x01(\tR\x0eoldPermissions\x12'\n" +
	"\x0fnew_permissions\x18\x06 \x01(\tR\x0enewPermissions\x12\x14\n" +
	"\x05owner\x18\a \x01(\tR\x05owner\x12\x14\n" +
	"\x05group\x18\b \x01(\tR\x05group\x12\x1d\n" +
	"\n" +
	"changed_by\x18\t \x01(\tR\tchangedBy\"\xb6\x03\n" +
	"\x13SharingSharePayload\x12\x1d\n" +
	"\n" +
	"share_name\x18\x01 \x01(\tR\tshareName\x12\x1d\n" +
	"\n" +
	"share_path\x18\x02 \x01(\tR\tsharePath\x12\x1d\n" +
	"\n" +
	"share_type\x18\x03 \x01(\tR\tshareType\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x18\n" +
	"\aenabled\x18\x05 \x01(\bR\aenabled\x12#\n" +
	"\rallowed_users\x18\x06 \x03(\tR\fallowedUsers\x12%\n" +
	"\x0eallowed_groups\x18\a \x03(\tR\rallowedGroups\x12R\n" +
	"\n" +
	"properties\x18\b \x03(\v22.rodent.events.SharingSharePayload.PropertiesEntryR\n" +
	"properties\x12'\n" +
	"\x0fmax_connections\x18\t \x01(\x05R\x0emaxConnections\x1a=\n" +
	"\x0fPropertiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe3\x02\n" +
	"\x18SharingConnectionPayload\x12\x1d\n" +
	"\n" +
	"share_name\x18\x01 \x01(\tR\tshareName\x12\x1d\n" +
	"\n" +
	"share_type\x18\x02 \x01(\tR\tshareType\x12\x1b\n" +
	"\tclient_ip\x18\x03 \x01(\tR\bclientIp\x12\x1a\n" +
	"\busername\x18\x04 \x01(\tR\busername\x12'\n" +
	"\x0fconnection_type\x18\x05 \x01(\tR\x0econnectionType\x12\x1d\n" +
	"\n" +
	"session_id\x18\x06 \x01(\x03R\tsessionId\x12%\n" +
	"\x0econnected_time\x18\a \x01(\x03R\rconnectedTime\x12\x1d\n" +
	"\n" +
	"bytes_read\x18\b \x01(\x03R\tbytesRead\x12#\n" +
	"\rbytes_written\x18\t \x01(\x03R\fbytesWritten\x12\x1d\n" +
	"\n" +
	"open_files\x18\n" +
	" \x01(\x05R\topenFiles\"\xb3\x02\n" +
	"\x18SharingFileAccessPayload\x12\x1d\n" +
	"\n" +
	"share_name\x18\x01 \x01(\tR\tshareName\x12\x1b\n" +
	"\tfile_path\x18\x02 \x01(\tR\bfilePath\x12\x1a\n" +
	"\busername\x18\x03 \x01(\tR\busername\x12\x1b\n" +
	"\tclient_ip\x18\x04 \x01(\tR\bclientIp\x12\x1f\n" +
	"\vaccess_type\x18\x05 \x01(\tR\n" +
	"accessType\x12\x18\n" +
	"\asuccess\x18\x06 \x01(\bR\asuccess\x12\x1d\n" +
	"\n" +
	"error_code\x18\a \x01(\tR\terrorCode\x12\x1b\n" +
	"\tfile_size\x18\b \x01(\x03R\bfileSize\x12+\n" +
	"\x11bytes_transferred\x18\t \x01(\x03R\x10bytesTransferred*\xae\x05\n" +
	"\x0fSystemEventType\x12!\n" +
	"\x1dSYSTEM_EVENT_TYPE_UNSPECIFIED\x10\x00\x12\x1d\n" +
	"\x19SYSTEM_EVENT_TYPE_STARTUP\x10\x01\x12\x1e\n" +
	"\x1aSYSTEM_EVENT_TYPE_SHUTDOWN\x10\x02\x12\x1d\n" +
	"\x19SYSTEM_EVENT_TYPE_RESTART\x10\x03\x12$\n" +
	" SYSTEM_EVENT_TYPE_CONFIG_CHANGED\x10\x04\x12%\n" +
	"!SYSTEM_EVENT_TYPE_CONFIG_RELOADED\x10\x05\x12)\n" +
	"%SYSTEM_EVENT_TYPE_HEALTH_CHECK_PASSED\x10\x06\x12)\n" +
	"%SYSTEM_EVENT_TYPE_HEALTH_CHECK_FAILED\x10\a\x12+\n" +
	"'SYSTEM_EVENT_TYPE_PERFORMANCE_THRESHOLD\x10\b\x12(\n" +
	"$SYSTEM_EVENT_TYPE_LOCAL_USER_CREATED\x10\t\x12(\n" +
	"$SYSTEM_EVENT_TYPE_LOCAL_USER_DELETED\x10\n" +
	"\x12)\n" +
	"%SYSTEM_EVENT_TYPE_LOCAL_USER_MODIFIED\x10\v\x12)\n" +
	"%SYSTEM_EVENT_TYPE_LOCAL_GROUP_CREATED\x10\f\x12)\n" +
	"%SYSTEM_EVENT_TYPE_LOCAL_GROUP_DELETED\x10\r\x12'\n" +
	"#SYSTEM_EVENT_TYPE_PACKAGE_INSTALLED\x10\x0e\x12%\n" +
	"!SYSTEM_EVENT_TYPE_PACKAGE_UPDATED\x10\x0f\x12%\n" +
	"!SYSTEM_EVENT_TYPE_PACKAGE_REMOVED\x10\x10*\xb7\t\n" +
	"\x10StorageEventType\x12\"\n" +
	"\x1eSTORAGE_EVENT_TYPE_UNSPECIFIED\x10\x00\x12#\n" +
	"\x1fSTORAGE_EVENT_TYPE_POOL_CREATED\x10\x01\x12%\n" +
	"!STORAGE_EVENT_TYPE_POOL_DESTROYED\x10\x02\x12$\n" +
	" STORAGE_EVENT_TYPE_POOL_IMPORTED\x10\x03\x12$\n" +
	" STORAGE_EVENT_TYPE_POOL_EXPORTED\x10\x04\x12)\n" +
	"%STORAGE_EVENT_TYPE_POOL_SCRUB_STARTED\x10\x05\x12+\n" +
	"'STORAGE_EVENT_TYPE_POOL_SCRUB_COMPLETED\x10\x06\x12(\n" +
	"$STORAGE_EVENT_TYPE_POOL_SCRUB_FAILED\x10\a\x12*\n" +
	"&STORAGE_EVENT_TYPE_POOL_STATUS_CHANGED\x10\b\x12&\n" +
	"\"STORAGE_EVENT_TYPE_DATASET_CREATED\x10\t\x12(\n" +
	"$STORAGE_EVENT_TYPE_DATASET_DESTROYED\x10\n" +
	"\x12&\n" +
	"\"STORAGE_EVENT_TYPE_DATASET_RENAMED\x10\v\x12/\n" +
	"+STORAGE_EVENT_TYPE_DATASET_PROPERTY_CHANGED\x10\f\x12&\n" +
	"\"STORAGE_EVENT_TYPE_DATASET_MOUNTED\x10\r\x12(\n" +
	"$STORAGE_EVENT_TYPE_DATASET_UNMOUNTED\x10\x0e\x12'\n" +
	"#STORAGE_EVENT_TYPE_SNAPSHOT_CREATED\x10\x0f\x12)\n" +
	"%STORAGE_EVENT_TYPE_SNAPSHOT_DESTROYED\x10\x10\x12'\n" +
	"#STORAGE_EVENT_TYPE_SNAPSHOT_RENAMED\x10\x11\x12+\n" +
	"'STORAGE_EVENT_TYPE_SNAPSHOT_ROLLED_BACK\x10\x12\x12&\n" +
	"\"STORAGE_EVENT_TYPE_SNAPSHOT_CLONED\x10\x13\x12'\n" +
	"#STORAGE_EVENT_TYPE_TRANSFER_STARTED\x10\x14\x12)\n" +
	"%STORAGE_EVENT_TYPE_TRANSFER_COMPLETED\x10\x15\x12&\n" +
	"\"STORAGE_EVENT_TYPE_TRANSFER_FAILED\x10\x16\x12&\n" +
	"\"STORAGE_EVENT_TYPE_TRANSFER_PAUSED\x10\x17\x12'\n" +
	"#STORAGE_EVENT_TYPE_TRANSFER_RESUMED\x10\x18\x12)\n" +
	"%STORAGE_EVENT_TYPE_TRANSFER_CANCELLED\x10\x19\x12\"\n" +
	"\x1eSTORAGE_EVENT_TYPE_VOLUME_FULL\x10\x1a\x12'\n" +
	"#STORAGE_EVENT_TYPE_VOLUME_THRESHOLD\x10\x1b\x12%\n" +
	"!STORAGE_EVENT_TYPE_QUOTA_EXCEEDED\x10\x1c*\xfe\x05\n" +
	"\x10NetworkEventType\x12\"\n" +
	"\x1eNETWORK_EVENT_TYPE_UNSPECIFIED\x10\x00\x12#\n" +
	"\x1fNETWORK_EVENT_TYPE_INTERFACE_UP\x10\x01\x12%\n" +
	"!NETWORK_EVENT_TYPE_INTERFACE_DOWN\x10\x02\x12&\n" +
	"\"NETWORK_EVENT_TYPE_INTERFACE_ADDED\x10\x03\x12(\n" +
	"$NETWORK_EVENT_TYPE_INTERFACE_REMOVED\x10\x04\x12/\n" +
	"+NETWORK_EVENT_TYPE_INTERFACE_CONFIG_CHANGED\x10\x05\x12-\n" +
	")NETWORK_EVENT_TYPE_CONNECTION_ESTABLISHED\x10\x06\x12(\n" +
	"$NETWORK_EVENT_TYPE_CONNECTION_FAILED\x10\a\x12&\n" +
	"\"NETWORK_EVENT_TYPE_CONNECTION_LOST\x10\b\x12)\n" +
	"%NETWORK_EVENT_TYPE_CONNECTION_TIMEOUT\x10\t\x12)\n" +
	"%NETWORK_EVENT_TYPE_DNS_CONFIG_CHANGED\x10\n" +
	"\x12,\n" +
	"(NETWORK_EVENT_TYPE_DNS_RESOLUTION_FAILED\x10\v\x12\"\n" +
	"\x1eNETWORK_EVENT_TYPE_ROUTE_ADDED\x10\f\x12$\n" +
	" NETWORK_EVENT_TYPE_ROUTE_DELETED\x10\r\x12$\n" +
	" NETWORK_EVENT_TYPE_ROUTE_CHANGED\x10\x0e\x12*\n" +
	"&NETWORK_EVENT_TYPE_BANDWIDTH_THRESHOLD\x10\x0f\x12,\n" +
	"(NETWORK_EVENT_TYPE_PACKET_LOSS_THRESHOLD\x10\x10\x12(\n" +
	"$NETWORK_EVENT_TYPE_LATENCY_THRESHOLD\x10\x11*\xef\a\n" +
	"\x11SecurityEventType\x12#\n" +
	"\x1fSECURITY_EVENT_TYPE_UNSPECIFIED\x10\x00\x12$\n" +
	" SECURITY_EVENT_TYPE_AUTH_SUCCESS\x10\x01\x12#\n" +
	"\x1fSECURITY_EVENT_TYPE_AUTH_FAILED\x10\x02\x12$\n" +
	" SECURITY_EVENT_TYPE_AUTH_TIMEOUT\x10\x03\x12%\n" +
	"!SECURITY_EVENT_TYPE_LOGIN_SUCCESS\x10\x04\x12$\n" +
	" SECURITY_EVENT_TYPE_LOGIN_FAILED\x10\x05\x12\x1e\n" +
	"\x1aSECURITY_EVENT_TYPE_LOGOUT\x10\x06\x12)\n" +
	"%SECURITY_EVENT_TYPE_PERMISSION_DENIED\x10\a\x12,\n" +
	"(SECURITY_EVENT_TYPE_PRIVILEGE_ESCALATION\x10\b\x12+\n" +
	"'SECURITY_EVENT_TYPE_UNAUTHORIZED_ACCESS\x10\t\x12%\n" +
	"!SECURITY_EVENT_TYPE_KEY_GENERATED\x10\n" +
	"\x12#\n" +
	"\x1fSECURITY_EVENT_TYPE_KEY_ROTATED\x10\v\x12#\n" +
	"\x1fSECURITY_EVENT_TYPE_KEY_EXPIRED\x10\f\x12'\n" +
	"#SECURITY_EVENT_TYPE_KEY_COMPROMISED\x10\r\x12*\n" +
	"&SECURITY_EVENT_TYPE_CERTIFICATE_ISSUED\x10\x0e\x12+\n" +
	"'SECURITY_EVENT_TYPE_CERTIFICATE_EXPIRED\x10\x0f\x12+\n" +
	"'SECURITY_EVENT_TYPE_CERTIFICATE_REVOKED\x10\x10\x12%\n" +
	"!SECURITY_EVENT_TYPE_SSH_KEY_ADDED\x10\x11\x12'\n" +
	"#SECURITY_EVENT_TYPE_SSH_KEY_REMOVED\x10\x12\x122\n" +
	".SECURITY_EVENT_TYPE_SSH_CONNECTION_ESTABLISHED\x10\x13\x12-\n" +
	")SECURITY_EVENT_TYPE_SSH_CONNECTION_FAILED\x10\x14\x12*\n" +
	"&SECURITY_EVENT_TYPE_INTRUSION_DETECTED\x10\x15\x12(\n" +
	"$SECURITY_EVENT_TYPE_MALWARE_DETECTED\x10\x16\x12(\n" +
	"$SECURITY_EVENT_TYPE_POLICY_VIOLATION\x10\x17*\xc5\x04\n" +
	"\x10ServiceEventType\x12\"\n" +
	"\x1eSERVICE_EVENT_TYPE_UNSPECIFIED\x10\x00\x12\x1e\n" +
	"\x1aSERVICE_EVENT_TYPE_STARTED\x10\x01\x12\x1e\n" +
	"\x1aSERVICE_EVENT_TYPE_STOPPED\x10\x02\x12 \n" +
	"\x1cSERVICE_EVENT_TYPE_RESTARTED\x10\x03\x12\x1d\n" +
	"\x19SERVICE_EVENT_TYPE_FAILED\x10\x04\x12\x1e\n" +
	"\x1aSERVICE_EVENT_TYPE_CRASHED\x10\x05\x12\x1d\n" +
	"\x19SERVICE_EVENT_TYPE_KILLED\x10\x06\x12%\n" +
	"!SERVICE_EVENT_TYPE_CONFIG_CHANGED\x10\a\x12&\n" +
	"\"SERVICE_EVENT_TYPE_CONFIG_RELOADED\x10\b\x12%\n" +
	"!SERVICE_EVENT_TYPE_CONFIG_INVALID\x10\t\x12)\n" +
	"%SERVICE_EVENT_TYPE_ENABLED_AT_STARTUP\x10\n" +
	"\x12*\n" +
	"&SERVICE_EVENT_TYPE_DISABLED_AT_STARTUP\x10\v\x12*\n" +
	"&SERVICE_EVENT_TYPE_HEALTH_CHECK_PASSED\x10\f\x12*\n" +
	"&SERVICE_EVENT_TYPE_HEALTH_CHECK_FAILED\x10\r\x12(\n" +
	"$SERVICE_EVENT_TYPE_DEPENDENCY_FAILED\x10\x0e*\x8a\b\n" +
	"\x11IdentityEventType\x12#\n" +
	"\x1fIDENTITY_EVENT_TYPE_UNSPECIFIED\x10\x00\x12$\n" +
	" IDENTITY_EVENT_TYPE_USER_CREATED\x10\x01\x12$\n" +
	" IDENTITY_EVENT_TYPE_USER_UPDATED\x10\x02\x12$\n" +
	" IDENTITY_EVENT_TYPE_USER_DELETED\x10\x03\x12$\n" +
	" IDENTITY_EVENT_TYPE_USER_ENABLED\x10\x04\x12%\n" +
	"!IDENTITY_EVENT_TYPE_USER_DISABLED\x10\x05\x12-\n" +
	")IDENTITY_EVENT_TYPE_USER_PASSWORD_CHANGED\x10\x06\x12-\n" +
	")IDENTITY_EVENT_TYPE_USER_PASSWORD_EXPIRED\x10\a\x12#\n" +
	"\x1fIDENTITY_EVENT_TYPE_USER_LOCKED\x10\b\x12%\n" +
	"!IDENTITY_EVENT_TYPE_USER_UNLOCKED\x10\t\x12%\n" +
	"!IDENTITY_EVENT_TYPE_GROUP_CREATED\x10\n" +
	"\x12%\n" +
	"!IDENTITY_EVENT_TYPE_GROUP_UPDATED\x10\v\x12%\n" +
	"!IDENTITY_EVENT_TYPE_GROUP_DELETED\x10\f\x12*\n" +
	"&IDENTITY_EVENT_TYPE_GROUP_MEMBER_ADDED\x10\r\x12,\n" +
	"(IDENTITY_EVENT_TYPE_GROUP_MEMBER_REMOVED\x10\x0e\x12'\n" +
	"#IDENTITY_EVENT_TYPE_COMPUTER_JOINED\x10\x0f\x12%\n" +
	"!IDENTITY_EVENT_TYPE_COMPUTER_LEFT\x10\x10\x12(\n" +
	"$IDENTITY_EVENT_TYPE_COMPUTER_UPDATED\x10\x11\x12)\n" +
	"%IDENTITY_EVENT_TYPE_COMPUTER_DISABLED\x10\x12\x12+\n" +
	"'IDENTITY_EVENT_TYPE_DOMAIN_SYNC_STARTED\x10\x13\x12-\n" +
	")IDENTITY_EVENT_TYPE_DOMAIN_SYNC_COMPLETED\x10\x14\x12*\n" +
	"&IDENTITY_EVENT_TYPE_DOMAIN_SYNC_FAILED\x10\x15\x123\n" +
	"/IDENTITY_EVENT_TYPE_DOMAIN_CONTROLLER_CONNECTED\x10\x16\x126\n" +
	"2IDENTITY_EVENT_TYPE_DOMAIN_CONTROLLER_DISCONNECTED\x10\x17*\x8a\x05\n" +
	"\x0fAccessEventType\x12!\n" +
	"\x1dACCESS_EVENT_TYPE_UNSPECIFIED\x10\x00\x12!\n" +
	"\x1dACCESS_EVENT_TYPE_ACL_CREATED\x10\x01\x12!\n" +
	"\x1dACCESS_EVENT_TYPE_ACL_UPDATED\x10\x02\x12!\n" +
	"\x1dACCESS_EVENT_TYPE_ACL_DELETED\x10\x03\x12,\n" +
	"(ACCESS_EVENT_TYPE_ACL_PERMISSION_GRANTED\x10\x04\x12,\n" +
	"(ACCESS_EVENT_TYPE_ACL_PERMISSION_REVOKED\x10\x05\x12)\n" +
	"%ACCESS_EVENT_TYPE_FILE_ACCESS_GRANTED\x10\x06\x12(\n" +
	"$ACCESS_EVENT_TYPE_FILE_ACCESS_DENIED\x10\a\x12.\n" +
	"*ACCESS_EVENT_TYPE_DIRECTORY_ACCESS_GRANTED\x10\b\x12-\n" +
	")ACCESS_EVENT_TYPE_DIRECTORY_ACCESS_DENIED\x10\t\x12'\n" +
	"#ACCESS_EVENT_TYPE_OWNERSHIP_CHANGED\x10\n" +
	"\x12)\n" +
	"%ACCESS_EVENT_TYPE_PERMISSIONS_CHANGED\x10\v\x12)\n" +
	"%ACCESS_EVENT_TYPE_INHERITANCE_CHANGED\x10\f\x121\n" +
	"-ACCESS_EVENT_TYPE_SECURITY_DESCRIPTOR_CHANGED\x10\r\x12)\n" +
	"%ACCESS_EVENT_TYPE_DEFAULT_ACL_CHANGED\x10\x0e*\xf8\x06\n" +
	"\x10SharingEventType\x12\"\n" +
	"\x1eSHARING_EVENT_TYPE_UNSPECIFIED\x10\x00\x12$\n" +
	" SHARING_EVENT_TYPE_SHARE_CREATED\x10\x01\x12$\n" +
	" SHARING_EVENT_TYPE_SHARE_UPDATED\x10\x02\x12$\n" +
	" SHARING_EVENT_TYPE_SHARE_DELETED\x10\x03\x12$\n" +
	" SHARING_EVENT_TYPE_SHARE_ENABLED\x10\x04\x12%\n" +
	"!SHARING_EVENT_TYPE_SHARE_DISABLED\x10\x05\x12*\n" +
	"&SHARING_EVENT_TYPE_SMB_SHARE_CONNECTED\x10\x06\x12-\n" +
	")SHARING_EVENT_TYPE_SMB_SHARE_DISCONNECTED\x10\a\x12.\n" +
	"*SHARING_EVENT_TYPE_SMB_SESSION_ESTABLISHED\x10\b\x12-\n" +
	")SHARING_EVENT_TYPE_SMB_SESSION_TERMINATED\x10\t\x12&\n" +
	"\"SHARING_EVENT_TYPE_SMB_FILE_OPENED\x10\n" +
	"\x12&\n" +
	"\"SHARING_EVENT_TYPE_SMB_FILE_CLOSED\x10\v\x12)\n" +
	"%SHARING_EVENT_TYPE_NFS_EXPORT_CREATED\x10\f\x12)\n" +
	"%SHARING_EVENT_TYPE_NFS_EXPORT_DELETED\x10\r\x12 \n" +
	"\x1cSHARING_EVENT_TYPE_NFS_MOUNT\x10\x0e\x12\"\n" +
	"\x1eSHARING_EVENT_TYPE_NFS_UNMOUNT\x10\x0f\x12+\n" +
	"'SHARING_EVENT_TYPE_SHARE_ACCESS_GRANTED\x10\x10\x12*\n" +
	"&SHARING_EVENT_TYPE_SHARE_ACCESS_DENIED\x10\x11\x12%\n" +
	"!SHARING_EVENT_TYPE_QUOTA_EXCEEDED\x10\x12\x12/\n" +
	"+SHARING_EVENT_TYPE_CONNECTION_LIMIT_REACHED\x10\x13\x12*\n" +
	"&SHARING_EVENT_TYPE_BANDWIDTH_THRESHOLD\x10\x14B8Z6github.com/stratastor/toggle-rodent-proto/proto/eventsb\x06proto3"

var (
	file_proto_events_events_proto_rawDescOnce sync.Once
	file_proto_events_events_proto_rawDescData []byte
)

func file_proto_events_events_proto_rawDescGZIP() []byte {
	file_proto_events_events_proto_rawDescOnce.Do(func() {
		file_proto_events_events_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_events_events_proto_rawDesc), len(file_proto_events_events_proto_rawDesc)))
	})
	return file_proto_events_events_proto_rawDescData
}

var file_proto_events_events_proto_enumTypes = make([]protoimpl.EnumInfo, 8)
var file_proto_events_events_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_proto_events_events_proto_goTypes = []any{
	(SystemEventType)(0),               // 0: rodent.events.SystemEventType
	(StorageEventType)(0),              // 1: rodent.events.StorageEventType
	(NetworkEventType)(0),              // 2: rodent.events.NetworkEventType
	(SecurityEventType)(0),             // 3: rodent.events.SecurityEventType
	(ServiceEventType)(0),              // 4: rodent.events.ServiceEventType
	(IdentityEventType)(0),             // 5: rodent.events.IdentityEventType
	(AccessEventType)(0),               // 6: rodent.events.AccessEventType
	(SharingEventType)(0),              // 7: rodent.events.SharingEventType
	(*SystemStartupPayload)(nil),       // 8: rodent.events.SystemStartupPayload
	(*SystemConfigChangePayload)(nil),  // 9: rodent.events.SystemConfigChangePayload
	(*SystemUserPayload)(nil),          // 10: rodent.events.SystemUserPayload
	(*StoragePoolPayload)(nil),         // 11: rodent.events.StoragePoolPayload
	(*StorageDatasetPayload)(nil),      // 12: rodent.events.StorageDatasetPayload
	(*StorageSnapshotPayload)(nil),     // 13: rodent.events.StorageSnapshotPayload
	(*StorageTransferPayload)(nil),     // 14: rodent.events.StorageTransferPayload
	(*NetworkInterfacePayload)(nil),    // 15: rodent.events.NetworkInterfacePayload
	(*NetworkConnectionPayload)(nil),   // 16: rodent.events.NetworkConnectionPayload
	(*SecurityAuthPayload)(nil),        // 17: rodent.events.SecurityAuthPayload
	(*SecurityKeyPayload)(nil),         // 18: rodent.events.SecurityKeyPayload
	(*SecurityCertificatePayload)(nil), // 19: rodent.events.SecurityCertificatePayload
	(*ServiceStatusPayload)(nil),       // 20: rodent.events.ServiceStatusPayload
	(*IdentityUserPayload)(nil),        // 21: rodent.events.IdentityUserPayload
	(*IdentityGroupPayload)(nil),       // 22: rodent.events.IdentityGroupPayload
	(*IdentityComputerPayload)(nil),    // 23: rodent.events.IdentityComputerPayload
	(*AccessACLPayload)(nil),           // 24: rodent.events.AccessACLPayload
	(*AccessPermissionPayload)(nil),    // 25: rodent.events.AccessPermissionPayload
	(*SharingSharePayload)(nil),        // 26: rodent.events.SharingSharePayload
	(*SharingConnectionPayload)(nil),   // 27: rodent.events.SharingConnectionPayload
	(*SharingFileAccessPayload)(nil),   // 28: rodent.events.SharingFileAccessPayload
	nil,                                // 29: rodent.events.StorageDatasetPayload.PropertiesEntry
	nil,                                // 30: rodent.events.SharingSharePayload.PropertiesEntry
}
var file_proto_events_events_proto_depIdxs = []int32{
	29, // 0: rodent.events.StorageDatasetPayload.properties:type_name -> rodent.events.StorageDatasetPayload.PropertiesEntry
	30, // 1: rodent.events.SharingSharePayload.properties:type_name -> rodent.events.SharingSharePayload.PropertiesEntry
	2,  // [2:2] is the sub-list for method output_type
	2,  // [2:2] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_proto_events_events_proto_init() }
func file_proto_events_events_proto_init() {
	if File_proto_events_events_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_events_events_proto_rawDesc), len(file_proto_events_events_proto_rawDesc)),
			NumEnums:      8,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_events_events_proto_goTypes,
		DependencyIndexes: file_proto_events_events_proto_depIdxs,
		EnumInfos:         file_proto_events_events_proto_enumTypes,
		MessageInfos:      file_proto_events_events_proto_msgTypes,
	}.Build()
	File_proto_events_events_proto = out.File
	file_proto_events_events_proto_goTypes = nil
	file_proto_events_events_proto_depIdxs = nil
}
