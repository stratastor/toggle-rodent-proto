// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/rodent.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// RegisterRequest contains the information needed to register a Rodent node
type RegisterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JwtToken      string                 `protobuf:"bytes,1,opt,name=jwt_token,json=jwtToken,proto3" json:"jwt_token,omitempty"` // Authentication token
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterRequest) Reset() {
	*x = RegisterRequest{}
	mi := &file_proto_rodent_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRequest) ProtoMessage() {}

func (x *RegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rodent_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRequest.ProtoReflect.Descriptor instead.
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return file_proto_rodent_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterRequest) GetJwtToken() string {
	if x != nil {
		return x.JwtToken
	}
	return ""
}

// RegisterResponse contains the registration result
type RegisterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Domain        string                 `protobuf:"bytes,3,opt,name=domain,proto3" json:"domain,omitempty"`
	Certificate   string                 `protobuf:"bytes,4,opt,name=certificate,proto3" json:"certificate,omitempty"`
	PrivateKey    string                 `protobuf:"bytes,5,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	ExpiresOn     string                 `protobuf:"bytes,6,opt,name=expires_on,json=expiresOn,proto3" json:"expires_on,omitempty"`
	DevMode       bool                   `protobuf:"varint,7,opt,name=dev_mode,json=devMode,proto3" json:"dev_mode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterResponse) Reset() {
	*x = RegisterResponse{}
	mi := &file_proto_rodent_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterResponse) ProtoMessage() {}

func (x *RegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rodent_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterResponse.ProtoReflect.Descriptor instead.
func (*RegisterResponse) Descriptor() ([]byte, []int) {
	return file_proto_rodent_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegisterResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RegisterResponse) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *RegisterResponse) GetCertificate() string {
	if x != nil {
		return x.Certificate
	}
	return ""
}

func (x *RegisterResponse) GetPrivateKey() string {
	if x != nil {
		return x.PrivateKey
	}
	return ""
}

func (x *RegisterResponse) GetExpiresOn() string {
	if x != nil {
		return x.ExpiresOn
	}
	return ""
}

func (x *RegisterResponse) GetDevMode() bool {
	if x != nil {
		return x.DevMode
	}
	return false
}

// HeartbeatRequest contains periodic status information
type HeartbeatRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	SystemInfo    *SystemInfo            `protobuf:"bytes,2,opt,name=system_info,json=systemInfo,proto3" json:"system_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatRequest) Reset() {
	*x = HeartbeatRequest{}
	mi := &file_proto_rodent_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRequest) ProtoMessage() {}

func (x *HeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rodent_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRequest.ProtoReflect.Descriptor instead.
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_proto_rodent_proto_rawDescGZIP(), []int{2}
}

func (x *HeartbeatRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *HeartbeatRequest) GetSystemInfo() *SystemInfo {
	if x != nil {
		return x.SystemInfo
	}
	return nil
}

// HeartbeatResponse contains any commands or config updates
type HeartbeatResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatResponse) Reset() {
	*x = HeartbeatResponse{}
	mi := &file_proto_rodent_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatResponse) ProtoMessage() {}

func (x *HeartbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rodent_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatResponse.ProtoReflect.Descriptor instead.
func (*HeartbeatResponse) Descriptor() ([]byte, []int) {
	return file_proto_rodent_proto_rawDescGZIP(), []int{3}
}

func (x *HeartbeatResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *HeartbeatResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// SystemInfo contains system statistics and health information
type SystemInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CpuUsage      float64                `protobuf:"fixed64,1,opt,name=cpu_usage,json=cpuUsage,proto3" json:"cpu_usage,omitempty"`
	MemoryUsage   float64                `protobuf:"fixed64,2,opt,name=memory_usage,json=memoryUsage,proto3" json:"memory_usage,omitempty"`
	DiskUsage     float64                `protobuf:"fixed64,3,opt,name=disk_usage,json=diskUsage,proto3" json:"disk_usage,omitempty"`
	Warnings      []string               `protobuf:"bytes,4,rep,name=warnings,proto3" json:"warnings,omitempty"`
	Errors        []string               `protobuf:"bytes,5,rep,name=errors,proto3" json:"errors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemInfo) Reset() {
	*x = SystemInfo{}
	mi := &file_proto_rodent_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemInfo) ProtoMessage() {}

func (x *SystemInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rodent_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemInfo.ProtoReflect.Descriptor instead.
func (*SystemInfo) Descriptor() ([]byte, []int) {
	return file_proto_rodent_proto_rawDescGZIP(), []int{4}
}

func (x *SystemInfo) GetCpuUsage() float64 {
	if x != nil {
		return x.CpuUsage
	}
	return 0
}

func (x *SystemInfo) GetMemoryUsage() float64 {
	if x != nil {
		return x.MemoryUsage
	}
	return 0
}

func (x *SystemInfo) GetDiskUsage() float64 {
	if x != nil {
		return x.DiskUsage
	}
	return 0
}

func (x *SystemInfo) GetWarnings() []string {
	if x != nil {
		return x.Warnings
	}
	return nil
}

func (x *SystemInfo) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

// RodentRequest is sent from Rodent to Toggle
type RodentRequest struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	SessionId string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	RequestId string                 `protobuf:"bytes,2,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// Types that are valid to be assigned to Payload:
	//
	//	*RodentRequest_CommandResponse
	//	*RodentRequest_Event
	//	*RodentRequest_Ack
	Payload       isRodentRequest_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RodentRequest) Reset() {
	*x = RodentRequest{}
	mi := &file_proto_rodent_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RodentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RodentRequest) ProtoMessage() {}

func (x *RodentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rodent_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RodentRequest.ProtoReflect.Descriptor instead.
func (*RodentRequest) Descriptor() ([]byte, []int) {
	return file_proto_rodent_proto_rawDescGZIP(), []int{5}
}

func (x *RodentRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *RodentRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *RodentRequest) GetPayload() isRodentRequest_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *RodentRequest) GetCommandResponse() *CommandResponse {
	if x != nil {
		if x, ok := x.Payload.(*RodentRequest_CommandResponse); ok {
			return x.CommandResponse
		}
	}
	return nil
}

func (x *RodentRequest) GetEvent() *EventNotification {
	if x != nil {
		if x, ok := x.Payload.(*RodentRequest_Event); ok {
			return x.Event
		}
	}
	return nil
}

func (x *RodentRequest) GetAck() *Acknowledgement {
	if x != nil {
		if x, ok := x.Payload.(*RodentRequest_Ack); ok {
			return x.Ack
		}
	}
	return nil
}

type isRodentRequest_Payload interface {
	isRodentRequest_Payload()
}

type RodentRequest_CommandResponse struct {
	CommandResponse *CommandResponse `protobuf:"bytes,3,opt,name=command_response,json=commandResponse,proto3,oneof"`
}

type RodentRequest_Event struct {
	Event *EventNotification `protobuf:"bytes,4,opt,name=event,proto3,oneof"`
}

type RodentRequest_Ack struct {
	Ack *Acknowledgement `protobuf:"bytes,5,opt,name=ack,proto3,oneof"`
}

func (*RodentRequest_CommandResponse) isRodentRequest_Payload() {}

func (*RodentRequest_Event) isRodentRequest_Payload() {}

func (*RodentRequest_Ack) isRodentRequest_Payload() {}

// ToggleRequest is sent from Toggle to Rodent
type ToggleRequest struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	RequestId string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// Types that are valid to be assigned to Payload:
	//
	//	*ToggleRequest_Command
	//	*ToggleRequest_Config
	//	*ToggleRequest_Ack
	Payload       isToggleRequest_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ToggleRequest) Reset() {
	*x = ToggleRequest{}
	mi := &file_proto_rodent_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ToggleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToggleRequest) ProtoMessage() {}

func (x *ToggleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rodent_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToggleRequest.ProtoReflect.Descriptor instead.
func (*ToggleRequest) Descriptor() ([]byte, []int) {
	return file_proto_rodent_proto_rawDescGZIP(), []int{6}
}

func (x *ToggleRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *ToggleRequest) GetPayload() isToggleRequest_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *ToggleRequest) GetCommand() *CommandRequest {
	if x != nil {
		if x, ok := x.Payload.(*ToggleRequest_Command); ok {
			return x.Command
		}
	}
	return nil
}

func (x *ToggleRequest) GetConfig() *ConfigUpdate {
	if x != nil {
		if x, ok := x.Payload.(*ToggleRequest_Config); ok {
			return x.Config
		}
	}
	return nil
}

func (x *ToggleRequest) GetAck() *Acknowledgement {
	if x != nil {
		if x, ok := x.Payload.(*ToggleRequest_Ack); ok {
			return x.Ack
		}
	}
	return nil
}

type isToggleRequest_Payload interface {
	isToggleRequest_Payload()
}

type ToggleRequest_Command struct {
	Command *CommandRequest `protobuf:"bytes,2,opt,name=command,proto3,oneof"`
}

type ToggleRequest_Config struct {
	Config *ConfigUpdate `protobuf:"bytes,3,opt,name=config,proto3,oneof"`
}

type ToggleRequest_Ack struct {
	Ack *Acknowledgement `protobuf:"bytes,4,opt,name=ack,proto3,oneof"`
}

func (*ToggleRequest_Command) isToggleRequest_Payload() {}

func (*ToggleRequest_Config) isToggleRequest_Payload() {}

func (*ToggleRequest_Ack) isToggleRequest_Payload() {}

// CommandRequest represents a command sent to a Rodent node
type CommandRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommandType   string                 `protobuf:"bytes,1,opt,name=command_type,json=commandType,proto3" json:"command_type,omitempty"` // E.g., "zfs.dataset.create", "ad.user.add"
	Target        string                 `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`                              // Target resource
	Payload       []byte                 `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`                            // JSON-encoded command parameters
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommandRequest) Reset() {
	*x = CommandRequest{}
	mi := &file_proto_rodent_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandRequest) ProtoMessage() {}

func (x *CommandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rodent_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandRequest.ProtoReflect.Descriptor instead.
func (*CommandRequest) Descriptor() ([]byte, []int) {
	return file_proto_rodent_proto_rawDescGZIP(), []int{7}
}

func (x *CommandRequest) GetCommandType() string {
	if x != nil {
		return x.CommandType
	}
	return ""
}

func (x *CommandRequest) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *CommandRequest) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

// CommandResponse is the response to a CommandRequest
type CommandResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequestId     string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"` // Matches the request
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Payload       []byte                 `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"` // JSON-encoded response data
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommandResponse) Reset() {
	*x = CommandResponse{}
	mi := &file_proto_rodent_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommandResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandResponse) ProtoMessage() {}

func (x *CommandResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rodent_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandResponse.ProtoReflect.Descriptor instead.
func (*CommandResponse) Descriptor() ([]byte, []int) {
	return file_proto_rodent_proto_rawDescGZIP(), []int{8}
}

func (x *CommandResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *CommandResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CommandResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CommandResponse) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

// EventNotification represents an event from Rodent
type EventNotification struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventType     string                 `protobuf:"bytes,1,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"` // E.g., "zfs.dataset.created", "ad.user.added"
	Source        string                 `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`                        // Source of the event
	Timestamp     int64                  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                 // Unix timestamp in milliseconds
	Payload       []byte                 `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`                      // JSON-encoded event data
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventNotification) Reset() {
	*x = EventNotification{}
	mi := &file_proto_rodent_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNotification) ProtoMessage() {}

func (x *EventNotification) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rodent_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNotification.ProtoReflect.Descriptor instead.
func (*EventNotification) Descriptor() ([]byte, []int) {
	return file_proto_rodent_proto_rawDescGZIP(), []int{9}
}

func (x *EventNotification) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *EventNotification) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *EventNotification) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *EventNotification) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

// ConfigUpdate allows Toggle to push configuration changes to Rodent
type ConfigUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConfigType    string                 `protobuf:"bytes,1,opt,name=config_type,json=configType,proto3" json:"config_type,omitempty"` // E.g., "logging", "monitoring"
	Payload       []byte                 `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`                         // JSON-encoded configuration
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigUpdate) Reset() {
	*x = ConfigUpdate{}
	mi := &file_proto_rodent_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigUpdate) ProtoMessage() {}

func (x *ConfigUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rodent_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigUpdate.ProtoReflect.Descriptor instead.
func (*ConfigUpdate) Descriptor() ([]byte, []int) {
	return file_proto_rodent_proto_rawDescGZIP(), []int{10}
}

func (x *ConfigUpdate) GetConfigType() string {
	if x != nil {
		return x.ConfigType
	}
	return ""
}

func (x *ConfigUpdate) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

// Acknowledgement is used to confirm receipt of messages
type Acknowledgement struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequestId     string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Acknowledgement) Reset() {
	*x = Acknowledgement{}
	mi := &file_proto_rodent_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Acknowledgement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Acknowledgement) ProtoMessage() {}

func (x *Acknowledgement) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rodent_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Acknowledgement.ProtoReflect.Descriptor instead.
func (*Acknowledgement) Descriptor() ([]byte, []int) {
	return file_proto_rodent_proto_rawDescGZIP(), []int{11}
}

func (x *Acknowledgement) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *Acknowledgement) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *Acknowledgement) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_proto_rodent_proto protoreflect.FileDescriptor

const file_proto_rodent_proto_rawDesc = "" +
	"\n" +
	"\x12proto/rodent.proto\x12\x06rodent\".\n" +
	"\x0fRegisterRequest\x12\x1b\n" +
	"\tjwt_token\x18\x01 \x01(\tR\bjwtToken\"\xdb\x01\n" +
	"\x10RegisterResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x16\n" +
	"\x06domain\x18\x03 \x01(\tR\x06domain\x12 \n" +
	"\vcertificate\x18\x04 \x01(\tR\vcertificate\x12\x1f\n" +
	"\vprivate_key\x18\x05 \x01(\tR\n" +
	"privateKey\x12\x1d\n" +
	"\n" +
	"expires_on\x18\x06 \x01(\tR\texpiresOn\x12\x19\n" +
	"\bdev_mode\x18\a \x01(\bR\adevMode\"f\n" +
	"\x10HeartbeatRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x123\n" +
	"\vsystem_info\x18\x02 \x01(\v2\x12.rodent.SystemInfoR\n" +
	"systemInfo\"G\n" +
	"\x11HeartbeatResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\x9f\x01\n" +
	"\n" +
	"SystemInfo\x12\x1b\n" +
	"\tcpu_usage\x18\x01 \x01(\x01R\bcpuUsage\x12!\n" +
	"\fmemory_usage\x18\x02 \x01(\x01R\vmemoryUsage\x12\x1d\n" +
	"\n" +
	"disk_usage\x18\x03 \x01(\x01R\tdiskUsage\x12\x1a\n" +
	"\bwarnings\x18\x04 \x03(\tR\bwarnings\x12\x16\n" +
	"\x06errors\x18\x05 \x03(\tR\x06errors\"\xfe\x01\n" +
	"\rRodentRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x1d\n" +
	"\n" +
	"request_id\x18\x02 \x01(\tR\trequestId\x12D\n" +
	"\x10command_response\x18\x03 \x01(\v2\x17.rodent.CommandResponseH\x00R\x0fcommandResponse\x121\n" +
	"\x05event\x18\x04 \x01(\v2\x19.rodent.EventNotificationH\x00R\x05event\x12+\n" +
	"\x03ack\x18\x05 \x01(\v2\x17.rodent.AcknowledgementH\x00R\x03ackB\t\n" +
	"\apayload\"\xca\x01\n" +
	"\rToggleRequest\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x122\n" +
	"\acommand\x18\x02 \x01(\v2\x16.rodent.CommandRequestH\x00R\acommand\x12.\n" +
	"\x06config\x18\x03 \x01(\v2\x14.rodent.ConfigUpdateH\x00R\x06config\x12+\n" +
	"\x03ack\x18\x04 \x01(\v2\x17.rodent.AcknowledgementH\x00R\x03ackB\t\n" +
	"\apayload\"e\n" +
	"\x0eCommandRequest\x12!\n" +
	"\fcommand_type\x18\x01 \x01(\tR\vcommandType\x12\x16\n" +
	"\x06target\x18\x02 \x01(\tR\x06target\x12\x18\n" +
	"\apayload\x18\x03 \x01(\fR\apayload\"~\n" +
	"\x0fCommandResponse\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12\x18\n" +
	"\apayload\x18\x04 \x01(\fR\apayload\"\x82\x01\n" +
	"\x11EventNotification\x12\x1d\n" +
	"\n" +
	"event_type\x18\x01 \x01(\tR\teventType\x12\x16\n" +
	"\x06source\x18\x02 \x01(\tR\x06source\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x03R\ttimestamp\x12\x18\n" +
	"\apayload\x18\x04 \x01(\fR\apayload\"I\n" +
	"\fConfigUpdate\x12\x1f\n" +
	"\vconfig_type\x18\x01 \x01(\tR\n" +
	"configType\x12\x18\n" +
	"\apayload\x18\x02 \x01(\fR\apayload\"d\n" +
	"\x0fAcknowledgement\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage2\xcd\x01\n" +
	"\rRodentService\x12=\n" +
	"\bRegister\x12\x17.rodent.RegisterRequest\x1a\x18.rodent.RegisterResponse\x12@\n" +
	"\tHeartbeat\x12\x18.rodent.HeartbeatRequest\x1a\x19.rodent.HeartbeatResponse\x12;\n" +
	"\aConnect\x12\x15.rodent.RodentRequest\x1a\x15.rodent.ToggleRequest(\x010\x01B1Z/github.com/stratastor/toggle-rodent-proto/protob\x06proto3"

var (
	file_proto_rodent_proto_rawDescOnce sync.Once
	file_proto_rodent_proto_rawDescData []byte
)

func file_proto_rodent_proto_rawDescGZIP() []byte {
	file_proto_rodent_proto_rawDescOnce.Do(func() {
		file_proto_rodent_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_rodent_proto_rawDesc), len(file_proto_rodent_proto_rawDesc)))
	})
	return file_proto_rodent_proto_rawDescData
}

var file_proto_rodent_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_proto_rodent_proto_goTypes = []any{
	(*RegisterRequest)(nil),   // 0: rodent.RegisterRequest
	(*RegisterResponse)(nil),  // 1: rodent.RegisterResponse
	(*HeartbeatRequest)(nil),  // 2: rodent.HeartbeatRequest
	(*HeartbeatResponse)(nil), // 3: rodent.HeartbeatResponse
	(*SystemInfo)(nil),        // 4: rodent.SystemInfo
	(*RodentRequest)(nil),     // 5: rodent.RodentRequest
	(*ToggleRequest)(nil),     // 6: rodent.ToggleRequest
	(*CommandRequest)(nil),    // 7: rodent.CommandRequest
	(*CommandResponse)(nil),   // 8: rodent.CommandResponse
	(*EventNotification)(nil), // 9: rodent.EventNotification
	(*ConfigUpdate)(nil),      // 10: rodent.ConfigUpdate
	(*Acknowledgement)(nil),   // 11: rodent.Acknowledgement
}
var file_proto_rodent_proto_depIdxs = []int32{
	4,  // 0: rodent.HeartbeatRequest.system_info:type_name -> rodent.SystemInfo
	8,  // 1: rodent.RodentRequest.command_response:type_name -> rodent.CommandResponse
	9,  // 2: rodent.RodentRequest.event:type_name -> rodent.EventNotification
	11, // 3: rodent.RodentRequest.ack:type_name -> rodent.Acknowledgement
	7,  // 4: rodent.ToggleRequest.command:type_name -> rodent.CommandRequest
	10, // 5: rodent.ToggleRequest.config:type_name -> rodent.ConfigUpdate
	11, // 6: rodent.ToggleRequest.ack:type_name -> rodent.Acknowledgement
	0,  // 7: rodent.RodentService.Register:input_type -> rodent.RegisterRequest
	2,  // 8: rodent.RodentService.Heartbeat:input_type -> rodent.HeartbeatRequest
	5,  // 9: rodent.RodentService.Connect:input_type -> rodent.RodentRequest
	1,  // 10: rodent.RodentService.Register:output_type -> rodent.RegisterResponse
	3,  // 11: rodent.RodentService.Heartbeat:output_type -> rodent.HeartbeatResponse
	6,  // 12: rodent.RodentService.Connect:output_type -> rodent.ToggleRequest
	10, // [10:13] is the sub-list for method output_type
	7,  // [7:10] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_proto_rodent_proto_init() }
func file_proto_rodent_proto_init() {
	if File_proto_rodent_proto != nil {
		return
	}
	file_proto_rodent_proto_msgTypes[5].OneofWrappers = []any{
		(*RodentRequest_CommandResponse)(nil),
		(*RodentRequest_Event)(nil),
		(*RodentRequest_Ack)(nil),
	}
	file_proto_rodent_proto_msgTypes[6].OneofWrappers = []any{
		(*ToggleRequest_Command)(nil),
		(*ToggleRequest_Config)(nil),
		(*ToggleRequest_Ack)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_rodent_proto_rawDesc), len(file_proto_rodent_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_rodent_proto_goTypes,
		DependencyIndexes: file_proto_rodent_proto_depIdxs,
		MessageInfos:      file_proto_rodent_proto_msgTypes,
	}.Build()
	File_proto_rodent_proto = out.File
	file_proto_rodent_proto_goTypes = nil
	file_proto_rodent_proto_depIdxs = nil
}
